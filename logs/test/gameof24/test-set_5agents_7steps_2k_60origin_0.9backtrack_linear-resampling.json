{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.66667 (left: 16.66667)\nAnswer: (3 + 7) * (5 * 10 / 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) + 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) + 6 = 24 -> Input: 3 3 5 9\nSteps:\n3 * 9 = 27 (left: 3 5 27)\n27 - 5 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: (3 * 9) - 5 + (22 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n7 + 8 = 15 (left: 15 18)\n15 + 18 = 33 (left: 33)\nAnswer: ((6 * 3) + (7 + 8)) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 3 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) + 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 + 4 = 10 (left: 10) -> 10 - 10 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 3 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 4) + 7) * 3 -",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0) -> There are no possible next steps since there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps since there is no input given."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 * 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 -",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps since there is no input given."
                }
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 - 11 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 + 8 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 + 8 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 12 96)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please input numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (approximated) (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 4 * 25 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 4 * 25 = 100 (left: 100) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 - 4 = 9 (left: 9 - 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 - 4 = 9 (left: 9 - 4) -> 9 - 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 13 + 12 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> 6.25 - 8 = -1.75 (left: -1.75 8)",
                "Pruning": null
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 8 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "7 / 6 = 1.1666666666666667 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 6 = 1.1666666666666667 ( -> 6 - 7 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> Input: 13 1 42 1.17",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 7)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 + 7 = 13 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 / 11 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 + 13 = 14"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 - 13 = -12 (left: -12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 - 13 = -12 (left: -12 13) -> -12 / 13 = -0.923 (left: -0.923)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 11 13) -> 11 + 11 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 + 13 = 14"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 + 1 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 + 1 = 14 (left: 14 14) -> 14 - 14 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "13 /",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / -> 13 / 2 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 / 2 = 6.5"
                }
            },
            "Step 5": {
                "Step": "13 / -> 13 / 2 = 6.5 -> 13 + 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / -> 13 / 2 = 6.5 -> 13 + 2 = 15 (left: 15) -> There are no possible next steps for the input 15.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 + 13 = 14"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 * 13 = 13 (left: 13 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 * 13 = 13 (left: 13 14) -> 13 + 14 = 27 (left: 27)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 / 2 = 6.5"
                }
            },
            "Step 5": {
                "Step": "13 / -> 13 / 2 = 6.5 -> 13 + 2 = 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / -> 13 / 2 = 6.5 -> 13 + 2 = 15. -> 15 * 2 = 30 (left: 15 30)",
                "Pruning": null
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null
            },
            "Step 2": {
                "Step": " -> It seems you haven't provided any input for the next step calculation. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 - 10 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 * 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 - 10 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = 0.9 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9) -> 8 + 1 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9) -> There is only one possible next step: 8 + 1 = 9",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 6 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 6 9  -> 6 - 9 = -3 (left: -3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54 81"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81) -> 81 + 54 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "54 81"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81) -> 54 - 81 = -27 (left: -27)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 6 9) -> 2 + 3 = 5 (left: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54 81"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81) -> 54 - 81 = -27 (left: -27)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "54 81"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81) -> 54 - 81 = -27 (left: -27)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9) -> 1.5 + 9 = 10.5 (left: 9 10.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> Input is incomplete.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27) -> 2 + 27 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54 81"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 6 * 9 = 54 (left: 54 81) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. You need at least two numbers to perform an operation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> 1 * 8 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps for the number 6.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 / 8 \u2248 0.875 (left: 0.875 8)",
                "Pruning": null
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 3 = 10 (left: 3 10 12) -> 3 - 10 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (2 * 6) + (4 * 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 4 6 8\nSteps:\n6 / 2 = 3 (left: 3 4 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / 2) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18 3) -> 18 / 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24\nAnswer: (3 * 4) * (6 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 - 12 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 6) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 * 6) * (5 + 3) = 96",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 + 2 = 12 (left: 12)\n12 * 2 = 24\nAnswer: ((6 * 3) - 8) + 2 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 4\nSteps:\n2 * 4 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\nAnswer: (4 * 2) * (4 + 3) = 56",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 10 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 10 3 12) -> 10 + 3 = 13 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 3 12) -> 3 - 3 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 3 12) -> 3 - 3 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 7\nSteps:\n2 * 7 = 14 (left: 3 6 14)\n6 - 3 = 3 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 7) - (6 - 3)) +",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 - 12.6 = -8.6 (left: -8.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 - 12.6 = -8.6 (left: -8.6) -> -8.6 + 2 = -6.6",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 35 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 35 / 4 = 8.75 (left: 8.75 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 / 12.6 = 0.31746031746 (left: 0.31746031746)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 / 12.6 = 0.31746031746 (left: 0.31746031746) -> 0.31746031746 / 2 = 0.15873015873",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8.75 9"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 35 / 4 = 8.75 (left: 8.75 9) -> 8.75 - 9 = -0.25 (left: -0.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 35 / 4 = 8.75 (left: 8.75 9) -> 8.75 - 9 = -0.25 (left: -0.25) -> -0.25 * 2 = -0.5 (left: -0.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 / 13 \u2248 0.6923 (left: 0.6923)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8.75 9"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 35 / 4 = 8.75 (left: 8.75 9) -> 8.75 / 9 = 0.9722222222 (left: 0.9722222222)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 35 / 4 = 8.75 (left: 8.75 9) -> 8.75 / 9 = 0.9722222222 (left: 0.9722222222) -> 0.9722222222 * 2 = 1.9444444444",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8 11) -> 11 - 8 = 3 (left: 1 3) -> 1 / 3 = 0.3333 (left: 0.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8 11) -> 11 - 8 = 3 (left: 1 3) -> 1 / 3 = 0.3333 (left: 0.3333) -> 0.3333 * 2 = 0.6666",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8 11) -> 11 - 8 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8 11) -> 11 - 8 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8 11) -> 11 - 8 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 15"
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.5333 (left: 0.5333)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 * 13 = 34.71 (left: 34.71)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.5333333333333333 (left: 0.5333333333333333)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 15"
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 2 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 2 8 14) -> 14 - 8 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 15"
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 + 3 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 + 3 = 4.5 (left: 4.5 9) -> 4.5 - 9 = -4.5 (left: -4.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5 3 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 / 1.5 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 / 1.5 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 + 6 = 7.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 + 3 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 + 3 = 4.5 (left: 4.5 9) -> Input",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 3 9) -> 4 / 3 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 - 1.5 = 7.5 (left: 1.5 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 - 1.5 = 7.5 (left: 1.5 7.5) -> 7.5 - 1.5 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 / 1.5 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 / 1.5 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 / 1.5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 / 1.5 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 4"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 * 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 * 9 = 81 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> There is only 1 number left, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 * 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 4"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 5 4) -> 4 - 5 = -1 (left: -1) -> -1 + 14 = 13 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 11 - 2.2 = 8.8 (left: 8.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 11 - 2.2 = 8.8 (left: 8.8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps for the number 16, as it is a single number with no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 / 10 = 0.6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no more possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.2 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Input: 3 3 3 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Input: 3 3 3 3 -> 3 / 3 = 1 (left: 1 3 3)",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 3 10  -> Possible next steps:"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)  -> Answer: 3 + ((4 + 6) + 11) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 + 5 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 14 * 10 = 140 (left: 10)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (4 + 6) + (11 + 3) = 24"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 * 8 = 16 (left: 16 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33) -> 10.33 - 2 = 8.33 (left: 8.33)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 8  -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33) -> There are no possible next steps with the input of 10.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67) -> 7.67 is already a single number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 4 9) -> Input: 2 3 7 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There are no possible next steps for the input 11.97 as it is a single number and not an expression.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 2 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 2 9  -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67) -> 7.67 + 8 = 15.67 (left: 15.67)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20 13) -> 20 - 1 = 19 (left: 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21) -> 21 - 2 = 19 (left: 2 19)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 5 + 3 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 5 + 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 13 * 0 = 0 (left: 0 13)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5/5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 0 / 13 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 0 * 13 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 / 0 = undefined (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 7 12)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left: -> 12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 24 / 14 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10)"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.66666666667 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 - 1 = 0.666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 - 1 = 0.666666666 -> 1.66666666667 / 1 = 1.66666666667 (left: 1.66666666667 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33) -> There are no possible next steps with the input 2.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.66666666667 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 - 1 = 0.666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 - 1 = 0.666666666 -> 1.66666666667 + 1 = 2.66666666667 (left: 1 2.66666666667 0.666666666)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.66666666667 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 / 1 = 1.66666666667 (left: 1 1.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 / 1 = 1.66666666667 (left: 1 1.66666666667) -> 1 + 1.66666666667 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.66666666667 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 + 1 = 2.66666666667 (left: 1 2.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 + 1 = 2.66666666667 (left: 1 2.66666666667) -> 1 + 2.66666666667 = 3.66666666667 (left: 2.66666666667 3.66666666667)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.66666666667 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 * 1 = 1.66666666667 (left: 1 1.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> Input: 3 5 1 -> 5 / 3 = 1.66666666667 (left: 1.66666666667 1) -> 1.66666666667 * 1 = 1.66666666667 (left: 1 1.66666666667) -> 1 + 1.66666666667 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 17"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 1 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 1 17)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 * 13 = 585 (left: 585)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 17"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 17) -> 17 + 8 = 25",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 17"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 - 1 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 - 1 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 1 8 9) -> 1 + 8 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 45)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 45) -> 12 + 45 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 17"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 17 / 1 = 17 (left: 17) -> There are no more possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 5 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 5 10 13) -> 10 + 5 = 15 (left: 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 17"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 1 + 17 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 4 + 13 = 17 (left: 1 17) -> 1 + 17 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 * 13 = 65 (left: 13 65)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 * 13 = 65 (left: 13 65) -> 65 / 13 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1. -> There are no possible next steps with the input \"1.\"",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 8 = 25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 6 / 30 = 0.2 (left: 0.2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 6 = 0 (left: 5 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 6 = 0 (left: 5 0) -> 5 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> Input: 4 8 16 -> 8 * 16 = 128 (left: 4 128)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 5  -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "80 + 2 = 82"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "5 - 5 = 0 (left: 0 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8  -> 0 * 8 = 0 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps as there are not enough numbers to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 25 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 25 10) -> 25 / 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 25 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 25 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 6 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3, 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3, 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 / 3 = 4 (left: 4 12",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 + 12 = 15 (left: 12)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3, 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3, 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3, 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3, 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3, 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 6 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5.09"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 + 5.09 = 11.09 (left: 11.09)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 + 5.09 = 11.09 (left: 11.09) -> 11 + 0.09 = 11.09",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 / 11 = 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5.09"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 - 5.09 = 0.91 (left: 0.91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 - 5.09 = 0.91 (left: 0.91) -> There are no possible next steps for the input 0.91.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 11 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 8 * 11 = 88 (left: 88 42)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5.09"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 / 5.09 = 1.18 (left: 1.18 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 / 5.09 = 1.18 (left: 1.18 6) -> 1.18 + 6 = 7.18 (left: 7.18)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 8 * 11 = 88 (left: 88 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5.09"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 + 5.09 = 11.09 (left: 11.09)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09) -> 6 + 5.09 = 11.09 (left: 11.09) -> There are no possible next steps with the input 11.09 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 11 = 88 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 8 + 11 = 19 (left: 19 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15) -> 6 + 9 = 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15) -> 6 + 9 = 15 -> 6 - 9 = -3 (left: -3)",
                "Pruning": "NA"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 7 9 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 7 9 6) -> 9 - 7 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There is only one possible next step: 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "18 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 / 2 = 15.5 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 7 9 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 7 9 6) -> 7 / 9 = 0.777777778 (left: 0.777777778 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 =  -> 7 - 3 = 4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "18 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> There are no possible next steps for the input 31 as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided. -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> 18 / 8 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> 18 / 8 = 2 -> 18 * 8 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "18 / 2 = 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21) -> 18 + 21 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with just the number 18. -> 18 / 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "18 / 2 = 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 12 = 0.75 (left: 0.75 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 12 = 0.75 (left: 0.75 12) -> 0.75 + 12 = 12.75 (left: 12.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9) -> 9 - 1.5 = 7.5 (left: 7.5 9",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to operate with. -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> 18 / 2 = 9 -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> 8 + 8 + 2 = 18",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 9 - 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 9 - 3 -> 9 - 3 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 + 10 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 13 / 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps for the input of -2.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7  -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 + 2 = 2.846153846153846",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 7 9  -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 13 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 2 12) -> 5 * 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nAnswer: (3 * 3) * (5 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n9 + 3 = 12 (left: 3 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) * 2 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 7) - (5 - 3)) * 10 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 8",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 7 9\nSteps:\n7 + 9 = 16 (left: 3 3 16)\n3 * 3 = 9 (left: 9 16)\n16 - 9 = 7 (left: 7 9)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * (",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 - 6 = 2 (left: 2)  ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 7) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 + 8 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) + (6 - 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n3 * 7 = 21 (left: 21 14)\n21 - 14 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 14) * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) + (5 - 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "22"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> None.",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> Input: 3 9 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 5) -> 0.6666666666666666 + 5 = 5.666666666666667 (left: 5.666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number. -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)  -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 10 10"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 5 5 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 5 5 5 -> 5 * 5 = 25 (left: 5 25 5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: 8 1 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 10 10"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 2 * 10 = 20 (left: 10 10 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 2 * 10 = 20 (left: 10 10 20) -> Input: 5 3 15",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 2"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 25 / 2 = 12.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 2"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> None, since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 2"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 7 12) -> 12 / 7 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 2"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 + 2 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 2"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1.8 (left: 1.8 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "99 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 / 54 = 1.83333 (left: 1.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 / 54 = 1.83333 (left: 1.83333) -> There are no possible next steps for the input 1.83333.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 / 9 = 1.22 (left: 1.22 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.22 9"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 / 9 = 1.22 (left: 1.22 9) -> 1.22 * 9 = 10.98 (left: 10.98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 / 9 = 1.22 (left: 1.22 9) -> 1.22 * 9 = 10.98 (left: 10.98) -> There are no possible next steps with the input 10.98 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "99 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 / 54 = 1.8333 (left: 1.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 / 54 = 1.8333 (left: 1.8333) -> There are no possible next steps with the input 1.8333.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 11 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "99 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 - 54 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 - 54 = 45 (left: 45) -> There are no possible next steps for the input 45.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 - 2 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "99 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 * 54 = 5346 (left: 5346)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 9 11 54) -> 9 * 11 = 99 (left: 99 54) -> 99 * 54 = 5346 (left: 5346) -> 3 / 4 = 0 (left: 5 0 6)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 11 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 5 11 4) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with just one number provided. Can you please provide more numbers for me to work with?"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with just one number provided. Can you please provide more numbers for me to work with? -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with just one number provided. Can you please provide more numbers for me to work with? -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> Possible next steps: -> No valid input provided. Please enter a list of numbers separated by spaces.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> Possible next steps: -> No valid input provided. Please enter a list of numbers separated by spaces. -> No valid input provided. Please enter a list of numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "145"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 1 + 45 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with just one number provided. Can you please provide more numbers for me to work with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 16"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 11 4) -> 5 + 11 = 16 (left: 4 16) -> 16 / 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 11 4) -> 5 + 11 = 16 (left: 4 16) -> 16 / 4 = 4 (left: 4) -> There is only one possible next step: 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps with just the number 11."
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> There are no possible next steps with just the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> There are no possible next steps with just the number 11. -> None",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left:  -> It looks like you didn't provide an input. Could you please enter a set of numbers for me to find possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 8 + 8 = 16 (left: 16 18)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6 8) -> 6 / 4 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 * 2 = 160 (left: 160)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 5 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 5 + 10 = 15 (left: 14 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 30 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 10) -> 8 + 30 = 38 (left: 10 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)  -> There are no possible next steps with just the number 2.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 * 10 = 50 (left: 50 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 5 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 5 4 10) -> 4 + 10 = 14 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 5 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 14 / 5 = 2.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 / 8 = 0.15625",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41) -> -41 + 2 = -39 (left: -39)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 23) -> 23 - 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 16 - 5 - 0 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41) -> -41 * 2 = -82 (left: -82)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 11 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 1 * 6 * 5 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "25 66"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 16 + 5 = 21 (left: 21 0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 - 12 = 1 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 16 + 5 + 0 = 21 (left: 21)",
                "Pruning": "NA"
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 * 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 8"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 * 4 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 7 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 7 10  -> 10 - 7 = 3 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21) -> None - the input is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21) -> 21 + 8 = 29 (left: 8 29)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 14 7 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 14 7 13) -> 14 * 7 = 98 (left: 98 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 14 / 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 14 / 7 = 2 (left: 2) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left:  -> It seems like you didn't provide an input to work with. Please input a set of numbers for me to provide possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 / 14 = 0.428571 (left: 0.428571)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 / 14 = 0.428571 (left: 0.428571) -> 0.428571 - 2 = -1.571429 (left: -1.571429)",
                "Pruning": "NA"
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 + 12 = 20 (left: 6 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10) -> None, the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 2 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 2 14 12) -> 2 + 14 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.67 (left: 0.67 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 8 = 2 (left",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 8 = 2 (left -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 3  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "It seems like you did not provide an input for the calculation. Can you please provide the numbers you want to use for the next step?"
                }
            },
            "Step 5": {
                "Step": " -> It seems like you did not provide an input for the calculation. Can you please provide the numbers you want to use for the next step? -> - Subtract one number from another",
                "Pruning": null
            },
            "Step 6": {
                "Step": " -> It seems like you did not provide an input for the calculation. Can you please provide the numbers you want to use for the next step? -> - Subtract one number from another -> 8 - 6 = 2 (left: 2 8 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 4 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 4 = 16 (left: 4 16) -> 16 - 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 1 + 0 + 8 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.33 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null
            },
            "Step 4": {
                "Step": " -> It seems like you did not provide an input for the calculation. Can you please provide the numbers you want to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 9 - 12 = -3 (left: -3 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "-3 13"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 9 - 12 = -3 (left: -3 13) -> -3 + 13 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 9 - 12 = -3 (left: -3 13) -> -3 + 13 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                }
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> None. The input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps since there is only one number left."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 4 5  -> 9 * 3 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)"
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the number 11."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the number 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 / 11 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 / 11 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the number 11."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 * 7 = 21 (left: 11 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the number 11."
                }
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 5 * 10 = 50 (left: 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 26"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26) -> 26 / 8 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26) -> 26 / 8 = 3.25 (left: 3.25) -> There are no possible next steps given the input 3.25.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 26"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 5 * 4 = 20 (left: 20 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> Input: 5 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> Input: 5 3 7 -> 3 * 7 = ",
                "Pruning": null
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 22 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 22 13) -> 13 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 3"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9.75 (left: 9.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 22 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 22 13) -> 6 + 22 = 28 (left: 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 3"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 6 = 19 (left: 10 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 3"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 / 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 3"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 / 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 3"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 13 = 3 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 0"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 4 + 0 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 4 + 0 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 0"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 4 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 4 * 0 = 0 (left: 0) -> No operation can be performed with just one number (0).",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 0"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 4 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 4 * 0 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 0"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 5 * 3 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 9 = 0 (left: 4 0) -> 5 * 3 = -> 5 * 3 = 15",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> Input: 4 5 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> Input: 4 5 10 -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> Input: 4 5 10 -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> Input: 4 5 10 -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 10) -> 10 / 1.66666666667 = 6 (left: 6 10)",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 * 5 = 20 (left: 20 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 * 5 = 20 (left: 20 11) -> 20 - 11 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "20"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> None, as there is only one number given. -> There are no possible next steps since only one number is given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 - 4 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "20"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "20"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 / 4 = 2.75 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 7"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 7"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> 28 / 2 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 3": {
                "Step": "9 + 2 = 11 (left: 3 11 10)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 20 40"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 19"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 1 + 19 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 1 + 19 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 20 40)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 - 8 = -7 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 - 8 = -7 (left: -> -7 / -8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 20 40"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 20 40"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 20 40"
                }
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 - 7 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": "NA"
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 2 + 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 + 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> -1 is not a valid input. Please enter a valid number to continue.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 + 2 = 112 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24) -> 11 - 24 = -13 (left: -13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 3 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 3 7  -> 7 + 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 6 11) -> 3 * 6 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1 11) -> Input: 5 3 7",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 5 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.43 130"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 2.43 * 130 = 315.9 (left: 130)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.43 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 2.43 * 130 = 315.9 (left: 130)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.43 130"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 130 - 2.43 = 127.57 (left: 2.43)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.43 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 130 / 2.43 = 53.49794238683 (left: 2.43 53.49794238683)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 2 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 2 12 13) -> 13 + 2 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 17) -> 1.7 - 17 = -15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.43 130"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> Possible",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.43 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 18"
                }
            },
            "Step 3": {
                "Step": "13 + 5 = 18 (left: 10 12 18) -> 18 - 10 = 8 (left: 8 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 + 5 = 18 (left: 10 12 18) -> 18 - 10 = 8 (left: 8 18) -> 8 - 18 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.43 130"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 2.43 + 130 = 132.43 (left: 130)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.43 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 130 / 2.43 \u2248 53.50 (left: 130)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 / 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 / 5 =  -> 13 / 5 = 2.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17) -> 17 - 1.3 = 15.7 (left: 15.7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.43 130"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 130 / 2.43 = 53.4979423868 (left: 2.43)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.43 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 / 7 = 2.43 (left: 2.43 130) -> 5 + 5 = 10 (left",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 - 9 =",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 - 2) * (6 * 4) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.6666666666666667"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333334",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 2 = 20 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 6 = 11 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> There is only one number so no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (6 * (12 - 10)) + 12 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 7 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 7 22) -> 7 * 6 = 42 (left: 42 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - ",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 8 - 8 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left:  -> It seems like you did not provide an input for the next step calculation. Please provide the numbers to continue with the next step calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 8 - 6.4 = 1.6 (left: 1.6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4) -> 6.4 + 2 = 8.4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 1.14 * 8 = 9.12 (left: 9.12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 7 8 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 7 8 5) -> 8 / 7 = 1.14 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9.12 12"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 1.14 * 8 = 9.12 (left: 9.12 12) -> 12 / 9.12 = 1.3157 (left: 1.3157)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 1.14 * 8 = 9.12 (left: 9.12 12) -> 12 / 9.12 = 1.3157 (left: 1.3157) -> 1.3157 + 2 = 3.3157",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 - 1 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9.12 12"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 1.14 * 8 = 9.12 (left: 9.12 12) -> 9.12 * 12 = 109.44 (left: 109.44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14 (left: 1.14 8 12) -> 1.14 * 8 = 9.12 (left: 9.12 12) -> 9.12 * 12 = 109.44 (left: 109.44) -> There is only one number given in the input (109.44), so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8) -> 8 / 6 = 1.3333 (left: 1.3333 1.3333)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: 4 * (6 * 8 / 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 3 * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 + 8 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 6 4) -> 3 * 4 = 12 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 2 8) -> 2 + 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 3 * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.2857 9"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 * 9 = 11.5713 (left: 11.5713)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 * 9 = 11.5713 (left: 11.5713) -> There are no possible next steps for the input 11.5713.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 * 7 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 * 7 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 * 11 = 99 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 * 11 = 99 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.2857 9"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 - 9 = -7.7143 (left: -7.7143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 - 9 = -7.7143 (left: -7.7143) -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 * 7 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.2857 9"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> Input: -5 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> Input: -5 3 -> -5 * 3 = -15 (left: -15)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 63 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 ( -> 6 - 9 = -3 (left: -3 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 * 7 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 * 7 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5) -> There are no possible next steps with the input 3.5.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8) ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 1 * 4 * 3 = 12 (left: 12 143)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846) -> 0.846153846 - 0.846153846 = 0",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 3 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + (3 + 8)) + 13 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.846 + 2 = 2.846"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 + 2 = 2.846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 13) -> 13 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 3 -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.846 + 2 = 2.846"
                }
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 5) * (12 - 10) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 5) * (12 - 10) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 2 6 5) -> 2 + 6 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> - 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> - 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 112 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps for the input 5.5 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 8 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 2 8 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "312"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 - 1 * 2 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 - 1 * 2 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 4 / 6 is not a valid operation",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 4 / 6 is not a valid operation -> 4 + 6 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 0 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 - 0 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 - 0 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)  ",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 12 = 120 (left: 120 64)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 8 = 16 (left: 10 16 12) -> 10 * 16 = 160 (left: 12 160)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 - 0 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0. -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 / 12) * (8 - 8) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: 4 12) -> 48 / 16 = 3 (left: 3 8 3"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (1 * 3) + (8 + 13) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (1 * 3) + (8 + 13) = 24"
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 6"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> Input: 3 1",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> Input: 3 1 -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.5 3 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 * 3 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 * 3 = 7.5 (left: 7.5) -> This input is not valid for the given list of numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.5 3 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 * 3 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 * 3 = 7.5 (left: 7.5) -> 8 - 7.5 = 0.5 (left: 0.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.5 3 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 * 3 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 * 3 = 7.5 (left: 7.5) -> 7.5 / 2 = 3.75 (left: 3.75)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.5 3 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 + 3 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 2.5 + 3 = 5.5 (left: 5.5) -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.5 3 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 3 - 2.5 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 4 = 2.5 (left: 2.5 3  -> 3 - 2.5 = 0.5 (left: 0.5) -> 0.5 * 2 = 1",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the input 48.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the input 48. -> No possible next steps for the input 48.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "17 13"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 17 13) -> 17 - 13 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 17 13) -> 17 - 13 = 4 (left: 4) -> 4 * 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 23"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 2.125)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 7 * 11 = 77 (left: 77 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 7 * 11 = 77 (left: 77 13) -> 77 / 13 = 5.92 (left: 5.92)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> Possible next steps -> 7 * 8 = 56 (left: 8 14 56)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 * 1 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 * 1 = 6 (left: 6 5) -> 6 * 5 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 4"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 4"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 4"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112) -> 16 * 7 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 4"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36 + 2 = 38"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 4"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36 + 2 = 38"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 / 9 = 1.33 (left: 1.33 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 / 1 = 9 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 1 = 9 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 4"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 9 + 10 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 / 8 = 1.75 (left: 1.75 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 / 8 = 1.75 (left: 1.75 16) -> 1.75 * 16 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36 + 2 = 38"
                }
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps for the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps for the input 22. -> No possible next steps for the input 22.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 / 2 = 11 -> 22 + 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 / 3 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 11 - 1.5 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 2 = 12 (left: 8 12 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 2 5 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.4 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> Input: 59 7.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 14 - 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 14 - 7 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 7 7) -> 10 + 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 7 * 14 = 98 (left: 98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 7 * 14 = 98 (left: 98) -> There are no possible next steps with the input 98.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 12 / 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 14 / 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 14 / 7 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 12 - 2 = 10 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 7 * 14 = 98 (left: 98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 7) -> 2 + 12 = 14 (left: 7 14) -> 7 * 14 = 98 (left: 98) -> There are no possible next steps for the input 98 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 13 + 0.8333 = 13.8333 (left: 13.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 13 + 0.8333 = 13.8333 (left: 13.8333) -> There are no possible next steps for the input 13.8333.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 + 9 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 0 + 10 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 0 + 10 = 10 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10) -> 0 * 10 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> Possible next steps: -> There are no more possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 5 + ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 5 +  -> 5 + 8 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": "NA"
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 2 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5) -> 3 + 9 = 12 (left",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5) -> 24.5 - 7 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.5 7 7"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 7 - 10.5 = -3.5 (left: -3.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 * 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 * 3 = 3 (left: 3 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 + 7 = 8.5 (left: 8.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7) -> 3.5 + 7 = 10.5 (left: 10.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2.33 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2.33 ( -> 4 + 6 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 + 3.5 = 10.5 (left: 10.5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 + 3.5 = 10.5 (left: 10.5 7 -> 10.5 / 7 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) + (5 + 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24 -> Input: 3 3 5 7\nSteps:\n7 - 3 = 4 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((7 - 3) * 5) + 1 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 12 / 4 * 8 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 12 / 4 * 8 = 24 -> Input: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n5 + 7 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (5 + 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 8 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24 -> Input: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 8) -> 12 + 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 8 12 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 8 12 24) -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n15 - 7 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (6 + 9) - (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 20"
                }
            },
            "Step 5": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> 20 - 7 = 13 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> 20 - 7 = 13 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "2 * 10 = 20 (left: 1 6 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 20"
                }
            },
            "Step 5": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> 7 * 20 = 140 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> 7 * 20 = 140 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 20"
                }
            },
            "Step 5": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> 7 * 20 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> 7 * 20 = 140 (left: 140) -> 140 / 14 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 6 8) -> Input",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 - 8 = -",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 - 8 = - -> 1 - 8 = -7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 20"
                }
            },
            "Step 5": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> Possible -> There are many possible next steps depending on the specific rules or operations allowed. Some examples could include addition, subtraction, multiplication, division, exponentiation, etc. Please provide more information on the rules or operations to determine the specific possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 20"
                }
            },
            "Step 5": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> Input: 5 9 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 10 = 20 (left: 1 6 20) -> 1 + 6 = 7 (left: 7 20) -> Input: 5 9 2 -> 9 - 5 = 4 (left: 4 2)",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 * 7 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 * 7 = 7 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 * 7 = 7 ( -> 7 - 1 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 12 / 5 = 2.4 (left: 2.4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 12 / 5 = 2.4 (left: 2.4 12) -> 2.4 * 12 = 28.8 (left: 28.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> Input: 6 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 1 = 5 (left: 5 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 1 = 5 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (5 * 12) + (12 / 1) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 6 = 1.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 66"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 6 * 11 = 66 (left: 8 66) -> 8 * 66 = 528 (left: 528)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 6 * 11 = 66 (left: 8 66) -> 8 * 66 = 528 (left: 528) -> 5 + 2 = 7 (left: 7 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28 -> 14 - 14 = 0 (left: 0 14 28)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 - 1.2 = 4.8 (left: 4.8 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 - 1.2 = 4.8 (left: 4.8 8 -> 4.8 - 8 = -3.2 (left: -3",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 - 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 8) -> 6 * 11 = 66 (left: 8 66)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> No possible next steps - the input is already the result.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> No possible next steps - the input is already the result. -> No possible next steps - the input is already the result.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 * 6 = 36 (left: 5 8 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 5 8 36) -> 5 * 8 = 40 (left: 8 36 40)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> Input: 5 5 9 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 22"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75) -> There is only one number given (2.75), so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 * 8 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> No possible next steps, the equation is complete.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 22"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 + 22 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 + 22 = 30 (left: 30) -> There are no possible next steps with the number 30 as the only input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 11 * 15 = 165 (left: 7 165) -> 165 / 7 = 23.5714 (left: 23.5714)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 22"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 + 22 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 + 22 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11) -> 0.57 + 11 = 11.57 (left: 11.57)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 11 - 1 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> No possible next steps as there are not enough numbers given in the input.",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> Input: 6 12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> Input: 6 12 -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 - 2.5 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 64"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 10 / 3 = 3.33 (left: 3.33 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.5 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> Input: 3 9 -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 9 * 3 = 27 (left: 27 27) -> 27 / 27 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 64"
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 9 = 27 (left: 3 27 12) -> 27 / 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 9 = 27 (left: 3 27 12) -> 27 / 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 108 - ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 * 3 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the number 21.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the number 21. -> 21 * 2 = 42",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 9 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 9 12  -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 + 30 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 30"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 9  -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 27 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 3 27 12) -> 27 / 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 + 30 = 42 (left: 30 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 + 30 = 42 (left: 30 42) -> 30 / 42 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-3"
                }
            },
            "Step 5": {
                "Step": "3 * 9 = 27 (left: 9 12  -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 9 = 27 (left: 9 12  -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 3 5 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input should include at least 3 numbers to generate possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 10 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 5  -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 2"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 - 2 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input should include at least 3 numbers to generate possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 2"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 / 2 = 2 (left: 2) -> Input should include at least 3 numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input should include at least 3 numbers to generate possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input should include at least 3 numbers to generate possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 + 7 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 + 7 = 15 (left: 10 15) -> 10 - 15 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (7 - 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input should include at least 3 numbers to generate possible next steps."
                }
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 9 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 12  -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input: -> It looks like there might have been a mistake in the input. Could you please provide the correct input for me to generate possible next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input: -> It looks like there might have been a mistake in the input. Could you please provide the correct input for me to generate possible next steps? -> I'm sorry for the confusion. Please provide the correct input for me to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 9 / 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 9 / 3 =  -> 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 + 13 = 25 (left: 14 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "130 16"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16) -> 130 + 16 = 146 (left: 146)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16) -> 130 + 16 = 146 (left: 146) -> 146 - 4 = 142 (left: 142)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 13 - 10 = 3 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "14 25"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 + 13 = 25 (left: 14 25) -> 25 / 14 = 1.78571428571 (left: 1.79)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 + 13 = 25 (left: 14 25) -> 25 / 14 = 1.78571428571 (left: 1.79) -> 1.79 + 2 = 3.79",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 12 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 12 3) -> 12 / 4 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "123.5"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 / 2 = 61.75",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 / 2 = 61.75 -> 123.5 * 2 = 247",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 120"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 6 * 20 = 120 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 6 * 20 = 120 (left: 20) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 12) -> 12 / 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 120"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 120 / 6 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 120 / 6 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 120"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 120 - 6 = 114 (left: 114)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 120 - 6 = 114 (left: 114) -> 14 - 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 120"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 120 - 6 = 114 (left: 114)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> 120 - 6 = 114 (left: 114) -> 1 + 1 + 4 = 6 (left: 6 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 2 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 2 9  -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 120"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> Input: 3 9 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 * 12 = 120 (left: 6 120) -> Input: 3 9 12 -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 6"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 9 - 4 = 5 (left: 5 6) -> 5 - 6 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left:  -> It seems like you did not provide any input for the next step. If you could provide the numbers you would like to work with, I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> Input: 4 5 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> Input: 4 5 9 -> 9 / 5 = ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 6"
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 6"
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 + 1 = 7 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input 60.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left:  -> No input provided. Please provide a list of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 -",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 5 9 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 5 9 7 -> 7 * 5 = 35 (left: 9 35)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "8 + 5 = 13 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 5 = 13 (left:  -> It seems like you have not provided any input. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8) -> 2.6666666666666665 * 8 = 21.33333333333333 (left: 21.33333333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) ",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.67 12"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12) -> Input: 3 5 7 -> 7 / 5 = 1.4 (left: 3 1.4)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 8 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 8 48) -> Input: 8 48 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 + 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 6 = 1.33 (left"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 + 12 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 + 12 =  -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 6 = 1.33 (left"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left -> 6 - 8 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left -> 6 - 8 = -2 (left: -2) -> There are no possible next steps with the input -2.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 14 12) -> 8 / 14 = 0.57 (left: 0.57 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.67 12"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12) -> 6.67 + 12 = 18.67 (left: 18.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12) -> 6.67 + 12 = 18.67 (left: 18.67) -> There are no possible next steps for the input 18.67 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 / 1.33 = 6.02 (left: 6",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 6 = 1.33 (left"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 8) -> 8 / 6 = 1.33 (left -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input 0.75.",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 2 12 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 2 12 9) -> 9 + 2 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 1 = 9 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 2 3  -> 3 - 2 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 - 8 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 11 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 11  -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 6 14 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 6 14 11) -> 14 - 6 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 42"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42) -> 22 * 42 = 924 (left: 924)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42) -> 22 * 42 = 924 (left: 924) -> 9 + 2 + 4 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 2 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 2 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 42"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42) -> 22 / 42 = 0.52 (left: 0.52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42) -> 22 / 42 = 0.52 (left: 0.52) -> There is only one number provided in the input, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 12 11) -> 7 / 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 11 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 42"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42) -> 22 - 42 = -20 (left: -20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 11 42) -> 2 * 11 = 22 (left: 22 42) -> 22 - 42 = -20 (left: -20) -> -20 - 2 = -22 (left: -22)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 * 42 = 84 (left: 11 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1 (left: 1 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> 180 + 2 = 182",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 3": {
                "Step": "9 / 5 = 1.8 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 5 = 1.8 (left -> 9 + 5 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2016 0"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 / 0 is undefined as division by zero is not possible.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 / 0 is undefined as division by zero is not possible. -> No possible next steps as division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 - 14 = -2 (left: -2 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2016 0"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2016 0"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 + 0 = 2016 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2016 0"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2016 0"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 + 0 = 2016 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2016 0"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 + 0 = 2016",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "12 + 12 = 24 (left: 5 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2016 0"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 + 0 = 2016 (left: 2016)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2016 0"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 2 * 0 * 1 * 6 = 0 (left: 2016 0) -> 2016 + 0 = 2016 (left: 2016)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2016 0"
                }
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 2) * (7 / 3) * 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 / 12 = 0.16666666666666666 (left: 0.16666666666666666 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 / 12 = 0.16666666666666666 (left: 0.16666666666666666 12) -> 0.16666666666666666 * 12 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps can be taken with just the number 14.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 - 6 = -5 (left: -5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "-5 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 2 4 11) -> 11 - 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "-5 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30 120"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> 120 - 30 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "30 120"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> 30 + 120 = 150 (left: 150)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "-5 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left: -> 13 * 3 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 + 5 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 + 5 = 8 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 - 12 = -2 (left: 8 -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 - 12 = -2 (left: 8 -2) -> 8 - (-2) = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 + 12 = 92 (left: 92)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 / 13 = 1.38461538462 (left: 1.38461538462)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 * 120 = 960 (left: 960)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 12 - 10 = 2 (left: 8 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 12 - 10 = 2 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 * 15 = 120",
                "Pruning": null
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9  -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input provided. -> No input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 * 6 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input given. -> There are no possible next steps since there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (3 * (12 / 4)) + 8 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n3 + 5 = 8 (left: 2 8 10)\n8 - 2 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((3 + 5) - 2) * 10 / 2.5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 8\nSteps:\n4 * 8 = 32 (left: 2 3 32)\n3 + 2 = 5 (left: 5 32)\n5 * 32 = 160 (left: 160)\nAnswer: (3 + 2) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24\nAnswer: (((2 * 3) + 8) + 6) + 4 = 24.",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the given inputs can be simplified using the basic arithmetic operations to obtain the final result of 24.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> 8 - 5 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 2 9 4"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4 -> 2 + 9 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4 -> 2 + 9 = 11 (left: 4 11) -> 4 / 11 \u2248 0.3636 (left: 0.3636 11)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> No possible next steps with just one number. -> Input more numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 2 24 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24  -> 2 * 24 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 10 9) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 10 9) -> 10 - 9 = 1 (left: 1) -> There is only one number, so no operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 2 = 5.5 ("
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 ( -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 ( -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 * 0.1 = 0.01 (left: 0.01)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps with just one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 + 10 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps with just one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 32 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 32 9) -> 32 + 9 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps with just one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps with just one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 * 1 = 4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 * 9 = 18 (left: 2 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 9 = 18 (left: 2 8  -> 2 * 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> Input: 5 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> Input: 5 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps with just one number provided."
                }
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 6 7) -> 6 + 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 1 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8.4 11"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 8.4 + 11 = 19.4 (left: 19.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 8.4 + 11 = 19.4 (left: 19.4) -> There are no possible next steps with the input of 19.4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8.4 11"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 8.4 / 11 = 0.7636 (left: 0.7636)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 8.4 / 11 = 0.7636 (left: 0.7636) -> 0.7636 + 0.7636 = 1.5272",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 /",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 / -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8.4 11"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 11 - 8.4 = 2.6 (left: 2.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 11 - 8.4 = 2.6 (left: 2.6) -> There are no possible next steps for the input 2.6 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 + 11 = 21 (left: 21 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8.4 11"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 11 / 8.4 = 1.30952380952 (left: 1.30952380952)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 11 / 8.4 = 1.30952380952 (left: 1.30952380952) -> 1.30952380952 / 2 = 0.65476190476",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 1.6 + 10 = 11.6 (left: 11 11.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> Input: 5 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8.4 11"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 8.4 * 11 = 92.4 (left: 92.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 10 - 1.6 = 8.4 (left: 8.4 11) -> 8.4 * 11 = 92.4 (left: 92.4) -> There are no possible next steps with the input 92.4 as it is a single number and does not have any other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 - 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12) -> 25 * 12 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 1 = 12 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 4 13 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 4 13  -> 13 - 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 6 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 6 30 6) -> 6 * 6 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 6 30 6) -> 6 * 6 = 36 (left: 36) -> 36 / 9 = 4 (left: 4) -> There are no possible next steps with the number 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 2 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 2 1  -> 2 / 1 = 2 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8) ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 8 = 144 (left: 8) ",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1. -> There is not enough information provided to determine possible next steps. Please provide more numbers or operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 6 30 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 6 30 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 6 30 6) -> 6 * 6 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 6 30 6) -> 6 * 6 = 36 (left: 36) -> 36 + 8 = 44 -> 36 * 8 = 288 (left: 288 8 44)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14) -> 14 - 2 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 12 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 12 =  -> 6 * 12 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14 - 2 = 12"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14) -> 14 - 2 = 12 -> 14 / 2 = 7 (left: 12 7 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14) -> 14 - 2 = 12 -> 14 / 2 = 7 (left: 12 7 20) -> 12 - 7 = 5 (left: 5 7 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> No possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 * 3 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.5333 (left: 0.5333)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14 - 2 = 12"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14) -> 14 - 2 = 12 -> 12 - 8 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8) -> 8 * 5 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> 57 / 5 = 11.4 (left: 11.4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 8 = 32 (left: 11 13 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 8 = 32 (left: 11 13 32) -> 32 - 11 = 21 (left: 11 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.18 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 - 18 = -5.82 (left: -5.82)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.18 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 5 + 7 + 2 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.18 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 + 18 = 31.18 (left: 31.18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.18 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> 7 - 5 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846) -> 3.3846153846153846 / 3.3846153846153846 = 1",
                "Pruning": null
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 - 2 = 17 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "4 / 9 = 0.44 (left: 0.44 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 9 = 0.44 (left: 0.44 10  -> 10 / 0.44 = 22.7272727273 (left: 22.7272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 -> 10 - 4 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 36 - 13 = 23 (left: 10 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> -7 + 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "Cost": {
        "input_tokens": 836183,
        "output_tokens": 359055.5575396825,
        "total_cost": 0.9566748363095237
    }
}