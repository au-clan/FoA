{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "Evaluation": [
                41.0,
                21.0,
                0.002,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "6 - 4 = 2 (left: 1 2 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6)",
                "1 * 4 = 4 (left: 4 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                60.0,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.0",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "6 - 1 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5)",
                "6 - 1 = 5 (left: 1 4 5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.0,
                60.0,
                3.0,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "6 - 4 = 2 (left: 1 2 6) || 2 * 6 = 12 (left: 1 12)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)"
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 / 1 = 11 (left: 1 11 ",
                "11 - 1 = 10 (left: 1 11 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 1 10 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: 10 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                0.003,
                0.002,
                20.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- INIT",
                "3 <- 2.4",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 1 + 11 = 12 (left: 11 12)",
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || Input: 5 5 10",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: 10 11)"
            ]
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Step 0": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8)",
                "8 - 3 = 5 (left: 1 1 5)",
                "8 - 3 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 8)",
                "3 * 1 = 3 (left: 3 1 8)"
            ],
            "Evaluation": [
                2.0,
                2.001,
                1.002,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 0.0",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 8 / 3 = 2 (left: 2 3)",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 3 = 2 (left:",
                "3 + 1 = 4 (left: 4 3 8) || 8 - 4 = 4 (left: 4 3 8)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)",
                "3 * 1 = 3 (left: 1 3 8)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                2.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 + 1 = 4 (left: 1 4 8)",
                "3 * 1 = 3 (left: 1 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "3 * 1 = 3 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                2.0,
                0.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.3",
                "2 <- 0.4",
                "3 <- 2.2",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "3 * 1 = 3 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 1 = 23 (left: 1 23)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 / 3 = 2.6667 (left: 2.6667)",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 3 = 2 (left: 2 8)",
                "3 + 1 = 4 (left: 1 4 8) || 1 + 4 = 5 (left: 5 8)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)"
            ]
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 8 = 9 (left: 1 1 9)"
            ],
            "Evaluation": [
                0.003,
                22.0,
                1.001,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 8 = 8 (left: 2 8)",
                "8 / 1 = 8 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                1.0,
                0.003,
                1.002,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.3",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.3",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24"
            ]
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Step 0": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)"
            ],
            "Evaluation": [
                41.0,
                1.001,
                41.0,
                22.0,
                20.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- 0.3",
                "3 <- 0.0",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 / 6 = 1 (left: 1)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6)",
                "6 - 6 = 0 (left: 0 6 6) || 3 + 3 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                41.0,
                3.0,
                0.002,
                1.001,
                20.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || Possible next steps",
                "6 - 6 = 0 (left: 0 6 6) || 6 / 6 = 1 (left: 0 1)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6) || 3 + 3 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.1",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 - 6 = 0 (left: 0 6 6) || 6 / 6 = 1 (left: 0 1) || 0 + 1 = 1 (left: 1)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 - 6 = 0 (left: 0)",
                "6 * 6 = 36 (left: 6 6 36) || 36 / 6 = 6 (left: 6 6)"
            ]
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 1 = 11 (left: 1 2 ",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                3.0,
                20.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12) || 2 + 12 = 14 (left:",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12) || 12 - 1 = 11 (left:",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                40.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 2.4",
                "3 <- 1.2",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 - 6 = -5 (left: -5)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 12) || 2 * 2 = 4 (left: 4 12)"
            ]
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Step 0": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 2 = 4 (left: 4 2 6)",
                "6 / 2 = 3 (left: 2 3 ",
                "2 * 2 = 4 (left: 4 2 6)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- 0.1",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6)",
                "2 / 1 = 2 (left: 2 2 6) || Input: 3 3 5",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 4)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6)",
                "1 * 2 = 2 (left: 2 2 6) || 6 - 2 = 4 (left: 2 4)"
            ],
            "Evaluation": [
                40.0,
                0.003,
                0.003,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.0",
                "2 <- 1.3",
                "3 <- 1.0",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 6 / 0 = undefined (division by zero is undefined)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 * 1 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || Input: 2 4 6"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 0.1",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || 6 - 2 = 4 (left: 2 4)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 3 + 9 = 12 (left: 12 5)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 6 / 0 = undefined"
            ]
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 * 10 = 10 (left: 10 1 12)",
                "1 + 1 = 2 (left: 2 10 12)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 + 1 = 2 (left: 2 10 12)"
            ],
            "Evaluation": [
                1.001,
                21.001,
                60.0,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.0",
                "2 <- 1.1",
                "3 <- 1.2",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 2 11)",
                "10 + 1 = 11 (left: 1 11 12) || 1 * 11 = 11 (left: 11 12)",
                "10 + 1 = 11 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "10 + 1 = 11 (left: 1 11 12) || 1 * 11 = 11 (left: 11 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                40.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 2.2",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 12 / 1 = 12 (left: 1 12)",
                "10 + 1 = 11 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 / 1 = 1 (left: 1 10 12)",
                "12 - 10 = 2 (left: 1 2 12) || Possible next steps",
                "10 + 1 = 11 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)"
            ]
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Step 0": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                20.002,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.0",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 2 = 8 (left: 2 8)",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.4",
                "2 <- 2.0",
                "3 <- 2.4",
                "4 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 14 24)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)"
            ]
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Step 0": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.1",
                "2 <- 0.4",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 12) || 3 + 10 = 13 (left: 13 6)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14)"
            ],
            "Evaluation": [
                20.002,
                40.0,
                0.003,
                0.002,
                20.001
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.2",
                "2 <- 0.4",
                "3 <- 0.1",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7) "
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                40.001,
                0.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 1.0",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12) || 4 + 7 = 11 (left: 11 10)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)"
            ]
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "10": {
        "puzzle": "1 1 2 8",
        "Step 0": {
            "steps": [
                "8 - 1 = 7 (left: 1 2 7)",
                "8 - 2 = 6 (left: 1 2 6)",
                "2 + 8 = 10 (left: 1 10 ",
                "8 / 2 = 4 (left: 1 1 4)",
                "1 * 1 = 1 (left: 1 2 8)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                60.0,
                1.002,
                22.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.2",
                "2 <- 0.2",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10)",
                "2 + 8 = 10 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "2 + 8 = 10 (left: 1 10  || 1 + 10 = 11 (left: 11)",
                "8 / 2 = 4 (left: 1 4 ",
                "1 + 1 = 2 (left: 2 2 8)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 1.0",
                "2 <- 0.4",
                "3 <- 1.0",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 8 = 10 (left: 1 10  || 10 * 1 = 10 (left",
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 2 8) || 8 - 2 = 6 (left:",
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                21.001,
                0.003,
                1.001,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 2.0",
                "2 <- 1.0",
                "3 <- 2.0",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "2 + 8 = 10 (left: 1 10  || 10 * 1 = 10 (left || 1 + 10 = 11 (left: 11 )",
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 5 / 3 = 1.66667 (left: 1.66667 9",
                "2 + 8 = 10 (left: 1 10  || 10 * 1 = 10 (left || 10 + 1 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ]
        },
        "Input": "1 1 2 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "11": {
        "puzzle": "1 1 4 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 8)",
                "4 * 1 = 4 (left: 4 4 ",
                "1 * 1 = 1 (left: 1 4 8)",
                "1 + 1 = 2 (left: 2 4 8)",
                "1 * 1 = 1 (left: 1 4 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "4 * 1 = 4 (left: 1 4 8)",
                "1 * 4 = 4 (left: 4 4 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "8 / 4 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 4 8)"
            ],
            "Evaluation": [
                20.002,
                22.0,
                2.001,
                60.0,
                2.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.0",
                "2 <- 1.1",
                "3 <- 1.3",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "8 / 4 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2 8)",
                "4 * 1 = 4 (left: 1 4 8) || 8 - 4 = 4 (left: 1 4)",
                "1 * 4 = 4 (left: 4 4 8) || 4 + 4 = 8 (left: 8 8)",
                "8 / 4 = 2 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "1 * 4 = 4 (left: 4 4 8) || 4 + 4 = 8 (left: 8 8)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "4 * 1 = 4 (left: 1 4 8) || 8 - 4 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "4 * 1 = 4 (left: 1 4 8) || 8 - 4 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "4 * 1 = 4 (left: 1 4 8) || 4 + 8 = 12 (left: 1 12)",
                "4 * 1 = 4 (left: 1 4 8) || 8 / 4 = 2 (left: 2 4)",
                "4 * 1 = 4 (left: 1 4 8) || 8 - 4 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)"
            ]
        },
        "Input": "1 1 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "12": {
        "puzzle": "1 1 5 8",
        "Step 0": {
            "steps": [
                "1 + 1 = 2 (left: 2 5 8)",
                "5 + 1 = 6 (left: 6 1 8)",
                "5 + 1 = 6 (left: 1 6 8)",
                "1 - 1 = 0 (left: 0 5 8)",
                "1 * 1 = 1 (left: 1 5 8)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 5 8)",
                "8 - 1 = 7 (left: 1 5 7)",
                "1 + 5 = 6 (left: 6 6 8)",
                "5 - 1 = 4 (left: 1 4 8)",
                "8 - 1 = 7 (left: 1 5 7)"
            ],
            "Evaluation": [
                1.001,
                1.002,
                3.0,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.3",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 5 8) || Input: 3 7",
                "1 - 1 = 0 (left: 0 5 8) || 0 + 5 = 5 (left: 5 8)",
                "8 - 1 = 7 (left: 1 5 7) || 5 + 1 = 6 (left: 6 7)",
                "8 - 1 = 7 (left: 1 5 7)",
                "1 + 5 = 6 (left: 6 6 8) || Input: 1 1 2 2"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 1 = 7 (left: 1 5 7) || 1 + 5 = 6 (left: 6 7)",
                "5 + 1 = 6 (left: 1 6 8)",
                "8 - 1 = 7 (left: 1 5 7) || 7 - 5 = 2 (left: 1 2)",
                "8 - 1 = 7 (left: 1 5 7) || 1 * 5 = 5 (left: 5 7)"
            ]
        },
        "Input": "1 1 5 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "13": {
        "puzzle": "4 6 11 11",
        "Step 0": {
            "steps": [
                "6 - 4 = 2 (left: 2 11 11)",
                "11 - 4 = 7 (left: 6 7 ",
                "4 * 6 = 24 (left: 11 11 24)",
                "6 * 11 = 66 (left: 4 66 11)",
                "4 * 6 = 24 (left: 11 11 24)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                1.002,
                21.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 11 = 66 (left: 4 66 11) || 4 + 66 = 70 (left: 11 70)",
                "6 * 11 = 66 (left: 4 66 11) || 66 / 4 = 16.5 (left: 16.5 11)",
                "4 + 6 = 10 (left: 10 11 11)",
                "6 * 11 = 66 (left: 4 66 11) || 66 - 4 = 62 (left: 11 62)",
                "11 - 4 = 7 (left: 6 7  || 6 * 7 = 42 (left: 42)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                1.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- 0.1",
                "3 <- 0.3",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 11 = 66 (left: 4 66 11) || 66 / 4 = 16.5 (left: 16.5 11) || 16.5 * 11 = 181.5 (left: 181.5)",
                "11 - 6 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 6 7  || 6 + 7 = 13 (left: 13)",
                "6 * 11 = 66 (left: 4 66 11) || 11 * 4 = 44 (left: 44)",
                "4 + 6 = 10 (left: 10 11 11) || 11 - 10 = 1 (left: 1 11 11)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 2.1",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "6 * 11 = 66 (left: 4 66 11) || 4 * 66 = 264 (left: 11 264)",
                "11 - 6 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55)",
                "6 * 11 = 66 (left: 4 66 11) || 66 - 11 = 55 (left: 4 55)",
                "11 + 4 = 15 (left: 6 11 15)",
                "4 * 6 = 24 (left: 24 11 11)"
            ]
        },
        "Input": "4 6 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "14": {
        "puzzle": "1 1 3 12",
        "Step 0": {
            "steps": [
                "12 - 3 = 9 (left: 1 1 9)",
                "1 + 3 = 4 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 3 12)",
                "1 + 1 = 2 (left: 2 3 12)",
                "3 + 1 = 4 (left: 1 4 12)"
            ],
            "Evaluation": [
                3.0,
                2.001,
                41.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.2",
                "2 <- 0.2",
                "3 <- INIT",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12) || 1 * 3 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 3 12) || 12 / 1 = 12 (left:",
                "1 * 1 = 1 (left: 1 3 12) || 3 / 1 = 3 (left: 3 12)",
                "12 / 3 = 4 (left: 1 4 12)",
                "12 - 3 = 9 (left: 1 1 9) || 3 + 3 = 6 (left: 5"
            ],
            "Evaluation": [
                0.003,
                0.001,
                1.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.2",
                "2 <- 0.2",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12) || 1 + 3 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 3 12) || 1 * 3 = 3 (left: 3 12)",
                "3 * 1 = 3 (left: 3 3 12)",
                "1 * 1 = 1 (left: 1 3 12) || 12 / 1 = 12 (left:"
            ],
            "Evaluation": [
                0.003,
                60.0,
                1.002,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.4",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12) || 12 / 1 = 12 (left: || 12 - 1 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "1 * 1 = 1 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 3 12) || 12 / 1 = 12 (left: || 12 + 1 = 13",
                "1 * 1 = 1 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)"
            ]
        },
        "Input": "1 1 3 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "15": {
        "puzzle": "2 2 2 12",
        "Step 0": {
            "steps": [
                "2 * 2 = 4 (left: 4 2 12)",
                "2 * 12 = 24 (left: 2 24 2)",
                "12 - 2 = 10 (left: 2 2 10)",
                "2 - 2 = 0 (left: 0 2 12)",
                "2 + 2 = 4 (left: 2 4 12)"
            ],
            "Evaluation": [
                2.001,
                21.001,
                2.001,
                21.001,
                2.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 12 = 24 (left: 2 24 2) || 2 * 24 = 48 (left: 2 48 2)",
                "2 - 2 = 0 (left: 0 2 12) || 12 + 2 = 14 (left: 2 14)",
                "2 - 2 = 0 (left: 0 2 12) || 12 / 2 = 6 (left: 0 6)",
                "2 - 2 = 0 (left: 0 2 12) || Input: 2 3 7",
                "2 * 12 = 24 (left: 2 24 2) || 24 / 2 = 12 (left: 12 2)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.2",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 12 = 24 (left: 2 24 2) || 24 / 2 = 12 (left: 12 2) || 12 / 2 = 6 (left: 6)",
                "2 - 2 = 0 (left: 0 2 12) || 12 / 2 = 6 (left: 0 6) || 6 - 6 = 0 (left: 0)",
                "2 * 2 = 4 (left: 4 2 12) || 12 / 4 = 3 (left: 2 3)",
                "2 * 2 = 4 (left: 4 2 12)",
                "2 * 12 = 24 (left: 2 24 2) || 2 * 24 = 48 (left: 2 48 2) || 48 / 2 = 24 (left: 2 24 2)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.002,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.2",
                "2 <- 2.4",
                "3 <- 1.2",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 12 = 24 (left: 2 24 2) || 2 * 24 = 48 (left: 2 48 2) || 48 / 2 = 24 (left: 2 24 2) || 24 / 2 = 12 (left: 2 12 2)",
                "2 - 2 = 0 (left: 0 2 12) || 12 / 2 = 6 (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "2 * 12 = 24 (left: 2 24 2) || 2 * 24 = 48 (left: 2 48 2) || 48 / 2 = 24 (left: 2 24 2) || 24 - 2 = 22 (left: 2 22 2)",
                "2 - 2 = 0 (left: 0 2 12) || 12 / 2 = 6 (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "2 * 12 = 24 (left: 2 24 2) || 2 * 24 = 48 (left: 2 48 2) || 2 + 48 = 50 (left: 2 50 2)"
            ]
        },
        "Input": "2 2 2 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "16": {
        "puzzle": "1 1 4 12",
        "Step 0": {
            "steps": [
                "1 / 1 = 1 (left: 1 4 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 * 1 = 12 (left: 1 4 ",
                "1 * 1 = 1 (left: 1 4 12)",
                "12 - 4 = 8 (left: 1 8 12)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.001,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.1",
                "2 <- 0.1",
                "3 <- 0.1",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9)",
                "12 / 4 = 3 (left: 1 3 12) || 12 - 1 = 11 (left: 3 11)",
                "12 / 4 = 3 (left: 1 3 12) || 3 - 1 = 2 (left: 2 12)",
                "12 / 4 = 3 (left: 1 3 12) || 12 / 1 = 12 (left:",
                "12 / 4 = 3 (left: 1 3 12) || 3 * 12 = 36 (left: 1 36)"
            ],
            "Evaluation": [
                60.0,
                1.002,
                60.0,
                21.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.4",
                "2 <- 1.2",
                "3 <- 1.3",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "12 / 4 = 3 (left: 1 3 12) || 3 * 12 = 36 (left: 1 36) || 1 + 36 = 37 (left: 37)",
                "12 / 4 = 3 (left: 1 3 12) || 3 - 1 = 2 (left: 2 12) || 12 * 2 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12) || 12 / 1 = 12 (left: || 12 / 12 = 1 (left: 1)",
                "12 / 4 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 1 + 9 = 10 (left: 9 10)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 1.0",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12) || 3 - 1 = 2 (left: 2 12) || 12 * 2 = 24 (left: 24) || Answer: (1 - 1 + 4) * 12 = 24",
                "12 / 4 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "12 / 4 = 3 (left: 1 3 12) || 3 * 12 = 36 (left: 1 36) || 1 + 36 = 37 (left: 37)",
                "12 / 4 = 3 (left: 1 3 12) || 3 - 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12) || 3 - 1 = 2 (left: 2 12) || 12 * 2 = 24 (left: 24) || Answer: (12 / 4) * (3 - 1) = 24"
            ]
        },
        "Input": "1 1 4 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "17": {
        "puzzle": "1 1 12 12",
        "Step 0": {
            "steps": [
                "12 - 1 = 11 (left: 1 12 11)",
                "12 - 1 = 11 (left: 1 12 11)",
                "1 + 1 = 2 (left: 2 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 + 1 = 13 (left: 1 12 13)"
            ],
            "Evaluation": [
                21.001,
                1.002,
                0.003,
                21.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 1 = 11 (left: 1 12 11) || 12 - 1 = 11 (left: 11 11)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left: 12)",
                "12 - 1 = 11 (left: 1 12 11) || 11 - 1 = 10 (left:",
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left:"
            ],
            "Evaluation": [
                0.003,
                21.001,
                0.003,
                40.001,
                40.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.3",
                "2 <- 1.4",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left: || 11 * 1 = 11 (left: 1 11)",
                "12 - 1 = 11 (left: 1 12 11) || 11 - 1 = 10 (left: || 11 / 1 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left: || 11 / 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11) || 11 - 1 = 10 (left: || 11 - 1 = 10 (left: 10)",
                "12 - 1 = 11 (left: 1 12 11) || 11 - 1 = 10 (left: || 11 / 1 = 11 (left: 1 11)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                21.001,
                0.001,
                21.0
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- 0.3",
                "3 <- 2.4",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left: || 11 * 1 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left: || 11 * 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "12 - 1 = 11 (left: 1 11 12) || 1 * 11 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 12 11) || 11 - 1 = 10 (left: || 11 / 1 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 12 11) || 11 + 1 = 12 (left: || 11 + 1 = 12 (left: empty)"
            ]
        },
        "Input": "1 1 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "18": {
        "puzzle": "3 3 3 8",
        "Step 0": {
            "steps": [
                "3 * 3 = 9 (left: 9 3 8)",
                "3 / 3 = 1 (left: 1 3 ",
                "8 - 3 = 5 (left: 3 5 ",
                "3 + 3 = 6 (left: 3 6 8)",
                "3 * 3 = 9 (left: 9 3 8)"
            ],
            "Evaluation": [
                2.0,
                0.0,
                1.001,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 - 3 = 5 (left: 3 3 5)",
                "8 - 3 = 5 (left: 3 5  || 3 + 5 = 8 (left: 8)",
                "3 + 3 = 6 (left: 3 6 8)",
                "8 - 3 = 5 (left: 3 3 5)",
                "3 * 3 = 9 (left: 9 3 8)"
            ],
            "Evaluation": [
                3.0,
                0.002,
                1.002,
                2.001,
                22.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 3 = 9 (left: 9 3 8) || 3 * 8 = 24 (left: 24)",
                "3 + 3 = 6 (left: 3 6 8)",
                "8 - 3 = 5 (left: 3 3 5)",
                "8 - 3 = 5 (left: 3 3 5) || 3 * 3 = 9 (left: 5 9)",
                "3 * 3 = 9 (left: 9 3 8) || 9 / 3 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                60.0,
                3.0,
                3.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.0",
                "2 <- 1.3",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "3 * 3 = 9 (left: 9 3 8) || 9 / 3 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 * 3 = 9 (left: 9 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 3) * (3 * 8) = 24",
                "8 - 3 = 5 (left: 3 3 5) || 3 * 3 = 9 (left: 9 5)",
                "3 * 3 = 9 (left: 9 3 8) || 9 / 3 = 3 (left: 3 8) || 5 * 10 = 50",
                "3 * 3 = 9 (left: 9 3 8) || 9 / 3 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)"
            ]
        },
        "Input": "3 3 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "19": {
        "puzzle": "1 1 2 6",
        "Step 0": {
            "steps": [
                "2 * 1 = 2 (left: 2 6 4)",
                "1 + 1 = 2 (left: 2 2 6)",
                "6 - 1 = 5 (left: 1 2 ",
                "1 * 1 = 1 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 6)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                0.002,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.4",
                "2 <- 0.1",
                "3 <- 0.1",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6) || 4 * 4 = 16 (left: 4",
                "1 + 1 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)",
                "1 + 1 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6)",
                "1 + 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6) || Input: 3 5 7"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.4",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6) || 6 - 2 = 4 (left: 2 4)",
                "1 + 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 0 * 6 = 0 (left: 6)",
                "1 + 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)"
            ],
            "Evaluation": [
                1.001,
                60.0,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 2.1",
                "2 <- 0.4",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)",
                "1 + 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)"
            ]
        },
        "Input": "1 1 2 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "20": {
        "puzzle": "1 1 2 11",
        "Step 0": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11)",
                "1 + 1 = 2 (left: 2 2 11)",
                "11 - 1 = 10 (left: 1 2 10)",
                "2 * 1 = 2 (left: 2 2 11)",
                "2 * 1 = 2 (left: 2 2 11)"
            ],
            "Evaluation": [
                0.003,
                21.001,
                3.0,
                1.001,
                21.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.4",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11) || 2 - 2 = 0 (left: 0 11)",
                "2 * 1 = 2 (left: 2 2 11) || 2 * 2 = 4 (left: 4 11)",
                "1 + 1 = 2 (left: 2 2 11) || 2 + 2 = 4 (left: 4 11)",
                "2 * 1 = 2 (left: 2 2 11)",
                "2 * 1 = 2 (left: 2 2 11) || 11 - 2 = 9 (left: 2 9)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                20.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 1 = 2 (left: 2 2 11) || Input: 1 4",
                "2 * 1 = 2 (left: 2 2 11) || 2 * 2 = 4 (left: 4 11)",
                "2 * 1 = 2 (left: 2 2 11) || 2 + 2 = 4 (left: 4 11)",
                "2 * 1 = 2 (left: 2 2 11) || 2 / 2 = 1 (left: 1 11)",
                "2 * 1 = 2 (left: 2 2 11) || 2 - 2 = 0 (left: 0 11)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                20.0,
                0.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 2.3",
                "2 <- 1.3",
                "3 <- 0.1",
                "4 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 1 = 10 (left: 1 2 10) || 2 + 10 = 12 (left: 1 12)",
                "2 * 1 = 2 (left: 2 2 11) || 2 / 2 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "2 * 1 = 2 (left: 2 2 11) || 2 * 2 = 4 (left: 4 11)",
                "1 + 1 = 2 (left: 2 2 11) || 11 / 2 = 5.5 (left: 2 5.5)",
                "2 * 1 = 2 (left: 2 2 11) || 2 - 2 = 0 (left: 0 11)"
            ]
        },
        "Input": "1 1 2 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "21": {
        "puzzle": "1 2 3 4",
        "Step 0": {
            "steps": [
                "3 + 4 = 7 (left: 1 2 7)",
                "2 * 3 = 6 (left: 1 6 4)",
                "4 - 3 = 1 (left: 1 2 4)",
                "3 + 4 = 7 (left: 1 2 7)",
                "3 + 4 = 7 (left: 1 2 7)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                2.001,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.4",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 4) || 6 - 4 = 2 (left: 2)",
                "3 + 4 = 7 (left: 1 2 7) || 2 - 1 = 1 (left: 1 7)",
                "2 * 3 = 6 (left: 1 6 4) || 1 + 6 = 7 (left: 4 7)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 3 = 6 (left: 1 6 4) || 1 + 6 = 7 (left: 4 7)"
            ],
            "Evaluation": [
                0.001,
                20.0,
                1.0,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 1.3",
                "2 <- 0.1",
                "3 <- 1.1",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 4) || 1 * 6 = 6 (left: 6 4)",
                "1 * 2 = 2 (left: 2 3 4) || 4 / 3 = 1.333333",
                "2 * 3 = 6 (left: 1 6 4) || 6 / 1 = 6 (left: 6 4)",
                "3 + 4 = 7 (left: 1 2 7) || 2 - 1 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "1 * 2 = 2 (left: 2 3 4) || 4 - 2 = 2 (left: 2 3)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 4) || 1 * 6 = 6 (left: 6 4) || 10 + 3 = 13 (left: 13)",
                "1 * 2 = 2 (left: 2 3 4) || 3 * 4 = 12 (left: 2 12)",
                "1 * 2 = 2 (left: 2 3 4)",
                "1 * 2 = 2 (left: 2 3 4) || 3 * 4 = 12 (left: 2 12)",
                "2 * 3 = 6 (left: 1 6 4) || 6 / 1 = 6 (left: 6 4) || 6 / 4 = 1.5 (left: 1.5)"
            ]
        },
        "Input": "1 2 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "22": {
        "puzzle": "11 11 12 12",
        "Step 0": {
            "steps": [
                "11 / 11 = 1 (left: 1 12 12)",
                "11 / 11 = 1 (left: 1 12 12)",
                "11 * 11 = 121 (left: 12 12 121)",
                "12 - 11 = 1 (left: 11 1 ",
                "12 + 11 = 23 (left: 11 12 23)"
            ],
            "Evaluation": [
                0.003,
                21.001,
                0.003,
                20.0,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "11 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1  || 11 / 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 11 1  || 1 + 11 = 12 (left: 12)",
                "11 / 11 = 1 (left: 1 12 12) || 12 / 1 = 12 (left: 12 12)"
            ],
            "Evaluation": [
                0.003,
                41.0,
                40.0,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.1",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 11 = 1 (left: 11 1  || 11 / 1 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "11 / 11 = 1 (left: 1 12 12) || 12 - 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 11 1  || 11 / 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "12 - 11 = 1 (left: 11 1  || 11 / 1 = 11 (left: 1 11) || Input: 3 9 27",
                "12 - 11 = 1 (left: 11 1  || 11 / 1 = 11 (left: 1 11) || 1 + 11 = 12"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- 0.1",
                "4 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 11 = 1 (left: 11 1  || 11 - 1 = 10 (left: 10)",
                "12 - 11 = 1 (left: 11 1  || 11 / 1 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "12 - 11 = 1 (left: 11 12 1) || 12 - 11 = 1 (left: 1 1)",
                "11 / 11 = 1 (left: 1 12 12) || 1 + 12 = 13 (left: 12 13)",
                "12 - 11 = 1 (left: 11 12 1) || 12 - 11 = 1 (left: 1 1)"
            ]
        },
        "Input": "11 11 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "23": {
        "puzzle": "3 7 7 8",
        "Step 0": {
            "steps": [
                "3 * 7 = 21 (left: 7 8 21)",
                "8 - 7 = 1 (left: 3 7 1)",
                "3 + 7 = 10 (left: 7 7 8)",
                "3 + 7 = 10 (left: 7 7 8)",
                "3 + 7 = 10 (left: 7 7 8)"
            ],
            "Evaluation": [
                2.0,
                3.0,
                2.001,
                3.0,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.0",
                "4 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "7 * 3 = 21 (left: 7 8 21)",
                "7 / 3 = 2 (left: 2 7 8)",
                "3 * 7 = 21 (left: 7 8 ",
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 7 8) || 7 + 7 = 14 (left: 8 14)"
            ],
            "Evaluation": [
                3.0,
                1.002,
                0.003,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 0.3",
                "3 <- 1.1",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8) || Input: 4 6 10 15",
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 + 7 = 10 (left: 7 7 8) || 7 * 7 = 49 (left: 8 49)",
                "7 / 3 = 2 (left: 2 7 8) || 2 + 7 = 9 (left: 8 9)",
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                21.0,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 1.3",
                "2 <- 2.2",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 7 = 10 (left: 7 7 8) || 7 * 7 = 49 (left: 8 49) || 49 / 8 = 6.125 (left: 6.125)",
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 + 7 = 10 (left: 7 7 8) || 7 * 7 = 49 (left: 8 49) || 8 * 49 = 392 (left: 392)",
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8) || 4 + 7 = 11 (left: 11 9)",
                "3 * 7 = 21 (left: 7 8 21) || 21 / 7 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)"
            ]
        },
        "Input": "3 7 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "24": {
        "puzzle": "1 1 13 13",
        "Step 0": {
            "steps": [
                "13 - 1 = 12 (left: 1 13 12)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 * 1 = 13 (left: 13 13 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 - 1 = 12 (left: 1 12 13)"
            ],
            "Evaluation": [
                21.001,
                0.003,
                0.003,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)",
                "13 - 1 = 12 (left: 1 12 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 - 1 = 12 (left: 1 13 12) || 1 + 13 = 14 (left: 12 14)",
                "13 + 1 = 14 (left: 1 13 14)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 1 = 12 (left: 1 13 12) || 13 - 1 = 12 (left: 12 12)",
                "13 - 1 = 12 (left: 1 13 12) || 1 * 13 = 13 (left: 13 12)",
                "13 + 1 = 14 (left: 1 13 14) || 14 - 1 = 13 (left:",
                "13 + 1 = 14 (left: 1 13 14) || 14 / 1 = 14 (left: 13 14)",
                "13 - 1 = 12 (left: 1 13 12) || 13 - 1 = 12 (left: 12 12)"
            ],
            "Evaluation": [
                40.001,
                0.003,
                0.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 2.0",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 1 = 12 (left: 1 13 12) || 12 - 1 = 11 (left: 11 12)",
                "13 - 1 = 12 (left: 1 13 12) || 13 - 1 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "13 - 1 = 12 (left: 1 13 12) || 13 - 1 = 12 (left: 12 12) || 12 + 12 = 24",
                "13 - 1 = 12 (left: 1 13 12) || 13 - 1 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "13 + 1 = 14 (left: 1 13 14) || 14 / 1 = 14 (left: 14 14)"
            ]
        },
        "Input": "1 1 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "25": {
        "puzzle": "1 2 4 12",
        "Step 0": {
            "steps": [
                "12 - 4 = 8 (left: 1 2 8)",
                "4 + 12 = 16 (left: 1 2 16)",
                "12 - 2 = 10 (left: 1 4 10)",
                "12 - 2 = 10 (left: 1 4 10)",
                "2 * 4 = 8 (left: 1 8 12)"
            ],
            "Evaluation": [
                21.001,
                1.002,
                3.0,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- 0.1",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "4 * 3 = 12 (left: 1 12 12)",
                "12 - 4 = 8 (left: 1 2 8)",
                "12 - 4 = 8 (left: 1 2 8) || 2 * 1 = 2 (left: 2 8)",
                "4 + 12 = 16 (left: 1 2 16) || 16 - 2 = 14 (left: 1 14)",
                "12 - 4 = 8 (left: 1 2 8)"
            ],
            "Evaluation": [
                0.003,
                22.0,
                0.001,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.0",
                "2 <- 1.4",
                "3 <- 1.1",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 4 = 8 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                1.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 5 + 10 = 15 (left: 15)",
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "12 - 4 = 8 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ]
        },
        "Input": "1 2 4 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "26": {
        "puzzle": "1 1 3 6",
        "Step 0": {
            "steps": [
                "1 / 1 = 1 (left: 1 3 6)",
                "3 * 1 = 3 (left: 3 1 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "3 * 1 = 3 (left: 3 3 6)",
                "6 - 3 = 3 (left: 1 3 3)"
            ],
            "Evaluation": [
                22.0,
                21.0,
                0.002,
                3.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.1",
                "2 <- INIT",
                "3 <- 0.0",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 6) || 6 - 3 = 3 (left: 3 3)",
                "3 * 1 = 3 (left: 3 1 6) || 3 * 1 = 3 (left: 3 6)",
                "1 + 3 = 4 (left: 4 1 6)",
                "1 / 1 = 1 (left: 1 3 6) || 1 + 3 = 4 (left: 4 6)",
                "3 * 1 = 3 (left: 3 1 6) || 6 - 1 = 5 (left: 3 5)"
            ],
            "Evaluation": [
                20.0,
                3.0,
                22.0,
                40.0,
                1.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.3",
                "3 <- 1.2",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 3 = 4 (left: 4 1 6) || 6 - 4 = 2 (left: 2 4)",
                "1 + 3 = 4 (left: 4 1 6) || 4 + 1 = 5 (left: 5 6)",
                "1 / 1 = 1 (left: 1 3 6) || 1 + 3 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "1 + 3 = 4 (left: 4 1 6) || 6 - 4 = 2 (left:",
                "1 / 1 = 1 (left: 1 3 6) || 1 + 3 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.001,
                1.002,
                0.002,
                20.001,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.3",
                "2 <- 0.1",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "1 / 1 = 1 (left: 1 3 6) || 1 + 3 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 / 1 + 3) * 6 = 24",
                "1 + 3 = 4 (left: 4 1 6) || 6 - 4 = 2 (left: || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "3 * 1 = 3 (left: 3 1 6) || 3 * 1 = 3 (left: 3 3)",
                "1 / 1 = 1 (left: 1 3 6) || 1 + 3 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 / 1 + 3) * 6 = 24",
                "1 / 1 = 1 (left: 1 3 6) || 1 + 3 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 / 1 + 3) * 6 = 24"
            ]
        },
        "Input": "1 1 3 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "27": {
        "puzzle": "1 1 3 9",
        "Step 0": {
            "steps": [
                "9 - 3 = 6 (left: 1 1 6)",
                "3 * 1 = 3 (left: 1 3 9)",
                "9 / 3 = 3 (left: 1 3 ",
                "9 - 3 = 6 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 9)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.002,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.4",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 3 = 3 (left: 1 3 9)",
                "9 - 3 = 6 (left: 1 3 6) || 3 * 6 = 18 (left: 1 18)",
                "9 - 3 = 6 (left: 1 3 6) || 6 / 3 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 3 9) || 1 + 3 = 4 (left: 4 9)",
                "9 - 3 = 6 (left: 1 3 6) || 3 * 6 = 18 (left: 1 18)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                0.002,
                40.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.3",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 9) || 9 / 3 = 3 (left: 1 3)",
                "9 - 3 = 6 (left: 1 3 6) || 3 - 1 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 3 9) || 1 + 3 = 4 (left: 4 9) || 4 + 9 = 13 (left: 9)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 / 3 = 3 (left: 1 3 3)"
            ],
            "Evaluation": [
                21.0,
                0.001,
                0.002,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.3",
                "2 <- 0.3",
                "3 <- 2.3",
                "4 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 9) || 9 / 3 = 3 (left: 1 3) || 3 / 1 = 3 (left: 3)",
                "1 * 1 = 1 (left: 1 3 9) || 1 + 3 = 4 (left: 4 9) || Input: 5 5",
                "9 - 3 = 6 (left: 1 3 6) || 1 * 3 = 3 (left: 3 6)",
                "9 - 1 = 8 (left: 1 3 8) || 8 / 3 = 2.67 (",
                "9 - 1 = 8 (left: 1 3 8) || 3 / 1 = 3 (left: 3 8)"
            ]
        },
        "Input": "1 1 3 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "28": {
        "puzzle": "7 7 12 12",
        "Step 0": {
            "steps": [
                "7 / 7 = 1 (left: 1 12 12)",
                "7 * 7 = 49 (left: 12 12 49)",
                "7 * 12 = 84 (left: 12 19 84)",
                "7 - 7 = 0 (left: 0 12 12)",
                "12 / 7 = 1 (left: 1 12 "
            ],
            "Evaluation": [
                0.002,
                2.001,
                0.003,
                60.0,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "12 / 7 = 1 (left: 1 12 ",
                "7 - 7 = 0 (left: 0 12 12) || 12 - 0 = 12 (left: 0 12)",
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12) || 12 + 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12) || 12 / 12 = 1 (left: 0 1)"
            ],
            "Evaluation": [
                0.002,
                20.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.4",
                "2 <- 1.2",
                "3 <- 1.3",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12) || 12 + 12 = 24",
                "7 - 7 = 0 (left: 0 12 12) || 12 / 12 = 1 (left: 0 1) || 0 / 1 = 0 (left: 0)",
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12) || 12 + 0 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12) || 12 * 12 = 144 (left: 144)"
            ],
            "Evaluation": [
                20.002,
                0.002,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12) || 12 + 12 = 24 || 24 - 12 =",
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12) || 12 + 12 = 24 || 24 + 12 = 36 (left: 12 36)",
                "7 - 7 = 0 (left: 0 12 12) || 12 / 12 = 1 (left: 0 1) || 0 + 1 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12) || 12 / 12 = 1 (left: 0 1) || 0 + 1 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12) || 12 * 0 = 0 (left: 12 12) || 12 - 12 = 0 (left: 0)"
            ]
        },
        "Input": "7 7 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "29": {
        "puzzle": "4 6 7 7",
        "Step 0": {
            "steps": [
                "7 - 4 = 3 (left: 3 7 7)",
                "6 + 7 = 13 (left: 4 7 13)",
                "6 + 7 = 13 (left: 4 7 13)",
                "7 - 6 = 1 (left: 1 7 7)",
                "6 + 7 = 13 (left: 4 7 13)"
            ],
            "Evaluation": [
                60.0,
                20.002,
                3.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.1",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "7 - 4 = 3 (left: 3 7 7) || 7 / 3 = 2 (left: 2 7)",
                "6 + 7 = 13 (left: 4 7 13) || 13 / 7 = ",
                "7 - 4 = 3 (left: 3 7 7) || 7 / 3 = 2 (left: 2 7)",
                "7 - 4 = 3 (left: 3 7 7) || 7 - 3 = 4 (left: 4 7 7)",
                "7 - 4 = 3 (left: 3 7 7) || 3 + 7 = 10 (left: 7 10)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                22.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "4 + 6 = 10 (left: 7 7 10)",
                "7 - 4 = 3 (left: 3 7 7) || 3 + 7 = 10 (left: 7 10)",
                "7 - 4 = 3 (left: 3 7 7) || 3 + 7 = 10 (left: 7 10)",
                "7 - 4 = 3 (left: 3 7 7) || 3 + 7 = 10 (left: 7 10)",
                "4 * 6 = 24 (left: 7 7 24)"
            ],
            "Evaluation": [
                60.0,
                0.0,
                0.002,
                1.001,
                2.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "6 + 7 = 13 (left: 4 7 13) || 4 * 7 = 28 (left: 28 13)",
                "4 + 6 = 10 (left: 7 7 10) || 10 * 7 = 70 (left: 7 70)",
                "4 + 6 = 10 (left: 7 7 10) || 7 * 7 = 49 (left: 10 49)",
                "4 + 6 = 10 (left: 7 7 10) || 7 + 7 = 14 (left: 10 14)",
                "4 + 6 = 10 (left: 7 7 10) || 7 / 7 = 1 (left: 1 10)"
            ]
        },
        "Input": "4 6 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "30": {
        "puzzle": "1 1 2 13",
        "Step 0": {
            "steps": [
                "13 - 2 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 13)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                60.0,
                60.0,
                21.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 13) || 2 - 2 = 0 (left: 0 13)",
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "2 * 1 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 13) || 2 + 2 = 4 (left: 4 13)"
            ],
            "Evaluation": [
                0.001,
                60.0,
                22.0,
                41.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 1.1",
                "2 <- 1.2",
                "3 <- 0.4",
                "4 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 1 = 12 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 10 / 5 = 2 (left: 2)",
                "2 * 1 = 2 (left: 2 2 13) || 13 - 2 = ",
                "1 + 1 = 2 (left: 2 2 13) || 13 / 2 = 6.5 (left: 2 6.5)",
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)"
            ],
            "Evaluation": [
                40.001,
                0.002,
                0.003,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 0.2",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25)",
                "13 - 1 = 12 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 24 = 1 (left: 1)",
                "13 - 1 = 12 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25)"
            ]
        },
        "Input": "1 1 2 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "31": {
        "puzzle": "1 1 5 6",
        "Step 0": {
            "steps": [
                "5 * 1 = 5 (left: 5 5 6)",
                "5 + 1 = 6 (left: 1 6 6)",
                "6 - 5 = 1 (left: 1 1 ",
                "1 * 5 = 5 (left: 1 5 6)",
                "1 + 5 = 6 (left: 1 6 6)"
            ],
            "Evaluation": [
                1.002,
                21.0,
                0.003,
                41.0,
                41.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.0",
                "2 <- 0.1",
                "3 <- 0.1",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 5 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)",
                "5 * 1 = 5 (left: 5 5 6) || 6 - 5 = 1 (left: 1 6)",
                "5 + 1 = 6 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "5 + 1 = 6 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6 6)",
                "1 * 5 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                1.001,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 0.4",
                "2 <- 0.3",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 1 = 5 (left: 5 5 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "1 + 5 = 6 (left: 1 6 6) || 1 + 6 = 7 (left: 6 7)",
                "1 * 5 = 5 (left: 1 5 6) || 6 / 1 = 6 (left: 6 6)",
                "1 + 5 = 6 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6)",
                "1 + 5 = 6 (left: 6 6 6)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                20.002,
                20.002,
                1.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 1.3",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 5 = 5 (left: 1 5 6) || 5 * 1 = 5 (left: 5 6)",
                "1 + 5 = 6 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "1 + 5 = 6 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "5 + 1 = 6 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6 6) || 6 * 5 = 30 (left: 30)",
                "1 * 5 = 5 (left: 1 5 6) || 5 / 1 = 5 (left: 5 6)"
            ]
        },
        "Input": "1 1 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "32": {
        "puzzle": "1 1 11 13",
        "Step 0": {
            "steps": [
                "13 - 11 = 2 (left: 1 2 13)",
                "11 + 1 = 12 (left: 1 12 13)",
                "1 + 11 = 12 (left: 12 1 13)",
                "13 - 11 = 2 (left: 1 2 13)",
                "13 - 11 = 2 (left: 1 2 13)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                20.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11)",
                "13 - 1 = 12 (left: 1 11 ",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 * 11 = 11 (left: 11 1 13)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.0",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || Input: 6 3"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 1.0",
                "3 <- 0.3",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "13 - 11 = 2 (left: 1 2 13) || Input: 3 5",
                "13 - 11 = 2 (left: 1 2 13) || 13 - 2 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)"
            ]
        },
        "Input": "1 1 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "33": {
        "puzzle": "1 6 6 12",
        "Step 0": {
            "steps": [
                "6 + 1 = 7 (left: 6 7 12)",
                "12 / 6 = 2 (left: 1 2 ",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)"
            ],
            "Evaluation": [
                22.0,
                20.002,
                40.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 6 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12) || 6 / 6 = 1 (left: 1 12)",
                "12 - 6 = 6 (left: 1 6 ",
                "6 * 1 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12)",
                "6 - 1 = 5 (left: 5 6 12)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                20.002,
                3.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.0",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 6 = 6 (left: 1 6  || 1 + 6 = 7 (left: 7)",
                "1 + 6 = 7 (left: 6 7 12)",
                "12 - 6 = 6 (left: 1 6  || 1 * 6 = 6 (left: 6)",
                "1 * 6 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 12)",
                "6 * 1 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)"
            ],
            "Evaluation": [
                0.0,
                3.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.3",
                "2 <- 1.3",
                "3 <- 1.0",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 6 = 6 (left: 1 6  || 1 + 6 = 7 (left: 7)",
                "6 * 1 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 12)",
                "6 * 1 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "1 * 6 = 6 (left: 6 6 12) || 6 / 6 = 1 (left: 1 12)",
                "12 - 6 = 6 (left: 1 6 6)"
            ]
        },
        "Input": "1 6 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "34": {
        "puzzle": "4 5 12 12",
        "Step 0": {
            "steps": [
                "12 + 4 = 16 (left: ",
                "12 / 5 = 2.4 (left: 4 ",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 / 4 = 3 (left: 3 5 12)",
                "12 / 4 = 3 (left: 3 12 12)"
            ],
            "Evaluation": [
                0.0,
                0.001,
                21.001,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12) || 3 * 12 = 36 (left: 12 36)",
                "12 / 4 = 3 (left: 3 12 12) || 3 + 12 = 15 (left: 12 15)",
                "12 - 4 = 8 (left: 8 5 12)",
                "4 + 5 = 9 (left: 9 12 12) || 9 - 12 = -3 (left: -3 12 12)",
                "12 / 4 = 3 (left: 3 12 12) || 12 - 3 = 9 (left: 9 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                22.0,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.2",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12) || 12 / 3 = 4 (left: 4 12 12)",
                "4 + 5 = 9 (left: 9 12 12) || 9 + 12 = 21 (left: 12 21)",
                "12 / 4 = 3 (left: 3 12 12) || 3 * 12 = 36 (left: 12 12 36)",
                "12 / 4 = 3 (left: 3 12 12) || 3 + 12 = 15 (left: 12 15)",
                "12 / 4 = 3 (left: 3 12 12) || 12 / 3 = 4 (left: 4 12)"
            ],
            "Evaluation": [
                21.001,
                0.003,
                40.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.2",
                "2 <- 0.4",
                "3 <- 2.0",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12) || 12 / 3 = 4 (left: 4 12 12) || 12 / 4 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 12 12) || 3 * 12 = 36 (left: 12 12 36) || 36 / 12 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 12 12) || 12 / 3 = 4 (left: 4 12 12)",
                "12 / 4 = 3 (left: 3 12 12) || 12 / 3 = 4 (left: 4 12 12) || 12 - 4 = 8 (left: 8 12 12)",
                "12 / 4 = 3 (left: 3 12 12) || 3 + 12 = 15 (left: 12 15)"
            ]
        },
        "Input": "4 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "35": {
        "puzzle": "4 6 13 13",
        "Step 0": {
            "steps": [
                "6 + 13 = 19 (left: 4 19 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "13 - 4 = 9 (left: 6 9 13)"
            ],
            "Evaluation": [
                41.0,
                0.003,
                1.002,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.0",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 6 = 7 (left: ",
                "13 - 4 = 9 (left: 6 9 13) || 6 * 9 = 54 (left: 13 54)",
                "6 + 13 = 19 (left: 4 19 13) || 4 + 19 = 23 (left: 13 23)",
                "13 - 4 = 9 (left: 6 9 13) || 13 + 6 = 19 (left: 9 19)",
                "13 - 4 = 9 (left: 9 6 13)"
            ],
            "Evaluation": [
                0.0,
                2.001,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 0.0",
                "3 <- 1.4",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 4 = 9 (left: 9 6 13) || 6 * 13 = 78 (left: 9 78)",
                "13 - 4 = 9 (left: 9 6 13) || 9 + 6 = 15 (left: 15 13)",
                "6 + 13 = 19 (left: 4 19 13) || 4 * 19 = 76 (left: 76 13)",
                "13 - 4 = 9 (left: 9 6 13) || 6 + 13 = 19 (left: 9 19)",
                "13 - 4 = 9 (left: 6 9 13) || 9 - 6 = 3 (left: 3 9 13)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- 1.4",
                "4 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 4 = 9 (left: 9 6 13) || 6 - 9 = -3 (left: -3 13)",
                "6 + 13 = 19 (left: 4 19 13) || 4 + 19 = 23 (left: 13 23)",
                "6 + 13 = 19 (left: 4 19 13) || 19 - 4 = 15 (left: 15 13)",
                "13 - 4 = 9 (left: 9 6 13) || 13 + 9 = 22 (left: 6 22)",
                "13 - 4 = 9 (left: 6 9 13) || 6 * 9 = 54 (left: 13 54) || 13 * 54 = 702 (left: 702)"
            ]
        },
        "Input": "4 6 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "36": {
        "puzzle": "12 12 12 12",
        "Step 0": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 / 12 = 1 (left: 1 12 12)",
                "12 * 12 = 144 (left: 12 12 144)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.0",
                "2 <- 0.2",
                "3 <- 0.4",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12)",
                "12 - 12 = 0 (left: 0 12 12) || 12 - 12 = 0 (left: 0)",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12)",
                "12 * 12 = 144 (left: 12 12 144) || 144 - 12 = 132 (left: 12 132)",
                "12 + 12 = 24 (left: 12 24 12) || 24 + 12 = 36 (left: 12 36)"
            ],
            "Evaluation": [
                60.0,
                20.002,
                60.0,
                0.0,
                20.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 0.1",
                "3 <- 2.2",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12) || 12 - 12 = 0 (left: 0)",
                "12 - 12 = 0 (left: 0 12 12) || 12 - 0 = 12 (left: 12 12)",
                "12 + 12 = 24 (left: 12 24 12) || Input: 3 5 7 9",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (12 + 12) + (12 / 12) = 24",
                "12 + 12 = 24 (left: 12 24 12) || 24 / 12 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)"
            ]
        },
        "Input": "12 12 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "37": {
        "puzzle": "2 11 11 12",
        "Step 0": {
            "steps": [
                "12 - 11 = 1 (left: 2 11 1)",
                "12 - 11 = 1 (left: 1 11 12)",
                "11 - 2 = 9 (left: 9 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "2 * 11 = 22 (left: 11 12 22)"
            ],
            "Evaluation": [
                1.0,
                41.0,
                1.002,
                3.0,
                20.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "2 + 11 = 13 (left: 11 11 12)",
                "12 - 2 = 10 (left: 11 11 10)",
                "2 * 11 = 22 (left: 11 12 22) || 11 * 12 = 132 (left: 132 22)",
                "2 * 11 = 22 (left: 11 12 22) || 11 + 12 = 23 (left: 23 22)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.1",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 11 = 13 (left: 11 11 12)",
                "12 - 11 = 1 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "2 + 11 = 13 (left: 11 11 12)",
                "2 * 11 = 22 (left: 11 12 22) || 22 - 11 = 11 (left: 11 22)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.4",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12) || 12 / 1 = 12 (left: 11 12)",
                "2 * 11 = 22 (left: 11 12 22) || 22 - 12 = 10 (left: 10 22)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12) || 11 * 1 = 11 (left: 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12) || 11 - 5.5 = 5.5 (left: 5.5 12)"
            ]
        },
        "Input": "2 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "38": {
        "puzzle": "4 4 4 6",
        "Step 0": {
            "steps": [
                "6 - 4 = 2 (left: 4 4 2)",
                "4 / 4 = 1 (left: 4 4 6)",
                "4 + 4 = 8 (left: 4 6 8)",
                "4 / 4 = 1 (left: 4 4 6)",
                "4 + 4 = 8 (left: 4 8 6)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                60.0,
                22.0,
                41.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.2",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "4 + 4 = 8 (left: 4 6 8) || 8 - 4 = ",
                "4 + 4 = 8 (left: 4 6 8) || 8 - 4 = 4 (left: 4 6)",
                "4 + 4 = 8 (left: 4 8 6) || 4 + 8 = 12 (left: 6 12)",
                "4 / 4 = 1 (left: 1 4 6)",
                "4 + 4 = 8 (left: 4 8 6) || 8 / 4 = 2 (left: 2 6)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                1.002,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.1",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "4 / 4 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "4 / 4 = 1 (left: 4 4 6) || 4 * 4 = 16 (left: 16 6)",
                "4 + 4 = 8 (left: 4 6 8) || 8 - 4 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "4 + 4 = 8 (left: 4 6 8) || 8 - 4 = 4 (left: 4 6) || 6 + 4 = 10 (left: 10)",
                "4 / 4 = 1 (left: 1 4 6) || 6 / 1 = "
            ],
            "Evaluation": [
                60.0,
                0.001,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.2",
                "2 <- 2.0",
                "3 <- 0.2",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "4 / 4 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "4 + 4 = 8 (left: 4 6 8) || 6 - 4 = 2 (left: 2 8)",
                "4 / 4 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "4 + 4 = 8 (left: 4 6 8) || 8 / 4 = 2 (left: 2 6)",
                "4 / 4 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24)"
            ]
        },
        "Input": "4 4 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "39": {
        "puzzle": "1 1 1 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 11)",
                "1 / 1 = 1 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 ",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 * 1 = 1 (left: "
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 11)",
                "1 + 1 = 2 (left: 1 2 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 11)"
            ],
            "Evaluation": [
                0.002,
                2.001,
                1.002,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 + 1 = 2 (left: 1 2 11) || 2 + 11 = 13 (left: 1 13)",
                "11 + 1 = 12 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1  || 1 - 1 = 0 (left: 0)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                1.001,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 11)",
                "11 + 1 = 12 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "11 + 1 = 12 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "11 + 1 = 12 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 11) || 2 + 11 = 13 (left: 1 13) || 13 * 1 = 13 (left: 13)"
            ]
        },
        "Input": "1 1 1 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "40": {
        "puzzle": "1 1 11 12",
        "Step 0": {
            "steps": [
                "11 + 1 = 12 (left: 1 12 12)",
                "1 - 1 = 0 (left: 0 11 12)",
                "12 - 1 = 11 (left: 1 11 ",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 + 11 = 12 (left: 11 12 12)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                "1 * 11 = 11 (left: 11 11 ",
                "1 - 1 = 0 (left: 0 11 12) || 11 * 12 = 132 (left: 0 132)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                20.002,
                0.003,
                40.001
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.2",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "1 - 1 = 0 (left: 0 11 12) || 11 * 12 = 132 (left: 0 132) || 0 + 132 = 132 (left: 132)",
                "1 * 1 = 1 (left: 1 11 12) || 12 / 1 = 12 (left: 11 12)",
                "1 - 1 = 0 (left: 0 11 12) || 11 * 12 = 132 (left: 0 132) || 0 * 132 = 0 (left: 132)",
                "1 * 1 = 1 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "1 - 1 = 0 (left: 0 11 12) || 11 * 12 = 132 (left: 0 132) || 132 / 0 = undefined (left: 0 132)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                40.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- 2.3",
                "3 <- 2.4",
                "4 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 12) || 12 / 1 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 * 1 = 1 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "1 - 1 = 0 (left: 0 11 12) || 11 * 12 = 132 (left: 0 132) || 132 / 0 = undefined (left: 0 132) || 0 * 132 = 0 (left: 132)",
                "1 * 1 = 1 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)"
            ]
        },
        "Input": "1 1 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "41": {
        "puzzle": "2 7 7 12",
        "Step 0": {
            "steps": [
                "2 * 7 = 14 (left: 7 12 14)",
                "12 - 7 = 5 (left: ",
                "12 - 7 = 5 (left: 2 5 7)",
                "2 * 7 = 14 (left: 7 14 12)",
                "12 - 7 = 5 (left: "
            ],
            "Evaluation": [
                3.0,
                0.0,
                3.0,
                2.001,
                0.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 7 = 5 (left: 2 5 7) || 7 - 5 = 2 (left: 2)",
                "7 * 2 = 14 (left: 5 14 12)",
                "7 - 2 = 5 (left: 5 7 12)",
                "7 + 2 = 9 (left: 7 9 12)",
                "2 * 7 = 14 (left: 7 12 14) || 14 - 7 = 7 (left: 7 7)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                21.001,
                2.001,
                0.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 1.2",
                "3 <- 0.0",
                "4 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 7 = 14 (left: 7 12 14) || 7 * 12 = 84 (left: 84 14)",
                "2 * 7 = 14 (left: 7 12 14) || 12 + 7 = 19 (left: 19 14)",
                "7 - 2 = 5 (left: 5 7 12) || 12 - 5 = 7 (left: 7 12)",
                "2 * 7 = 14 (left: 7 12 14) || 7 * 12 = 84 (left: 84 14)",
                "2 * 7 = 14 (left: 7 12 14) || 14 / 7 = 2 (left: 2 14)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                1.001,
                1.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 2.3",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "7 - 2 = 5 (left: 5 7 12) || 5 - 7 = -2 (left: -2 12)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12)",
                "7 - 2 = 5 (left: 5 7 12) || 5 * 7 = 35 (left: 35 12)",
                "2 * 7 = 14 (left: 7 12 14) || 7 * 12 = 84 (left: 84 14) || 84 / 14 = 6 (left: 6)",
                "7 * 2 = 14 (left: 5 12 14)"
            ]
        },
        "Input": "2 7 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "42": {
        "puzzle": "1 5 7 12",
        "Step 0": {
            "steps": [
                "5 + 7 = 12 (left: 1 12 12)",
                "12 - 7 = 5 (left: 1 5 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "12 - 7 = 5 (left: 1 5 12)"
            ],
            "Evaluation": [
                40.001,
                22.0,
                22.0,
                2.001,
                1.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 0.1",
                "3 <- 0.2",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 + 7 = 12 (left: 1 12 12) || 1 + 12 = 13 (left: 12 13)",
                "5 + 7 = 12 (left: 1 12 12) || 12 - 1 = 11 (left: 11 12)",
                "12 - 7 = 5 (left: 1 5 12) || 5 * 1 = 5 (left: 5 12)",
                "1 + 5 = 6 (left: 6 7 12) || 7 - 6 = 1 (left: 1 12)",
                "5 / 1 = 5 (left: 5 7 "
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.001,
                0.002,
                0.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.3",
                "2 <- 0.1",
                "3 <- 0.0",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 5 = 6 (left: 6 7 12) || 12 / 6 = 2 (left: 7 2)",
                "1 + 5 = 6 (left: 6 7 12) || 7 * 12 = 84 (left: 6 84)",
                "12 - 7 = 5 (left: 1 5 12) || 12 - 1 = 11 (left: 5 11)",
                "5 + 7 = 12 (left: 1 12 12) || 12 - 1 = 11 (left: 11 12)",
                "12 - 7 = 5 (left: 1 5 12) || 1 * 5 = "
            ],
            "Evaluation": [
                1.001,
                41.0,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 0.0",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 5 = 6 (left: 6 7 12) || 7 * 12 = 84 (left: 6 84) || 6 - 2 = 4 (left: 4 84)",
                "1 + 5 = 6 (left: 6 7 12) || 7 * 12 = 84 (left: 6 84) || 6 * 14 = 84 (left: 14)",
                "5 + 7 = 12 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12)",
                "1 + 5 = 6 (left: 6 7 12) || 7 * 12 = 84 (left: 6 84) || 84 / 6 = 14 (left: 14)",
                "1 + 5 = 6 (left: 6 7 12) || 7 * 12 = 84 (left: 6 84) || 84 / 6 = 14 (left: 14)"
            ]
        },
        "Input": "1 5 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "43": {
        "puzzle": "10 10 12 12",
        "Step 0": {
            "steps": [
                "10 / 10 = 1 (left: 1 12 12)",
                "12 + 10 = 22 (left: 10 12 22)",
                "10 / 10 = 1 (left: 1 12 12)",
                "12 - 10 = 2 (left: 2 12 12)",
                "12 - 10 = 2 (left: 2 12 12)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                21.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.2",
                "3 <- 0.2",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "10 * 10 = 100 (left: 12 12 100)",
                "10 * 10 = 100 (left: 12 12 100)",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12)",
                "10 / 10 = 1 (left: 1 12 12) || 12 / 12 = 1 (left: 1)",
                "10 * 10 = 100 (left: 12 12 100)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                40.001,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.2",
                "2 <- 0.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 + 12 = 24",
                "10 / 10 = 1 (left: 1 12 12) || 12 - 1 = 11 (left: 11 12)",
                "10 / 10 = 1 (left: 1 12 12) || 12 / 1 = 12 (left: 12 12)",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 + 12 = 24",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)"
            ],
            "Evaluation": [
                60.0,
                0.002,
                20.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 1.2",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 + 12 = 24 || 24 + 12 = 36 (left: 24 36)",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 + 12 = 24 || 24 / 12 = 2 (left: 2 12)",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 + 12 = 24 || 24 / 12 = 2 (left: 2 24)",
                "10 / 10 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12) || 12 + 12 = 24 || 12 * 12 = 144 (left: 144)"
            ]
        },
        "Input": "10 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "44": {
        "puzzle": "1 8 8 8",
        "Step 0": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 / 1 = 8 (left: 8 8 8)"
            ],
            "Evaluation": [
                1.002,
                3.0,
                0.003,
                2.001,
                21.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.1",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8) || 8 - 8 = 0 (left: 0)",
                "8 - 1 = 7 (left: 7 8 8) || 7 * 8 = 56 (left: 8 56)",
                "8 / 1 = 8 (left: 8 8 8) || Input: 8 8",
                "8 / 1 = 8 (left: 8 8 8) || 8 * 8 = 64 (left: 8 64)",
                "8 / 1 = 8 (left: 8 8 8) || 8 - 8 ="
            ],
            "Evaluation": [
                0.003,
                41.0,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 1.1",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "8 - 1 = 7 (left: 7 8 8) || 7 * 8 = 56 (left: 8 56) || 8 * 7 = 56 (left: 56)",
                "8 / 1 = 8 (left: 8 8 8) || 8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8) || 8 * 8 = 64 (left: 8 64)",
                "8 - 1 = 7 (left: 7 8 8) || 7 * 8 = 56 (left: 8 56) || 8 + 56 = 64 (left: 64)",
                "8 * 1 = 8 (left: 8 8 8)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                0.002,
                0.002,
                20.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 2.1",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "8 - 1 = 7 (left: 7 8 8) || 7 * 8 = 56 (left: 8 56) || 8 * 7 = 56 (left: 56)",
                "8 / 1 = 8 (left: 8 8 8) || 8 / 8 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "8 - 1 = 7 (left: 7 8 8) || 7 * 8 = 56 (left: 8 56) || 56 / 8 = 7 (left: 7)",
                "8 - 1 = 7 (left: 7 8 8) || 7 * 8 = 56 (left: 8 56) || 8 * 7 = 56 (left: 56)",
                "8 * 1 = 8 (left: 8 8 8) || 8 + 8 = 16 (left: 8 16)"
            ]
        },
        "Input": "1 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "45": {
        "puzzle": "2 2 3 8",
        "Step 0": {
            "steps": [
                "2 * 2 = 4 (left: 4 3 8)",
                "2 + 2 = 4 (left: 3 4 8)",
                "3 * 2 = 6 (left: 6 2 ",
                "2 + 3 = 5 (left: 2 5 8)",
                "8 - 2 = 6 (left: 2 3 6)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                1.0,
                2.0,
                22.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "3 + 2 = 5 (left: 2 5 8)",
                "3 + 2 = 5 (left: 5 3 8)",
                "8 - 2 = 6 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "8 - 2 = 6 (left: 2 3 6)",
                "2 * 2 = 4 (left: 4 3 8) || 3 / 8 = 0.375 (left: 0.375)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                1.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "3 + 2 = 5 (left: 2 5 8)",
                "8 - 2 = 6 (left: 2 3 6) || Possible",
                "8 - 2 = 6 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "8 - 2 = 6 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                60.0,
                41.0,
                21.001
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.3",
                "2 <- 2.3",
                "3 <- 2.4",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "8 - 2 = 6 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12) ",
                "8 - 2 = 6 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "8 - 2 = 6 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18)",
                "8 - 2 = 6 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "8 - 2 = 6 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)"
            ]
        },
        "Input": "2 2 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "46": {
        "puzzle": "2 9 9 12",
        "Step 0": {
            "steps": [
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "2 * 9 = 18 (left: 9 12 18)",
                "9 - 2 = 7 (left: 7 9 12)",
                "12 - 9 = 3 (left: 2 3 9)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                3.0,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "9 - 2 = 7 (left: 7 9 12)",
                "9 - 2 = 7 (left: 7 9 12)",
                "9 - 2 = 7 (left: 7 9 12) || 7 * 9 = 63 (left: 63 12)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                2.001,
                2.001,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 2 = 10 (left: 9 10 12)",
                "9 - 2 = 7 (left: ",
                "9 - 2 = 7 (left: 7 9 12)",
                "9 - 2 = 7 (left: 7 9 12) || 12 - 7 = 5 (left: 7 5)",
                "9 / 2 = 4.5 (left: 4.5 9 12) || 9 - 4.5 = 4.5 (left: 4.5 12)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                22.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.0",
                "2 <- 1.0",
                "3 <- 2.2",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12) || 9 - 7 = 2 (left: 2 12)",
                "9 / 2 = 4.5 (left: 4.5 9 12) || 9 / 4.5 = 2 (left: 2 12 13.5)",
                "9 / 2 = 4.5 (left: 4.5 9 12) || 9 - 4.5 = 4.5 (",
                "9 - 2 = 7 (left: 7 9 12) || 9 - 7 = 2 (left: 2 12)",
                "9 - 2 = 7 (left: 7 9 12) || 9 - 7 = 2 (left: 2 12)"
            ]
        },
        "Input": "2 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "47": {
        "puzzle": "11 11 11 12",
        "Step 0": {
            "steps": [
                "12 - 11 = 1 (left: 11 1 1)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "12 - 11 = 1 (left: 11 11 1)",
                "11 - 11 = 0 (left: 0 11 12)"
            ],
            "Evaluation": [
                1.001,
                1.002,
                3.0,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "11 + 11 = 22 (left: 11 22 12) || 12 + 11 = 23 (left: 23)",
                "11 * 11 = 121 (left: 121 11 12)",
                "11 - 11 = 0 (left: 0 11 12) || 11 + 12 = 23 (left: 0 23)",
                "11 - 11 = 0 (left: 0 11 12) || 11 + 12 = 23 (left: 0 23)",
                "11 / 11 = 1 (left: 1 11 12)"
            ],
            "Evaluation": [
                0.003,
                2.0,
                0.0,
                0.0,
                20.002
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "11 / 11 = 1 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11)",
                "11 / 11 = 1 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 - 11 = 0 (left: 0 11 12) || 11 - 12 = -1 (left: -1 12)",
                "11 - 11 = 0 (left: 0 11 12) || 11 / 0 is undefined"
            ],
            "Evaluation": [
                20.0,
                40.0,
                20.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 0.4",
                "2 <- 2.2",
                "3 <- 2.0",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "11 / 11 = 1 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "11 - 11 = 0 (left: 0 11 12) || 12 / 11 = 1.09 (left: 0 1.09)",
                "11 + 11 = 22 (left: 11 22 12) || 11 * 2 = 22 (left: 22 12)",
                "11 / 11 = 1 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "11 / 11 = 1 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11) || 1 + 11 = 12"
            ]
        },
        "Input": "11 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "48": {
        "puzzle": "3 8 13 13",
        "Step 0": {
            "steps": [
                "13",
                "13",
                "3 + 8 = 11 (left: 11 13 13)",
                "3 + 8 = 11 (left: 11 13 13)",
                "3 + 8 = 11 (left: 11 13 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 8 = 5 (left: ",
                "8 / 3 = 2.67 (left: 2.67 13 13)",
                "8 - 3 = 5 (left: 5 8 13)",
                "8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8 13)",
                "13 - 8 = 5 (left"
            ],
            "Evaluation": [
                0.0,
                2.0,
                1.002,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "8 / 3 = 2.67 (left: 2.67 13 13) || 13 - 2.67 = 10.33 (left: 10.33 13)",
                "3 + 8 = 11 (left: 11 13 13) || 11 + 13 = 24 (left: 13 13 24)",
                "8 / 3 = 2.67 (left: 2.67 8 13)",
                "3 + 8 = 11 (left: 11 13 13)",
                "3 + 8 = 11 (left: 11 13 13) || 11 + 13 = 24 (left: 13 13 24)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                1.002,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 3 = 2.67 (left: 2.67 13 13) || 2.67 * 13 = 34.71 (left: 13 34.71)",
                "8 / 3 = 2.67 (left: 2.67 13 13) || 13 * 2.67 = 34.71 (left: 13 34.71)",
                "3 + 8 = 11 (left: 11 13 13) || 11 + 13 = 24 (left: 13 13 24) || 13 + 13 = 26 (left: 24 26)",
                "3 + 8 = 11 (left: 11 13 13) || 11 + 13 = 24 (left: 13 13 24) || 24 * 13 = 312 (left: 13 312)",
                "3 + 8 = 11 (left: 11 13 13) || 13 - 11 = 2 (left: 2 13)"
            ]
        },
        "Input": "3 8 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "49": {
        "puzzle": "9 9 12 12",
        "Step 0": {
            "steps": [
                "12 + 9 = 21 (left: 9 12 21)",
                "12 + 9 = 21 (left: 9 12 21)",
                "12 / 9 = 1.33 (left: 9 ",
                "9 + 9 = 18 (left: 12 12 18)",
                "12 / 9 = 1.33 (left: 9 "
            ],
            "Evaluation": [
                1.002,
                3.0,
                0.0,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 / 9 = 1 (left: 1 12 ",
                "12 + 9 = 21 (left: 9 12 21) || 9 + 12 = 21 (left: 21 21)",
                "12 - 9 = 3 (left: 3 9 12)",
                "9 - 9 = 0 (left: 0 12 ",
                "9 / 9 = 1 (left: 1 12 12)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                2.001,
                0.001,
                22.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 1.0",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "12 + 9 = 21 (left: 9 12 21) || 9 * 12 = 108 (left: 108 21)",
                "12 / 9 = 1 (left: 1 12  || 13 + 11 = 24 (left: 24)",
                "12 - 9 = 3 (left: 3 9 12) || 12 - 3 = 9 (left: 9 9)",
                "12 + 9 = 21 (left: 9 12 21)",
                "12 - 9 = 3 (left: 3 9 12) || 9 - 3 = 6 (left: 6 12)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.002,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "9 / 9 = 1 (left: 1 12 12) || 1 * 12 = 12 (left: 12 12)",
                "12 / 9 = 1 (left: 1 12  || 13 + 11 = 24 (left: 24) || Answer: (12 / 9) + (9 + 12) = 24",
                "12 / 9 = 1 (left: 1 12  || 13 + 11 = 24 (left: 24) || Answer: (12 / 9) * (9 + 12) = 24",
                "12 / 9 = 1 (left: 1 12  || 13 + 11 = 24 (left: 24) || Answer: (12 / 9) * (9 + 12) = 24",
                "12 / 9 = 1 (left: 1 12  || 13 + 11 = 24 (left: 24) || Answer: (12 / 9) * (9 + 12) = 24"
            ]
        },
        "Input": "9 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}