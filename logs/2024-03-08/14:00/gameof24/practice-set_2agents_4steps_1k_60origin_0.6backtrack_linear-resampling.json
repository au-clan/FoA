{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "Evaluation": [
                41.0,
                21.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)"
            ],
            "Evaluation": [
                0.002,
                2.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "6 - 1 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5)",
                "6 - 4 = 2 (left: 1 2 6)"
            ],
            "Evaluation": [
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5) || 1 * 1.5 = 1.5 (left: 1.5)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 ("
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Evaluation": [
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)"
            ],
            "Evaluation": [
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 * 1 = 11 (left: 1 11 11)",
                "11 / 1 = 11 (left: 1 11 "
            ],
            "Evaluation": [
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 1 = 10 (left: 1 11 ",
                "1 + 1 = 2 (left: 2 11 11)"
            ]
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Step 0": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8)",
                "8 - 3 = 5 (left: 1 1 5)"
            ],
            "Evaluation": [
                2.0,
                2.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8) || 8 / 4 = 2 (left: 2 3 8)",
                "1 + 1 = 2 (left: 2 3 8)"
            ],
            "Evaluation": [
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "8 - 3 = 5 (left: 1 3 5)",
                "8 - 1 = 7 (left: 1 7 "
            ],
            "Evaluation": [
                1.002,
                0.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 0.1"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8) || 8 / 4 = 2 (left: 2 3 8) || 8 - 3 = 5 (left: 2 5)",
                "8 - 3 = 5 (left: 1 1 5) || 5 - 1 = 4 (left: 1 4)"
            ]
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8)"
            ],
            "Evaluation": [
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 8)",
                "8 / 1 = 8 (left: 1 1 "
            ],
            "Evaluation": [
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 8 = 9 (left: 1 1 9)",
                "1 + 8 = 9 (left: 1 1 9)"
            ],
            "Evaluation": [
                0.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 1 = 8 (left: 1 1 8)",
                "1 * 1 = 1 (left: 1 1 8)"
            ]
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Step 0": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36 6)"
            ],
            "Evaluation": [
                41.0,
                1.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36)"
            ],
            "Evaluation": [
                21.001,
                41.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36) || 36 - 6 = 30 (left: 6 30)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left:"
            ]
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 1 = 3 (left: 3 2 ",
                "2 * 1 = 2 (left: 1 2 12)"
            ],
            "Evaluation": [
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "2 * 1 = 2 (left: 1 2 12) || Input: 3 10 6"
            ],
            "Evaluation": [
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "12 - 2 = 10 (left: 1 1 10)"
            ]
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Step 0": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)"
            ],
            "Evaluation": [
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6)",
                "2 / 1 = 2 (left: 2 2 6) || Input: 3 3 5"
            ],
            "Evaluation": [
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || Input: 2 4 4 6",
                "2 / 1 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)"
            ],
            "Evaluation": [
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 0.1"
            ]
        },
        "Step 3": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 2 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6)"
            ]
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 10 12)"
            ],
            "Evaluation": [
                20.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 10 12)",
                "10 + 1 = 11 (left: 1 11 12)"
            ],
            "Evaluation": [
                1.001,
                21.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 10 12) || 10 - 1 = 9 (left: 9 12)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)"
            ],
            "Evaluation": [
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 1 * 11 = 11 (left: 11 12)",
                "10 + 1 = 11 (left: 1 11 12) || 11 * 1 = 11 (left: 11 12)"
            ]
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Step 0": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "Evaluation": [
                20.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)"
            ],
            "Evaluation": [
                20.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 2 = 8 (left: 2 10 8)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 2.5 = 7.5 (left: 4 7.5 10)"
            ],
            "Evaluation": [
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)"
            ]
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Step 0": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)"
            ],
            "Evaluation": [
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 1 12)"
            ],
            "Evaluation": [
                20.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12) || 1 - 1 = 0 (left: 0 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)"
            ],
            "Evaluation": [
                20.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)"
            ]
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}