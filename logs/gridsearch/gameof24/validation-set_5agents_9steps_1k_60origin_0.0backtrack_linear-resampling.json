{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((5 + 6) - 9) * 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((5 + 6) - 9) * 12 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 6) * (9 - 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((5 + 6) - 9) * 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 6) * (9 - 12) = 24"
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (6 + 9) + (10 + 11) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.6666666666666667"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 3 + 9 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "9 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (6 + 10 + 11) - 9 = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "21 54"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "14"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "It seems like there was an error in the input provided. Please provide a valid set of numbers for the next steps calculation."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 + 3 = 4.666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "9 6"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 21 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((6 + 9) + 10) + 11 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 4 + 5 = 9 (left: 9 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (6 + 9) + (10 + 11) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.5"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> It seems like there was an error in the input provided. Please provide a valid set of numbers for the next steps calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 11 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "9 6"
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 4 + 16 = 20 (left: 2 4 20)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.5 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 + 11 = 16.5 (left: 16.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "16.5"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 + 11 = 16.5 (left: 16.5) -> There are no possible next steps with the input 16.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 4 16"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5.5 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 11 / 5.5 = 2 (left: 2) -> No next steps possible with only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5.5 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 11 / 5.5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "Input: 3 9"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> Input: 3 9 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 6 11"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5.5 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 11 - 5.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16.5"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 + 11 = 16.5 (left: 16.5) -> There are no possible next steps for the input 16.5 as it is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5.5 11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 + 11 = 16.5 (left: 16.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "16.5"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 + 11 = 16.5 (left: 16.5) -> There are no possible next steps for the number 16.5 as it is already a single number and cannot be further simplified using the operations of addition, subtraction, multiplication, or division.",
                "Pruning": null
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 5 10"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 10"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 100"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 3 * 5 = 15 (left: 15 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 9"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3) -> 3 + 3 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> 27 - 8 = 19 (left: 8)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "3 + 3 = 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 5 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 10"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 100"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 100"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 10"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 1 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 3"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "3 + 3 = 6"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 10"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 * 1 = 3 (left: 3 10) -> 10 / 3 = 3.33333 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 100"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> 27 / 8 = 3.375 (left: 8)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "3 + 3 = 6"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 3 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 3 + 5 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 * 5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 * 3 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-25 50"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25 50) -> -25 / 50 = -0.5 (left: -0.5)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "25 + 25 = 50"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 3 + 5 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "25 + 25 = 50"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25 50)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-25 50"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25 50) -> -25 + 50 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "-25 50"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 * 3 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 - 5 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "25 + 25 = 50"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-25 50"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25 50) -> -25 * 50 = -1250 (left: -1250)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 7 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "25 + 25 = 50"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 50 - 25 = 25 (left: 25 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-25 50"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25 50) -> -25 * 50 = -1250 (left: -1250)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "25 + 25 = 50"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-25 50"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25 50) -> -25 / 50 = -0.5 (left: -0.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2.16666666667 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.99999999999"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 / 2.16666666667 = 5.99999999999 (left: 5.99999999999) -> 5.99999999999 * 2 = 11.99999999998 (left: 11.99999999998)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "13 18 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10.83333333333 23.33333333328"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 10.83333333333 = 23.33333333328 (left: 10.83333333333 23.33333333328) -> 10.83333333333 * 23.33333333328 = 252.499999",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.3846153846154 13"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 13 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 17.999"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 1.3846153846154 * 13 = 17.9999999999992 (left: 13 17.999 -> 13 - 17.999 = -4.999 (left: -4.999)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.16666666667 10.83333333333"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.16666666667 10.83333333333"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 2 = 5.41666666667 (left: 2.16666666667 5.41666666667 10.83333333335)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.16666666667 5.41666666667 10.83333333335"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 2 = 5.41666666667 (left: 2.16666666667 5.41666666667 10.83333333335) -> 10.83333333335 - 2.16666666667 = 8.66666666668 (left: ",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "23.33333333328 34.16666666661"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2.16666666667 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.16666666667 10.83333333333"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 5 = 10.83333333335 (left: 2.16666666667 10.83333333335)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.3846153846154 13"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 1.3846153846154 * 13 = 17.9999999999992 (left: 13 17.999",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 17.999"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 1.3846153846154 * 13 = 17.9999999999992 (left: 13 17.999 -> 13 * 17.999 = 233.987 (left: 233.987)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2.16666666667 10.83333333335"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.16666666667 10.83333333333"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 + 10.83333333333 = 13 (left: 10.83333333333 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.16666666667 5.41666666667 10.83333333335"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 2 = 5.41666666667 (left: 2.16666666667 5.41666666667 10.83333333335) -> 5.41666666667 * 10.83333333335 = 58.50000000007 (left: 2.16666666667 58.50000000007)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2.16666666667 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.99999999999"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 / 2.16666666667 = 5.99999999999 (left: 5.99999999999) -> 5.99999999999 + 2 = 7.99999999999",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 * 18 = 234 (left: 234 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.3846153846154 13"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 13 - 1.384615",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 17.999"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 1.3846153846154 * 13 = 17.9999999999992 (left: 13 17.999 -> 13 - 17.999 = -4.999 (left: -4.999)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13 + 2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.16666666667 10.83333333333"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 5 = 2.16666666667 (left: 2.16666666667 2.16666666667)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.16666666667 5.41666666667 10.83333333335"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 2 = 5.41666666667 (left: 2.16666666667 5.41666666667 10.83333333335) -> 2.16666666667 + 5.41666666667 = 7.58333333334 (left: 7.58333333334 10.83333333335)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2.16666666667 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 / 2.16666666667 = 5.99999999999 (left: 5.99999999999)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.16666666667 10.83333333333"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 10.83333333333 = 23.5 (left: 10.83333333333 23.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10.83333333333 23.33333333328"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 10.83333333333 = 23.33333333328 (left: 10.83333333333 23.33333333328) -> 10.83333333333 + 23.33333333328 = 34.16666666661 (left: 23.33333333328 34.16666666661)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.3846153846154 13"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 13 / 1.3846153846154 = 9.39999999999998 (left: 1.384615384",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 17.999"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 1.3846153846154 * 13 = 17.9999999999992 (left: 13 17.999 -> 17.999 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.16666666667 10.83333333335"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 5 = 10.83333333335 (left: 2.16666666667 10.83333333335) -> 10.83333333335 / 5 = 2.16666666667 (left: 2.16666666667 10.83333333335)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.16666666667 5.41666666667 10.83333333335"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 2 = 5.41666666667 (left: 2.16666666667 5.41666666667 10.83333333335) -> 10.83333333335 + 2.16666666667 = 12 (left: 2.166666666",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "10.83333333333 13"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2.16666666667 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 * 2.16666666667 = 28.166666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.16666666667 10.83333333333"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 10.83333333333 = 23.33333333328 (left: 10.83333333333 23.33333333328)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.3846153846154 13"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 13 / 1.384615",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 17.999"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154 13) -> 1.3846153846154 * 13 = 17.9999999999992 (left: 13 17.999 -> 13 + 17.999 = 30.999 (left: 30.999)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "-7 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.16666666667 10.83333333335"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 2.16666666667 * 5 = 10.83333333335 (left: 2.16666666667 10.83333333335) -> 10.833",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13 + 2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.16666666667 5.41666666667 10.83333333335"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 2.16666666667 10.83333333333) -> 10.83333333333 / 2 = 5.41666666667 (left: 2.16666666667 5.41666666667 10.83333333335) -> 2.16666666667 + 5.41666666667 = 7.58333333334 (left: 7.58333333334 10.83333333335)",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3) * 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3) * 6 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) - (3 * 6) = 24"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 - 4 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 + 4 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "44"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 44 88"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 44 + 2 = 46 (left: 46 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "88 88"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 2 * 44 = 88 (left: 88 88) -> 88 * 88 = 7744 (left: 7744)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 8 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 32"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 22 88"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 - 4 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 - 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "44"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 44 88"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 2 * 44 = 88 (left: 88 88)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "88 88"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 2 * 44 = 88 (left: 88 88) -> 88 + 88 = 176",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 32"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 22 88"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 - 4 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "44"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 / 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 44 88"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 44 + 2 = 46 (left: 2 46 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "88 88"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 2 * 44 = 88 (left: 88 88) -> 88 + 88 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 22 88"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 + 8 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "56 11"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 32"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 44 88"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 - 4 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "44"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 44 88"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 44 / 2 = 22 (left: 2 22 88)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "88 88"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 2 * 44 = 88 (left: 88 88) -> 88 + 88 = 176",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 / 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 32"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "88 + 88 = 176"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 - 4 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 4 - 11 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "44"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 44 88"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 44 / 2 = 22 (left: 2 22 88)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "88 88"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 * 4 = 44 (left: 44) -> 44 * 2 = 88 (left: 2 44 88) -> 2 * 44 = 88 (left: 88 88) -> 88 + 88 = 176",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 + 8 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "56 11"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 56 - 11 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 32"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "46 88"
                }
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "14 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "14 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.07692307692"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.07692307692 / 2 = 0.53846153846"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.92307692308 2.15384615384"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384 -> 2 - 1.07692307692 = 0.92307692308 (left: 0.92307692308 2.15384615384) -> 0.92307692308 * 2.15384615384 = 1.999999",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.53846153846 2.53846153846"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 0.53846153846 2.53846153846) -> 0.53846153846 * 2.53846153846 = 1.36363636363",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "14 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 * 13 = 182 (left: 182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "182"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 * 13 = 182 (left: 182) -> 182 / 2 = 91 (left: 91)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "14 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.07692307692"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 1 = 1.07692307692",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1.07692307692 * 1 = 1.07692307692"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 1 = 1.07692307692 -> 1.07692307692 - 1 = 0.07692307692",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.92307692308 2.15384615384"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384 -> 2 - 1.07692307692 = 0.92307692308 (left: 0.92307692308 2.15384615384) -> 0.92307692308 * 2.15384615384 = 1.99999999999 (left: 1.99999999999)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.53846153846 2.53846153846"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 0.53846153846 2.53846153846) -> 2.53846153846 - 0.53846153846 = 2 (left: 2 2.53846153846)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.5 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "14 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.07692307692"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.07692307692 * 2 = 2.15384615384"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384 -> 1.07692307692 + 2 = 3.07692307692 (left: 3.07692307692)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.53846153846 3.07692307692"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 2.53846153846)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.53846153846 2.53846153846"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 0.53846153846 2.53846153846) -> 0.53846153846 / 2.53846153846 = 0.21212121212 (left: 0.21212121212)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "14 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 * 13 = 182 (left: 182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.07692307692"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.07692307692 * 2 = 2.15384615384"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384 -> 2 - 1.07692307692 = 0.92307692308 (left: 0.92307692308 2.15384615384)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.92307692308 2.15384615384"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384 -> 2 - 1.07692307692 = 0.92307692308 (left: 0.92307692308 2.15384615384) -> 2",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "1.07692307692 * 1 = 1.07692307692"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.53846153846 2.53846153846"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 0.53846153846 2.53846153846) -> 0.53846153846 * 2.53846153846 = 1.36666666667 (left: 1.36666666667)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.07692307692 2.15384615384"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "13 - 10 = "
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.07692307692"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1.07692307692 * 2 = 2.15384615384"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 * 2 = 2.15384615384 -> 2.15384615384 / 2 = 1.07692307692 (left: 1.07692307692 2.15384615384)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.53846153846 3.07692307692"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 0.53846153846 2.53846153846)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.53846153846 2.53846153846"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 + 2 = 3.07692307692 (left: 0.53846153846 3.07692307692) -> 3.07692307692 - 0.53846153846 = 2.53846153846 (left: 0.53846153846 2.53846153846) -> 2.53846153846 / 0.53846153846 = 5 (left: 5 2.53846153846)",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 / 8 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 / 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 * 7) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 7 - 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.5714 (left: 0.5714)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "7 - 3 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18.54545"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 18.54545 as it is a single number and not an equation."
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545 as it is a single number and not an equation. -> There are no possible next steps for the input 18.54545 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for the input 18.54545."
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545. -> There are no possible next steps for the input 18.54545. -> There are no possible next steps for the input 18.54545.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the input 18.54545 as it is a single number and not an equation."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12.83333"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18.54545"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.93518 / 2 = 0.46759"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518) -> 0.93518 / 2 = 0.46759 -> 0.93518 - 2 = -1.06482 (left: -1.06482 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.46759 * 2 = 0.93518"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518) -> 0.93518 / 2 = 0.46759 -> 0.46759 * 2 = 0.93518 -> 0.46759 + 2 = 2.46759",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps for the input 18.54545."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.93518"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518) -> 0.93518 + 2 = 2.93518",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 18.54545."
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545. -> There are no possible next steps for the input 18.54545.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.46759 * 2 = 0.93518"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518) -> 0.93518 / 2 = 0.46759 -> 0.46759 * 2 = 0.93518 -> 0.46759 * 0.93518 = 0.4370510062",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 18.54545."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12.83333"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 - 12.83333 = -0.83333 (left: -0.83333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18.54545"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> Sorry, I cannot provide possible next steps for the input \"18.54545\" as it is not a valid input for arithmetic operations. Please provide whole numbers for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.93518 / 2 = 0.46759"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518) -> 0.93518 / 2 = 0.46759 -> 0.46759 * 2 = 0.93518",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression."
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545. -> There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression. -> N/A",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps for the input 18.54545."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.93518"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93518 (left: 0.93518) -> 0.93518 / 2 = 0.46759",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 18.54545."
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545. -> There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression."
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545) -> There are no possible next steps for the input 18.54545. -> There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression. -> There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "There are no possible next steps for the input 18.54545 as it is a single number and not a mathematical expression."
                }
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 6 + 20 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 14"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 2"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 5"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "27 + 3 = 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 27 + 3 = 30 -> 27 / 3 = 9 (left: 9 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 12"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12 -> 9 * 3 = 27 (left: 27 12) -> 27 / 12 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "27 + 3 = 30"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> Input: 4 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 * 9 = 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 + 9 = 12"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12 -> 9 * 3 = 27 (left: 27 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 12"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12 -> 9 * 3 = 27 (left: 27 12) -> 27 * 12 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "27 30"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> Input: 26 120 3.33 14 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 5"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the number 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 12"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12 -> 9 * 3 = 27 (left: 27 12) -> 27 + 12 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the number 22."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 6 + 20 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 / 14 = 0.42857142857142855 (left: 0.42857142857142855)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 5"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 * 9 = 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 27 + 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 12"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12 -> 9 * 3 = 27 (left: 27 12) -> 27 + 12 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 20"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 6 14) -> 14 / 6 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 26 120 3.33 14 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 5"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 * 2 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "27 + 3 = 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 27 + 3 = 30 -> 3 * 9 = 27 (left: 27 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 12"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 3 * 9 = 27 -> 3 + 9 = 12 -> 9 * 3 = 27 (left: 27 12) -> 27 / 12 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the number 22."
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "9 / 8 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "55"
                }
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> 55 + 2 = 57",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "5 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 11 - 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "5 11"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 11 - 5 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 / 9 = "
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 2 = 12 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> None",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 + 8 + 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 12 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 / 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 + 12 = 14"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 14 + 12 = 26 (left: 2 26)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 72"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 4 * 72 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 4 * 72 = 288 (left: 288) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 / 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> There are no possible next steps with just the number 6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 / 6 = 0.6666666666666666"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 4 / 6 = 0.6666666666666666 -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "288"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 + 12 = 14"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 32"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 / 6 = "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 4 / 6 = 0.6666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 / 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 / 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4 / 6 = 0.6666666666666666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 90"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90) -> 10 * 90 = 900 (left: 900)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 72"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 / 6 = 0.6666666666666666"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 4 / 6 = 0.6666666666666666 -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 / 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 + 12 = 14"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 20"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.72916666667"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.72916666667 (left: 0.72916666667) -> 0.72916666667 * 2 = 1.45833333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 36 - 12 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.729166667"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 - 8.75 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.3714 12"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.3714 (left: 1.3714 12) -> 12 / 1.3714 = 8.7421 (left: 8.7421)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "105 - 2 = 103"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-3.25"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 - 12 = -3.25 (left: -3.25) -> -3.25 * 2 = -6.5 (left: -6.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3.25"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 * 3 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 1 + 12 = 13 (left: 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 36 - 12 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "8.75 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.3714 12"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.3714 (left: 1.3714 12) -> 1.3714 + 12 = 13.3714 (left: 13.3714)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.72916666667 * 2 = 1.45833333334"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.72916666667 (left: 0.72916666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 + 2 = 107 (left: 107)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.729166667"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 12 * 1 = 12 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 24"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 36 - 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "12 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.3714 (left: 1.3714 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.3714 12"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.3714 (left: 1.3714 12) -> 12 + 1.3714 = 13.3714 (left: 13.3714)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "105 - 2 = 103"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.729166667 (left: 0.729166667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 - 2 = 103",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 * 3 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 36 / 12 = 3 (left: 1 3 36)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "12 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.37142857143 (left: 1.37142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.3714 12"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.3714 (left: 1.3714 12) -> 1.3714 * 12 = 16.45768 (left: 16.45768)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "105 - 2 = 103"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 - 12 = -3.25 (left: -3.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 10 * 5 = 50 (left: 105)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "11 12 36"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 / 12 = 3 (left: 11 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "13 23"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.75 12"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> Input: 5 3 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.3714 12"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 12 / 8.75 = 1.3714 (left: 1.3714 12) -> 1.3714 * 12 = 16.4568 (left: 16.4568)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.72916666667 * 2 = 1.45833333334"
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> Input: 3 9 7.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 3 9 7.5"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> Input: 3 9 7.5 -> 9 - 3 = 6 (left: 6 7.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "17"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 195"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 * 195 = 1755 (left: 1755)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "9 204"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 + 195 = 204 (left: 9 204) -> 9 * 204 = 1836 (left: 1836)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps with the number 17."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 13 17"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 / 1.857 = 9.155 (left: 9.155)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "15.143"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143) -> Input: 1 2 3 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "31.569"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569) -> 3 - 1 = 2.569 (left: 2.569)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18.857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "186"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 195 - 9 = 186 (left: 186) -> 18 / 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3 * 1.569 = 4.707"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 / 1.857 = 9.153 (left: 9.153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "15.143"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143) -> 15.143 + 2 = 17.143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "31.569"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569) -> 3 + 1 = 4.569 (left: 4.569)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 195"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 + 195 = 204 (left: 9 204)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "9 204"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 + 195 = 204 (left: 9 204) -> 9 * 204 = 1836 (left: 1836)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps with the number 17."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.153"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 / 1.857 = 9.153 (left: 9.153) -> 9.153 + 2 = 11.153 (left: 11.153)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1.857 17"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 + 17 = 18.857 (left: 18.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15.143"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143) -> 15 + 143 = 158.143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 195"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 - 195 = -186 (left: -186)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "9 204"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 + 195 = 204 (left: 9 204) -> Input: 5 10 15 20",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "15.143"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 17 - 1.857 = 15.143 (left: 15.143) -> 15.143 * 2 = 30.286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.857 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "31.569"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569) -> 3 * 1.569 = 4.707",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 195"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 195 - 9 = 186 (left: 186)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "9 204"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 * 15 = 195 (left: 9 195) -> 9 + 195 = 204 (left: 9 204) -> 204 - 9 = 195 (left: 195)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "15.143 * 2 = 30.286"
                }
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> Input: 0 1 12 144",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24 72"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72) -> 12 + 12 = 24 (left: 24 72) -> 24 + 72 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "2 + 12 = 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "144"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "12 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 1 + 2 = 3 (left: 3 3 5 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24 72"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72) -> 12 + 12 = 24 (left: 24 72) -> 24 / 72 = 0.333 (left: 0.333)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12 - 6 = 6 (left:"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 + 12 = 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12 12 72"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24 72"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72) -> 12 + 12 = 24 (left: 24 72) -> 24 * 3 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "12 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "2 + 12 = 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 3 5 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 1 + 2 = 3 (left: 3 3 5  -> 5 * 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 + 12 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24 + 72 = 96"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "12 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12 72"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72) -> 12 + 12 = 24 (left: 24 72)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24 72"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72) -> 12 + 12 = 24 (left: 24 72) -> 24 + 72 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 + 12 = 14"
                }
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.6667 (left: 2.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.996"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 + 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (4 + (5 + 6)) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.67"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 / 6.67 = 2.996 (left: 2.996)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.996"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "28 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 * 12 = 336 (left: 336)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 + 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> None, as there is only one number left. -> Only one number left: 8",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 28"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 28 - 12 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 128"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "164"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> There are no possible next steps with only one number given. -> Please provide more numbers to determine possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 4"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "164"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 * 13.66666666667 = 164 (left: 164) -> 16 * 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "12 28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 128"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16) -> 8 - 16 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "164"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> None, as there is only one number left. -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "28 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 128"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 8 * 16 = 128 (left: 16)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "164"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "None, as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> There are no possible next steps with only one number given. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 13.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 * 13.66666666667 = 164 (left: 164)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 128"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 16 = 8 (left: 8",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 16"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 4 * 4 = 16 (left: 16 8 -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> There are no possible next steps with only one number given. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 5) + 9) + 5 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 5) + 9) + 5 = 24"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.66666666667 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 1.66666666667 + 11 = 12.66666666667 (left: 12.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.33333333333"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no possible next steps with the input 9.33333333333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one number so no possible next steps."
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There is only one number so no possible next steps. -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 19 25"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 19 25) -> 19 - 6 = 13 (left: 13 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 * 11 = 55 (left: 55 25) -> 55 / 25 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "16 25"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16 25"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 + 11 = 16 (left: 16 25) -> 25 - 16 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number so no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.66666666667 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.33333333333"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There is only one number so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 19 25)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 11 25"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 11 * 5 = 55 (left: 25 55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 * 11 = 55 (left: 55 25) -> 55 + 25 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "55 25"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16 25"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 + 11 = 16 (left: 16 25) -> 16 - 25 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number so no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.66666666667 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.33333333333"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no further possible mathematical operations that can be performed with the input 9.33333333333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 19 25"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 19 25) -> 25 - 6 = 19 (left: 19 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 * 11 = 55 (left: 55 25) -> 55 * 25 = 1375 (left: 1375)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16 25"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 + 11 = 16 (left: 16 25) -> 16 * 25 = 400 (left: 400)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input is already a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.66666666667 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 1.66666666667 * 11 = 18.33333333337 (left: 18.33333333337)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.33333333333"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one number so no possible next steps."
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There is only one number so no possible next steps. -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 11 25"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 + 11 = 16 (left: 16 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 * 11 = 55 (left: 55 25) -> 55 - 25 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number so no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16 25"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 + 11 = 16 (left: 16 25) -> 16 * 25 = 400 (left: 400)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Input is already a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.66666666667 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 / 1.66666666667 = 6.6 (left: 6.6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.33333333333"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 - 1.66666666667 = 9.33333333333 (left: 9.33333333333) -> There are no possible next steps as the input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 11 25"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 11 25"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 * 11 = 55 (left: 55 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 * 11 = 55 (left: 55 25) -> Input: 10 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16 25"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 5 + 11 = 16 (left: 16 25) -> 16 / 25 = 0.64 (left: 0.64)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 1 - 9 = -8 (left: -8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 1 - 9 = -8 (left: -8 9) -> -8 * 9 = -72 (left: -72)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "9 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input: 3 5 7"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Input: 3 5 7 -> 7 - 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 7"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 7"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps as there is only one number. -> Input: 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left:",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 3 * 5 = 15 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 * 5 = 15 ("
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 3 * 5 = 15 ( -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 7"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with input 56."
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no more possible next steps with input 56. -> There are no more possible next steps with input 56.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 * 5 = 15 ("
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 3 * 5 = 15 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3 * 5 = 15 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 7"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "56"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no more possible next steps with input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps with input 56."
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no more possible next steps with input 56. -> There are no more possible next steps with input 56.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 9 * 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 * 5 = 15 ("
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 3 * 5 = 15 ( -> 5 / 3 = 1.67 (left: 1.67",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 3 * 6 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 7"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 / 1 = 9 (left:"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 9 * 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps: -> There are no possible next steps provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 7"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.14"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 14 * 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "9 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9 10"
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 1 + 9 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps provided in the input."
                }
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 * 8 = 72 (left: 72)\nAnswer: 2 * ((3 + 6) - 4) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "15 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 5 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) / 4 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 13 / 6 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 13"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "49"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49) -> 49 - 8 = 41 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n35 - 3 = 32 (left: 2 32)\n32 / 2 = 16 (left: 16)\nAnswer: (5 * 7) - (3 + 2) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\nAnswer: (2 * 3) * (5 + 5) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "13 - 9 = 4 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 13"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 / 13 = 2.76923076923 (left: 2.76923076923)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2.769"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 / 13 = 2.769 (left: 2.769) -> There are no possible next steps with the input of 2.769 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "9 78"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 13"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2.769"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 / 13 = 2.769 (left: 2.769) -> 2.769 / 8 = 0.346125 (left: 0.346125 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 7 7 3\nSteps:\n7 + 7 = 14 (left: 14 7 3)\n14 - 7 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: ((7 + 7) - 7) * (7 * 3) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 6 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 6) / 2 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "15 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 13"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 - 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "49"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49) -> No possible next steps as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: ((3 * 7) - 5) * 2 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\nAnswer: ((2 + (3 + 6)) * 4) - 4 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * (5 * 12) / 2.5 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 54 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 13"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 / 13 = 2.769 (left: 2.769)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "49"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49) -> There are no possible next steps with the input 49. It is a prime number and cannot be combined with any of the other numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 - 15 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.142857142857143"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 15 / 7 = 2.142857142857143 (left: 2.142857142857143) -> 2.142857142857143 / 2 = 1.071428571428572",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 14 /  2 = 7 (left: 7 8",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "11 2 24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 24) -> 24 - 2 = 22 (left: 11 22)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 2 "
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.466666667 (left: 0.466666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 15 - 7 = 8 (left: 8) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 / 8 = 1.875 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> none",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "19 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "11 2 24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 24) -> 24 - 11 = 13 (left: 2 13)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 * 15 = 105 (left: 105) -> 105 * 2 = 210 (left: 210)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 - 15 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.142857142857143"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "11 2 24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 24) -> 11 * 2 = 22 (left: 22 24)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 15 - 7 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 11 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 8 + 11 = 19 (left: 15 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "7 8"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 14 /  2 = 7 (left: 7 8 -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "11 2 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 * 8 = 88 (left: 15 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 15 / 7 = 2.142857142857143 (left: 2.142857142857143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.466666667"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.466666667 (left: 0.466666667) -> 0.466666667 + 2 = 2.466666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 8 + 11 = 19 (left: 19 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "11 2 24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 + 15 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 24) -> 11 + 2 = 13 (left: 13 24)",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "3 7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 10 "
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 3 10  -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None.",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 10 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15 130"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 130 - 15 = 115 (left: 115)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13.7"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 15 - 1.3 = 13.7 (left: 13.7) -> There are no possible next steps with the input 13.7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 13 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.6153846153846154"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.6153846153846154 * 8 ="
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 8 = -> 0.6153846153846154 * 8 = 4.923076923076923",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.3076923076923077 = 1.2307692307692308"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 0.6153846153846154 / 2 = 0.3076923076923077 (left: 0.3076923076923077 = 1.2307692307692308) -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15 130"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 15 * 130 = 1950 (left: 1950)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13.7"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 15 - 1.3 = 13.7 (left: 13.7) -> There are no possible next steps with the input 13.7, as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.6153846153846154"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6153846153846154 * 2 = 1.2307692307692308"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 0.6153846153846154 / 2 = 0.3076923076923077 (left: 0.3076923076923077 = 1.2307692307692308)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.3076923076923077 = 1.2307692307692308"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 0.6153846153846154 / 2 = 0.3076923076923077 (left: 0.3076923076923077 = 1.2307692307692308) -> 0.3076923076923077 - 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.3 15"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 15 - 1.3 = 13.7 (left: 13.7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1950"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 15 * 130 = 1950 (left: 1950) -> 19 - 50 = -31 (left: -31)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1.83 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.83 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.6153846153846154"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.6153846153846154 * 2 = 1.2307692307692308"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 2 + 0.6153846153846154 = 2.6153846153846154",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.3076923076923077 = 1.2307692307692308"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 0.6153846153846154 / 2 = 0.3076923076923077 (left: 0.3076923076923077 = 1.2307692307692308) -> 0.3076923076923077 * 2 = 0.6153846153846154 (left: 0.6153846153846154 = 1.2307692307692308)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.83 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 1.83 * 13 = 23.79 (left: 23.79)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16.3"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 + 15 = 16.3 (left: 16.3) -> There are no possible next steps for the input 16.3 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 \u2248 0.615 (left: 0.615)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.6153846153846154"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 + 2 = 2.6153846153846154",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.6153846153846154 * 8 ="
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 8 = -> 0.6153846153846154 * 8 = 4.923076923076923",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.3076923076923077 = 1.2307692307692308"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 0.6153846153846154 / 2 = 0.3076923076923077 (left: 0.3076923076923077 = 1.2307692307692308) -> 0.3076923076923077 * 4 = 1.2307692307692308 (left: 1.2307692307692308)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 13.7, as it is already a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.3 15"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 + 15 = 16.3 (left: 16.3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1950"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 15 * 130 = 1950 (left: 1950) -> 1 + 9 + 5 + 0 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.6153846153846154"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 8 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6153846153846154 + 2 = 2.6153846153846154"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 + 2 = 2.6153846153846154 -> 2.6153846153846154 - 2 = 0.6153846153846154",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.3076923076923077 = 1.2307692307692308"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 - 3 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154) -> 0.6153846153846154 * 2 = 1.2307692307692308 -> 0.6153846153846154 / 2 = 0.3076923076923077 (left: 0.3076923076923077 = 1.2307692307692308) -> 0.3076923076923077 * 4 = 1.2307692307692308 (left: 1.2307692307692308)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 16.3 as it is a single number."
                }
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 15"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "7 - 7 = "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.16666666666666666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 15"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "7 - 7 = "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 15"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "7 - 7 = "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 1 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 15"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "7 - 7 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "7 - 7 = "
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 15"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "7 - 7 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "7 - 7 = "
                }
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8.57142857143 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "102.85714285716"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 / 2 = 51.42857142858",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "102.857142857 8.57142857143 1.399999999"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 102.857142857 - 8.57142857143 = 94.28571428557 (left: 94.28571428557 1.399999999)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "102.857142857 12 1.399999999"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 * 1.399999999 = 12 (left: 102.857142857 12 1.399999999) -> 1.399999999 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "102.857142857 8.57142857143 1.399999999"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 * 1.399999999 = 11.999999998 (left: 11.999999998 102.857142857 8.57142857143)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3.42857142857"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 / 2 = -1.71428571429",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12 / 8.57142857143 = 1.399999999"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.85714285716",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8.57142857143 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "20.57142857143"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 + 12 = 20.57142857143 (left: 20.57142857143) -> 20.57142857143 + 2 = 22.57142857143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "102.857142857 8.57142857143 1.399999999"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 102.857142857 + 8.57142857143 = 111.42857142843 (left: 111.42857142843 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.083333333 8.57142857143 1.399999999"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999) -> 0.083333333 + 8.57142857143 = 8.65476190443 (left: 8.65476190443 1.399999999)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.7142857143 1.399999999"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999) -> 0.083333333 * 8.57142857143 = 0.7142857143 (left: 0.7142857143 1.399999999) -> 1.399999999 + 0.7142857143 = 2.1142857133 (left: 2.1142857133)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "12 / 10 = 1.2 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11.999999998 102.857142857 8.57142857143"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 * 1.399999999 = 11.999999998 (left: 11.999999998 102.857142857 8.57142857143) -> 8.571428",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12 / 8.57142857143 = 1.399999999"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12 / 8.57142857143 = 1.399999999"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 + 8.57142857143 = 20.5714285714 (left:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8.57142857143 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 + 12 = 20.57142857143 (left: 20.57142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 / 8.57142857143 = 1.399999999"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "102.857142857 8.57142857143 1.399999999"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 102.857142857 + 1.399999999 = 104.25714285699",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.083333333 8.57142857143 1.399999999"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999) -> 0.083333333 * 8.57142857143 = 0.7142857143 (left: 0.7142857143 1.399999999)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8.65476190443 1.399999999"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999) -> 0.083333333 + 8.57142857143 = 8.65476190443 (left: 8.65476190443 1.399999999) -> 8.65476190443 / 1.399999999 = 6.18263707531 (left: 6.18263707531)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3.42857142857"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3.42857142857"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 / 2 = -1.71428571429",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "-3.42857142857 + 2 = -1.42857142857"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 + 2 = -1.42857142857 -> -3.42857142857 - 2 = -5.42857142857",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8.57142857143 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "102.85714285716"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 / 2 = 51.42857142858",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "102.857142857 8.57142857143 1.399999999"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "102.857142857 12 1.399999999"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 * 1.399999999 = 12 (left: 102.857142857 12 1.399999999) -> 102.857142857 + 12 = 114.857142857 (left: 1.399999999 114.857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8.65476190443 1.399999999"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999) -> 0.083333333 + 8.57142857143 = 8.65476190443 (left: 8.65476190443 1.399999999) -> 8.65476190443 / 1.399999999 = 6.18268628959 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3.42857142857"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 / 2 = -1.71428571429",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "-3.42857142857 / 2 = -1.71428571429"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 / 2 = -1.71428571429 -> -3.42857142857 - 2 = -5.42857142857 (left: -5.",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "-3.42857142857 / 2 = -1.71428571429"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8.57142857143 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "102.85714285716"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> There are no possible next steps for the input 102.85714285716.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "102.857142857 8.57142857143 1.399999999"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 * 1.399999999 = 12 (left: 102.857142857 12 1.399999999)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "94.28571428557 1.399999999"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 102.857142857 - 8.57142857143 = 94.28571428557 (left: 94.28571428557 1.399999999) -> 94.2857142857 + 1.4 = 95.6857142857 (left: 95.6857142857)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "102.857142857 8.57142857143 1.399999999"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.7142857143 1.399999999"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 / 8.57142857143 = 1.399999999 -> 12 * 8.57142857143 = 102.857142857 (left: 102.857142857 8.57142857143 1.399999999) -> 8.57142857143 / 102.857142857 = 0.083333333 (left: 0.083333333 8.57142857143 1.399999999) -> 0.083333333 * 8.57142857143 = 0.7142857143 (left: 0.7142857143 1.399999999) -> 1.399999999 / 0.7142857143 = 1.960000001 (left: 1.960000001)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "102.85714285716"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3.42857142857"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 + 2 = -1.42857142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-3.42857142857 / 2 = -1.71428571429"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 - 12 = -3.42857142857 (left: -3.42857142857) -> -3.42857142857 / 2 = -1.71428571429 -> -3.42857142857 + 2 = -1.42857142857 (left: -1.42857142857 / 2)",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.42857 7 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.57143 11"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 - 1.42857 = 5.57143 (left: 5.57143 11) -> 11 / 5.57143 = 1.97619 (left: 1.97619 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16.57143 18"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 18 - 16.57143 = 1.42857 (left: 1.42857 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18 34.57143"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 16.57143 + 18 = 34.57143 (left: 18 34.57143) -> 18 * 34.57143 = 622.28574 (left: 34.57143 622.28574)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.9091"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091) -> There is only one possibility: 0.9091 * 2 = 1.8182",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 * 7 = 70 (left: 70 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 7 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 11 - 7 = 4 (left: 4 7 11) -> 4 * 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.57143 11"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 - 1.42857 = 5.57143 (left: 5.57143 11) -> 11 / 5.57143 = 1.97499 (left: 1.97499)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.9091 * 2 = 1.8182"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.42857 16.57143"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 1.42857 16.57143) -> 16.57143 - 1.42857 = 15.14286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18 34.57143"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 16.57143 + 18 = 34.57143 (left: 18 34.57143) -> 18 * 34.57143 = 622.28674 (left: 34.57143 622.28674)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.9091"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091) -> 1 / 0.9091 = 1.1 (left: 1.1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 7 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 7 + 10 = 17 (left: 17 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.42857 7 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 / 1.42857 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.42857 18"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.42857 16.57143"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 1.42857 16.57143) -> 16.57143 / 1.42857 = 11.57143 (left: 1.42857 11",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18 34.57143"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 16.57143 + 18 = 34.57143 (left: 18 34.57143) -> 18 / 34.57143 = 0.52083 (left: 0.52083 34.57143)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> No further steps can be taken with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 7 + 10 = 17 (left: 17 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "70 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 * 7 = 70 (left: 70 11) -> 70 - 11 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.57143 11"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 - 1.42857 = 5.57143 (left: 5.57143 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.42857 16.57143"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 1.42857 16.57143) -> 16.57143 * 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18 34.57143"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 16.57143 + 18 = 34.57143 (left: 18 34.57143) -> 18 / 34.57143 = 0.52084 (left: 34.57143 ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 5 + 2 = 7 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.9091"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091) -> 0.9091 * 2 = 1.8182",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 11 - 7 = 4 (left: 4 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.42857 7 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 - 1.42857 = 5.57143 (left: 5.57143 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.42857 18"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 1.42857 16.57143)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16.57143 18"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 16.57143 + 18 = 34.57143 (left: 18 34.57143)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18 34.57143"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 / 7 = 1.42857 (left: 1.42857 7 11) -> 7 + 11 = 18 (left: 1.42857 18) -> 18 - 1.42857 = 16.57143 (left: 16.57143 18) -> 16.57143 + 18 = 34.57143 (left: 18 34.57143) -> 18 - 34.57143 = -16.57143 (left: -16.57143 34.57143)",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 22"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.44"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> 2.44 - 2 = 0.44 (left: 0.44)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "198"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 9"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 10 - 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 10 - 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> 15 - 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 22"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 9 - 22 = -13 (left: -13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.44"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There is only one number given, so there are no possible next steps to perform any operations. The input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 9"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 10 - 4 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Input: 7 3"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 7 + 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 22"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 + 9 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 + 9 = 31 (left: 31) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 7 - 3 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "31"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "198"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198) -> 1 + 9 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 22"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.44"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "Input: 7 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Input: 7 3"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 22"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "31"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 + 9 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 22"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "198"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198) -> 1 + 9 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 10 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 10 9"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 10 - 4 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 22 / 9 = 2.44 (left: 2.44) -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number. -> There are no possible next steps for the input 2.44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Input: 7 3"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 2.44 as it is a single number."
                }
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 / 6 = 2 (left: 2 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 5",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "6 12 19"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 * 19 = 342 (left: 342)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "6 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 * 9 = 54 (left: 54 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 + 6 = 25 (left: 6 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 25"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 + 6 = 25 (left: 6 25) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 / 6 = 3.16666666667 (left: 3.16666666667)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "15 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 / 6 = 2 (left: 2 19) -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 19"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "54 22"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 * 9 = 54 (left: 54 22) -> 54 * 22 = 1188 (left: 1188)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 25"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 + 6 = 25 (left: 6 25) -> 25 / 6 = 4.166666666666667 (left: 4.166666666666667)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 - 6 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 / 6 = 2 (left: 2 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 / 19 = 0.947368421 (left: 0.947368421)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 12 19"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "72 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 25"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 + 6 = 25 (left: 6 25) -> 6 + 25 = 31 (left: 31)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 6 / 19 = 0.3157894736842105 (left: 0.3157894736842105)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 22"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 25"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 + 6 = 25 (left: 6 25) -> 25 - 6 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "19 / 6 = 3 (left:"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 6 / 19 = 0.3157894736842105 (left: 0.3157894736842105)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "19 / 6 = 3.166666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 12 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 / 6 = 2 (left: 2 19) -> 19 / 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "19 / 6 = 3.166666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "72 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19) -> 72 / 19 \u2248 3.7895 (left: 3.7895)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 25"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3 (left: -> 19 + 6 = 25 (left: 6 25) -> 6 * 25 = 150 (left: 150)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "108 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 135"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "27 135"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135) -> 135 - 27 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 27"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27) -> 4 * 27 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "27 2916"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "27 216"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27) -> 12 * 18 = 216 (left: 27 216) -> 27 * 216 = 5832 (left: 5832)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "27 135"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "108 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 - 108 = -81 (left: 108 -81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "27 135"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27) -> 4 * 27 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "108 27"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "27 216"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27) -> 12 * 18 = 216 (left: 27 216) -> 27 + 216 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "27 135"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "108 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 135"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 - 135 = -108 (left: -108)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "27 / 108 = 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "27 135"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "27 135"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27) -> 4 * 27 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "27 135"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: 108 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 3 * 12 = 36 (left: 36 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "27 216"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27) -> 12 * 18 = 216 (left: 27 216) -> 216 / 27 = 8 (left: 8 216)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "108 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 / 108 = 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1.33 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "27 135"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135) -> 135 / 27 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3 9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "27 135"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135) -> 27 / 135 = 0.2 (left: 0.2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 + 27 = 39 (left: 9 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 3 + 12 = 15 (left: 15 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "27 216"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27) -> 12 * 18 = 216 (left: 27 216) -> 216 / 27 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "108 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 * 27 = 2916 (left: 27 2916)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 / 27 = 4 (left: 4 27) -> 27 / 4 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 + 27 = 39 (left: 9 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "27 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 108 + 27 = 135 (left: 27 135) -> 27 * 5 = 135 (left: 27 135) -> 9 * 3 = 27 (left: 27 27) -> 27 / 27 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 39"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12 18 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27) -> 12 * 18 = 216 (left: 27 216)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "27 216"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18 27) -> 12 * 18 = 216 (left: 27 216) -> 27 - 2 = 25 (left: 25 216)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 72"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "14.4"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the input 14.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 14.4."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the input 14.4. -> There are no possible next steps with the input 14.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the number 14.4."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> No possible next steps with the input 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> Input: 3 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 72"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "67"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67) -> 67 + 2 = 69",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to take."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67) -> There is only one number given, so there are no possible next steps to take. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the number 14.4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "67 / 2 = 33.5"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67) -> 67 + 2 = 69 -> 67 / 2 = 33.5 -> 67 * 2 = 134.0 (left: 134.0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 14.4."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 72"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "67"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67) -> There is only one number provided, so there are no possible next steps for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the number 14.4."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the number 14.4."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 * 8 = 88 (left: 8 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 + 5 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 72"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 5 * 72 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "67"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67) -> There is only one number given, so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "67 + 2 = 69"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67) -> 67 + 2 = 69 -> 67 / 2 = 33.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the number 14.4."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 72"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 - 5 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "14.4"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the number 14.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the number 14.4."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the number 14.4. -> There are no possible next steps with the number 14.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with the input 14.4."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 72 / 5 = 14.4 (left: 14.4) -> There are no possible next steps with the input 14.4. -> There are no possible next steps with the input 14.4. -> There are no possible next steps with the input 14.4.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 30"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7.5 30"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 30"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12 * 6 = 72"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 12 * 6 = 72 -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Input: 10 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There is only one number given, so there are no possible arithmetic operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 30"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "120"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120) -> 120 / 3 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "120"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 30"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "4 30"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 12 * 6 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "120"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120) -> No further steps can be taken with the number 120.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.33333"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 30"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "34"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> 34 - 2 = 32 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 30"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30) -> 4 + 30 = 34 (left: 30)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "120"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "120"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120) -> 120 - 2 = 118",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> Possible next steps: -> None.",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "4 30"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 30"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "34"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps as there are no other numbers to perform operations on. The input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 30"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30) -> 30 - 4 = 26 (left: 26 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "120"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 120) -> 120 * 2 = 240",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 + 5 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 30"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 - 4 = 26 (left: 4 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> Possible next steps: -> 8 / 8 = 1 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 30"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "34"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> 16 + 4 = 20 (left: 2 9 20)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-4 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 24 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-4 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "2.5 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "10 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-4 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "10 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 4 + 10 = 14 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 10"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 24"
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 4"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 / 1 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.75"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 3 / 4 = 0.75 (left: 0.75) -> There is only one number in the input, so there are no possible arithmetic operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "50 2"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 10 * 5 = 50 (left: 50 2) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5) ",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 / 5 = 2"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 2 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "50 2"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 10 * 5 = 50 (left: 50 2) -> 50 * 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 * 8 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 / 5 = 2"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 10 * 5 = 50 (left: 50 2)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "50 2"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 10 * 5 = 50 (left: 50 2) -> 50 - 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 / 3 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 49",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 3 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.33333"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "50 2"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 10 * 5 = 50 (left: 50 2) -> 50 * 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There is only one number in the input, so there are no possible arithmetic operations to perform."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 / 1 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> 1 + 1 = 2 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "50 2"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 4) -> 10 / 5 = 2 -> 10 * 5 = 50 (left: 50 2) -> 50 * 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "56"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps as there are no other numbers given to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 14 / 1 = 14 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 14 = 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 + 4 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "15"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "3 + 6 = 9 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 14 = 15"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 14 / 1 = 14 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 14 / 1 = 14 (left: 1 15) -> 15 / 1 = 15 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 14 = 15"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) ",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Input: 6 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1.14"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 14 / 1 = 14 (left: 1 15) -> 15 / 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Input: 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 14 / 1 = 14 (left: 1 15) -> 15 / 1 = 15 (left: 1 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "56"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> 56 - 2 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 14 = 15"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 1 + 14 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 14 = 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 14 = 15 -> 14 / 1 = 14 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11.25"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is only one number given, so there is no possible next step to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 3"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one number given, so there is no possible next step to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 10 - 5 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 6 - 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18 9"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 6 * 3 = 18 (left: 18 9) -> 18 - 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 5 7"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 3"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 10 - 5 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "9 36"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 3"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4 -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Input: 4 10"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 3 9) -> Input: 4 10 -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 3"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 10 - 5 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2.25 10 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2.25 10 11"
                }
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 9"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 3 9) -> Input: 4 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4 -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 3"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 36"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 10 - 5 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4 -> 4 * 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4 -> 4 * 2 = 8 (left: 8) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 3 3 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 6 - 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 3"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 10 - 5 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 10 - 5 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2.25 10 11"
                }
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 2.25 * 10 = 22.5 (left: 11 22.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4 -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 10 / 2.25 = 4.44 (left: 4 -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 9"
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 3 + 5 = 8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 90 - 8 = 82 (left: 1 82)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 + 11 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "21 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "84"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 90"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 + 3 + 2 + 3 = 9"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 + 3 + 2 + 3 = 9 -> 1 + 3 + 5 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 + 11 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "21 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "84"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 + 3 + 2 + 3 = 9"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 + 3 + 2 + 3 = 9 -> 2 + 3 + 3 = 8 (left: 1 + 8 = 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "56 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 * 7 = 56 (left: 56 90) -> 56 / 90 = 0.62222222 (left: 0.62222222)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "7 8 90"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 90 - 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "77 90"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "21 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "84"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "84"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 + 4 = 12"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 + 4 = 12 -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 90"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 7 / 8 = 0.875 (left: 0.875 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "56 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 * 7 = 56 (left: 56 90) -> 56 * 90 = 5040 (left: 5040)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 63"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 9 + 90 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 63"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 * 11 = 110 (left: 110 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "21 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1323"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 + 3 + 2 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 + 4 = 12"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 + 4 = 12 -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 11 = 79 (left: 11 79)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 * 7 = 56 (left: 56 90)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "56 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 * 7 = 56 (left: 56 90) -> 56 * 90 = 5040 (left: 5040)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 90"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 83)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "21 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "42"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with just the number 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 + 4 = 12"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 + 4 = 12 -> 12 / 4 = 3 (left: 3 8 ",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 3 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps for the input 5 with the numbers 2 8 8 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 3 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 12 / 3 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 8 = 11 (left: 11",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps for the input 5 with the numbers 2 8 8 14."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps for the input 5 with the numbers 2 8 8 14. -> 5 + 14 = 19 (left: 2 8 19)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 3 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 * 9 = 27 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 / 5 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) ",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "Input: 10 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> There are no possible next steps with the input of 6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input of 6."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> There are no possible next steps with the input of 6. -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps, as there are no numbers provided after the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "No possible next steps, as there are no numbers provided after the input."
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps, as there are no numbers provided after the input. -> There are no possible next steps as no numbers are provided after the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as no numbers are provided after the input."
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps, as there are no numbers provided after the input. -> There are no possible next steps as no numbers are provided after the input. -> No numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 * 6 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps with the input 0."
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps with the input 0. -> No possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as no numbers are provided after the input."
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps, as there are no numbers provided after the input. -> There are no possible next steps as no numbers are provided after the input. -> There are no possible next steps as no numbers are provided after the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "No numbers provided."
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps, as there are no numbers provided after the input. -> There are no possible next steps as no numbers are provided after the input. -> No numbers provided. -> Please provide numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Please provide numbers to perform operations on."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps, as there are no numbers provided after the input. -> There are no possible next steps as no numbers are provided after the input. -> No numbers provided. -> Please provide numbers to perform operations on. -> - Multiplication: Enter two numbers to perform multiplication.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 + 6 = 8.25 (left: 8.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps with the input 0."
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps with the input 0. -> No possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps with the input 0."
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps with the input 0. -> No possible next steps with the input 0. -> No possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 + 6 = 8.25 (left: 8.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8.25"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 + 6 = 8.25 (left: 8.25) -> There are no possible next steps for the input 8.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 0 -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.333333333333333"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 + 5.333333333333333 = 10.666666666666666 (left: 5.333333333333333 10.666666666666666)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5.333333333333333 10.666666666666666"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 + 5.333333333333333 = 10.666666666666666 (left: 5.333333333333333 10.666666666666666) -> 10.666666666666666 - 5.333333333333333 = 5.333333333333333 (left: 5.333333333",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "5.33"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 5.33."
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.333333333333333"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 + 5.333333333333333 = 10.666666666666666 (left: 5.333333333333333 10.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5.333333333333333 10.666666666666666"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 + 5.333333333333333 = 10.666666666666666 (left: 5.333333333333333 10.666666666666666) -> 5.333333333333333 * 10.666666666666666 = 56.888888888888886 (left: 56.888888888",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1.5 8"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "5.33"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 + 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.333333333333333"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 * 2 = 10.666666666666666 (left: 10.666666666666666)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5.33333"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5.333333333333333 28.444444444444443"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 * 5.333333333333333 = 28.444444444444443 (left: 5.333333333333333 28.444444444444443) -> 5.333333333333333 + 28.444444444444443 = 33.77777777777778 (left: 33.77777777777778)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1.5 8"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 12"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> There is no possible next step with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.333333333333333"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5.33333"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5.333333333333333 10.666666666666666"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 + 5.333333333333333 = 10.666666666666666 (left: 5.333333333333333 10.666666666666666) -> 10.666666666666666 / 5.333333333333333 = 2 (left: 5.333333333333333 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 12"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 5.33."
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33 as it is a single number and not a combination of numbers with operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps for the input 5.33."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33. -> There are no possible next steps for the input 5.33.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 8 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.333333333333333"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 * 5.333333333333333 = 28.444444444444443 (left: 5.333333333333333 28.444444444444443)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5.333333333333333 28.444444444444443"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 * 5.333333333333333 = 28.444444444444443 (left: 5.333333333333333 28.444444444444443) -> 5.333333333333333 + 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5.333333333333333 2"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.333333333333333) -> 5.333333333333333 + 5.333333333333333 = 10.666666666666666 (left: 5.333333333333333 10.666666666666666) -> 10.666666666666666 / 5.333333333333333 = 2 (left: 5.333333333333333 2) -> 5.333333333333333",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5.33333"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 12"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number, so no possible next steps."
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There is only one number, so no possible next steps. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 0.1875"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "20 + 2 = 22"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 + 2 = 22 -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "5.333333333333333 10.666666666666666"
                }
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 8"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7.125 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 / 7.125 \u2248 1.122807 (left: 1.122807 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 - 7.125 \u2248 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "-7.125"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.122807 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8) -> 1 - 8 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 8 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7.125 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 - 7.125 \u2248 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 - 7.125 \u2248 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.142857142857142 (left: 9.142857142857142)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 56"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.122807 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 7 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.142857142",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 - 8 = -7.125 (left: -7.125)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7.125 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 7.125 - 8 = -0.875 (left: -0.875)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "-7.125"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 - 7.125 \u2248 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.142857142857142 (left: 9.142857142857142)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.890625 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "7 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.142857... (left: 1.142857... 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.142857142857142 (left: 9.142857142857142)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7.125 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 7.125 / 8 = 0.890625 (left: 0.890625 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 - 7.125 \u2248 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.122807 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 4 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 8"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7.125 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 7.125 / 8 = 0.890625 (left: 0.890625)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "7 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125 8) -> 8 - 7.125 \u2248 0.875 (left: 0.875 8) -> 0.875 / 8 = 0.109375 (left: 0.109375)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 56"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.122807 8"
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "17.33"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps with the input 17.33 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.4441666666666667 * 2 = 0.8883333333333334"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 / 2 = 0.22208333333333335 (left: 0.888333333333333",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.4441666666666667 * 2 = 0.8883333333333334"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.4441666666666667 - 2 = -1.5558333333333333"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 / 2 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.8883333333333334 -1.5558333333333333"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 - (-1.5558333333333333) = 2.444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.8883333333333334 / (-1.5558333333333333"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 / (-1.5558333333333333) = -0.571 -> 0.8883333333333334 * (-1.5558333333333333) = -1.3837694444444445",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.8883333333333334 - 1.5558333333333333 = -0.6675"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 + (-1.5558333333333333) = -0.6675 -> 0.8883333333333334 - 1.5558333333333333 = -0.6675 -> 0.8883333333333334 / 1.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4441666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0.4441666666666667 * 2 = 0.8883333333333334"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4441666666666667 - 2 = -1.5558333333333333"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 / 2 = 0.22208333333333335",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.8883333333333334 -1.5558333333333333"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 / (-1.5558333333333333) = -0.571",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.4441666666666667 / 2 = 0"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 / 2 = 0 -> 0.4441666666666667 - 2 = -1.5558333333333333 (left: -1.5558333333333333)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "17.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0.8883333333333334 + 1.5558333333333333 = 2.4441666666666667"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 - (-1.5558333333333333) = 2.444 -> 0.8883333333333334 + 1.5558333333333333 = 2.4441666666666667 -> 0.8883333333333334 - 1.5558333333333333 = -0.6675000000000001",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4441666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 17.33 as it is a single number and not a mathematical expression."
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps with the input 17.33 as it is a single number and not a mathematical expression. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6.67"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.4441666666666667 * 2 = 0.8883333333333334"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.8883333333333334 / 2 = 0.4441666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.8883333333333334 -1.5558333333333333"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 * (-1.5558333333333333) = -1.3834652777777777 (left: -1.3834652777777777)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0.4441666666666667 / 2 = 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.8883333333333334 + (-1.5558333333333333"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 + (-1.5558333333333333) = -0.6675 -> 0.8883333333333334 - 1.5558333333333333 = -0.6675",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "17.33"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "17.33"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps as there are not enough numbers provided to perform any mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps as there are not enough numbers provided to perform any mathematical operations."
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps as there are not enough numbers provided to perform any mathematical operations. -> Please provide more numbers to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.4441666666666667 - 2 = -1.5558333333333333"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.8883333333333334 -1.5558333333333333"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 / (-1.5558333333333333) = -0.571",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.8883333333333334 - (-1.5558333333333333"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 - (-1.5558333333333333) = 2.444 -> 0.8883333333333334 + 1.5558333333333333 = 2.4441666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.8883333333333334 * (-1.5558333333333333"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 / (-1.5558333333333333) = -0.571 -> 0.8883333333333334 * (-1.5558333333333333) = -1.3837694444444445 -> 0.8883333333333334 + (-1.5558333333333333) = -0.6675",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4441666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0.4441666666666667 * 2 = 0.8883333333333334"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6.67"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> There are no possible next steps with the input 6.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.8883333333333334 -1.5558333333333333"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 + (-1.5558333333333333) = -0.6675",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.8883333333333334 + (-1.5558333333333333"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 + (-1.5558333333333333) = -0.6675 -> 0.8883333333333334 - 1.5558333333333333 = -0.6675",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.8883333333333334 - 1.5558333333333333 = -0.6675"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.4441666666666667 (left: 0.4441666666666667) -> 0.4441666666666667 * 2 = 0.8883333333333334 -> 0.4441666666666667 - 2 = -1.5558333333333333 -> 0.4441666666666667 * 2 = 0.8883333333333334 (left: 0.8883333333333334 -1.5558333333333333) -> 0.8883333333333334 + (-1.5558333333333333) = -0.6675 -> 0.8883333333333334 - 1.5558333333333333 = -0.6675 -> 0.8883333333333334 / 1.5558333333333333 = 0.5715067826839827",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 4) + 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 4) + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 6) + 4) + 10 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 4) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "2.5 10 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (6 + 4) + (4 + 10) = 24"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.33 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 * 8 = 10.64 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 13 / 9 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 15"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 15 - 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "15 - 9 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 13 / 9 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.33 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.33 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 + 8 = 9.33 (left: 8 9.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 15"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 15 / 6 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 15"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 13 / 9 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "14 + 8 = 22"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 14 + 8 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.33 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 * 8 = 10.64 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 9.33"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 + 8 = 9.33 (left: 8 9.33) -> 8 + 9.33 = 17.33 (left: 17.33)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 15"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 * 15 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 13 / 9 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "14 + 8 = 22"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5) -> 5.5 - 8 = -2.5 (left: -2.5)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.33 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 8 - 1.33 = 6.67 (left: 6.67)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 / 9 = 1.44444 (left: 1.44444 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 15"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 15 / 6 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 13 / 9 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "14 + 8 = 22"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1.5 4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.33 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 * 8 = 10.64 (left: 10.64)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.66666666667"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 9.33"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6 -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 + 8 = 9.33 (left: 8 9.33) -> 8 / 9.33 = 0.857 (left: 0.857)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.66666666667"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 22 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 15"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 15"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 9 = 15 (left: 9 13 15) -> 13 / 9 = 1 (left: 1 15) -> 1 / 15 = 0.06666666666666667 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.33 8"
                }
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "Error: Incomplete input. Please provide more numbers to continue."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 9 - 4 = 5 (left: 5) -> Error: Incomplete input. Please provide more numbers to continue. -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665) -> 3.6666666666666665 + 3.6666666666666665 = 7.333333333333333 (left: 7.333333333333333)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Please provide at least two numbers to generate possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Input: 5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> Input: 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 5."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with the input 5. -> There are no possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no more possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 11 / 3 = 3.6667 (left: 3.6667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no more possible next steps with the input 5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 9 - 4 = 5 (left: 5) -> Error: Incomplete input. Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Please provide at least two numbers to generate possible next steps."
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> Input: 4 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 5."
                }
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.325"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.325 + 2 = 2.325"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 1.675 / 2 = 0.8375 (left: 0.8375)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "40 12"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 + 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.33"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> There are no possible next steps with the input 3.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> Input: 10 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 8 = 2 (left: 8) ",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "40 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "40 14"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 - 14 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 2 - 1.675 = 0.325 (left: 0.325)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "40 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "40 12"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> There are no possible next steps with the input 3.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 1.675 * 2 = 3.35 (left: 3.35)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.325 + 2 = 2.325"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 * 40 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "40 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "40 14"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 / 14 = 2.857142857142857 (left: 2.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8 19) -> 4 + 5 = 9 (left: 6 7 9) -> 9 - 6 = 3 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "520"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.325 + 2 = 2.325"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> There are no possible next steps with the input \"3.33\" as it is already a single number and not a combination of numbers that can be operated on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 1.675 - 2 = -0.325 (left: -0.325)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.65 + 2 = 2.65"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.325"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 19"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8 19) -> 4 + 5 = 9 (left: 6 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 1.675 + 2 = 3.675 (left: 3.675)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "40 12"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "52"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 + 12 = 52 (left: 52) -> 52 - 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.675 2"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 1.675 / 2 = 0.8375 (left: 0.8375)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "1.675 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.325 + 2 = 2.325"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 0.325 * 2 = 0.65 (left: 0.65 + 2 = 2.65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 7 9"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8 19) -> 4 + 5 = 9 (left: 6 7 9) -> 9 - 7 = 2 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "40 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "520"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 * 40 = 520 (left: 520) -> 5 - 20 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "40 12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "40 12"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.675 2"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 / 40 = 0.325 (left: 0.325) -> 0.325 + 2 = 2.325 -> 2 - 0.325 = 1.675 (left: 1.675 2) -> 1.675 / 2 = 0.8375 (left: 0.8375)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.325 + 2 = 2.325"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 18"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> 5 / 18 = 0.2777777777777778 (left: 0.2777777777777778)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the given input. -> Input is not valid. Please provide a different set of numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "9 - 9 = 0 (left:"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 18"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "Input: 5 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> Input: 5 7 -> Input: 3 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with just one number. -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "5 18"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 18"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 18"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 5 / 10 = 0.5 (left: 0.5",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 18"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 18"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> 5 + 18 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 18 - 13 = 5 (left: 5 18) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 9 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9 4.9"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 10 = 4.9 (left: 9 4.9) -> 9 * 4.9 = 44.1 (left: 44.1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "139"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 13 + 9 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 3 * 9 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49) -> 49 / 1 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "49"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49) -> 49 / 1 = 49 (left: 49) -> 49 + 2 = 51",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 3 * 9 = 27 (left: 1 27) -> 27 - 27 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "15.44"
                }
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 9 = 5.44 (left: 10 5.44) -> 5.44 + 10 = 15.44 (left: 15.44) -> 15.44 * 2 = 30.88",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125) ",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 10 49"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 9 = 5.44 (left: 10 5.44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 5.44"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 9 = 5.44 (left: 10 5.44) -> 10 - 5.44 = 4.56 (left: 4.56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "139"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 3 * 9 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 3 * 9 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "90 49"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "49"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49) -> 49 / 1 = 49 (left: 49) -> 49 - 7 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "9 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 3 * 9 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 15.44 as it is a single number and not an equation with multiple operands."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 10 = 4.9 (left: 9 4.9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 5.44"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 9 = 5.44 (left: 10 5.44) -> 5.44 + 10 = 15.44 (left: 15.44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "15.44"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 9 = 5.44 (left: 10 5.44) -> 5.44 + 10 = 15.44 (left: 15.44) -> There are no possible next steps for the input 15.44 as it is a single number and not an equation with multiple operands.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49) -> 90 + 49 = 139 (left: 139) -> 3 * 9 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "15.44"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 15.44 as it is a single number and not an equation with multiple operands."
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 702359,
        "output_tokens": 239495.666666667,
        "total_cost": 0.7104230000000005
    }
}