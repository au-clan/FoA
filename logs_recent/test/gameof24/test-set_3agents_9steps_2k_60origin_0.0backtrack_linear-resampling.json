{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 9 / 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 9 / 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 + 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 1.25 6.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 1.25 6.4) -> 1.25 + 6.4 = 7.65 (left: 7.65)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the numbers provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps. -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 5 3 7 "
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 5 * 7 = 35 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 5 * 7 = 35 (left: -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 =  -> 7 / 3 = 2.33333333...",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 / 3 = 2.33333333..."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 =  -> 7 / 3 = 2.33333333... -> 3 - 7 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There seems to be an error in the input. Please provide a valid set of numbers for calculation."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> Input -> There seems to be an error in the input. Please provide a valid set of numbers for calculation. -> There seems to be an error in the input. Please provide a valid set of numbers for calculation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 5 3 7 "
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 5 * 3 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 5 * 3 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 = 3 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 / 3 = 2.33333333..."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 =  -> 7 / 3 = 2.33333333... -> 3 / 7 = 0.42857142857... (left: 0.42857142857...)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps for the input 0 as there are no numbers provided to perform operations on. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps for the input 0 as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps for the input 0 as there are no numbers provided to perform operations on. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> Input",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> Input -> There seems to be an error in the input. Please provide a valid set of numbers for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 / 3 = 2.33333333..."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 =  -> 7 / 3 = 2.33333333... -> 7 * 3 = 21 (left: 21 / 3 = 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 =  -> 7 / 3 = 2.33333333... -> 7 * 3 = 21 (left: 21 / 3 = 7) -> 21 * 3 = 63 (left: 63 = 7)",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with just the number 19 as input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with just the number 19 as input. -> There are no possible next steps with just the number 19 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the number 19 as input."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with just the number 19 as input. -> There are no possible next steps with just the number 19 as input. -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 6 "
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.67"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67. -> There are no possible next steps for the input 11.67 as it is not a whole number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "35"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps with the input of 35.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps with the input of 35. -> 35 * 5 = 175 (left: 175)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "35"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for the number 35 as it is already the final result."
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> 35 * 2 = 70",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> 35 * 2 = 70 -> 35 / 2 = 17.5 (left: 17.5 70)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "17.5 70"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> 35 * 2 = 70 -> 35 / 2 = 17.5 (left: 17.5 70) -> 17.5 + 70 = 87.5 (left: 70 87.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> 35 * 2 = 70 -> 35 / 2 = 17.5 (left: 17.5 70) -> 17.5 + 70 = 87.5 (left: 70 87.5) -> 70 - 87.5 = -17.5 (left: -17.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "35"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> 35 / 2 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for the number 35 as it is already the final result."
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "17.5 70"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> 35 * 2 = 70 -> 35 / 2 = 17.5 (left: 17.5 70) -> 70 - 17.5 = 52.5 (left: 52.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "35"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "17.5 70"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> There are no possible next steps for the number 35 as it is already the final result. -> There are no possible next steps for the number 35 as it is already the final result. -> 35 * 2 = 70 -> 35 / 2 = 17.5 (left: 17.5 70) -> 17.5 + 70 = 87.5 (left: 87.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14.625"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625 as it is already a single number. -> There are no possible next steps for the input 14.625 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "14.625"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> 14.625 - 2 = 12.625",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> 14.625 - 2 = 12.625 -> 2 - 14.625 = -12.625",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer. -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer. -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer. -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer. -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer. -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "45"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5) -> 9 * 5 = 45 (left: 45)  -> 45 * 2 = 90 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 - 2 = 2 (left: 2) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14.625"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14.625"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 14.625."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625 as it is not a whole number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625 as it is not a whole number. -> There are no possible next steps for the input 14.625 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5) -> 9 * 5 = 45 (left: 45) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "45"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5) -> 9 * 5 = 45 (left: 45)  -> 45 + 2 = 47",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 9 5) -> 9 * 5 = 45 (left: 45)  -> 45 + 2 = 47 -> 45 - 2 = 43 (left: 43)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14.625"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14.625"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer. -> There are no possible next steps for the number 14.625 as it is already a decimal number and not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 14.625."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625 as it is not a whole number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625. -> There are no possible next steps for the input 14.625 as it is not a whole number. -> There are no possible next steps for the input 14.625 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "34"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with the input of 34.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 34."
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no valid arithmetic operations that can be performed with the input of 34 to reach a target number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no valid arithmetic operations that can be performed with the input of 34 to reach a target number. -> There are no valid arithmetic operations that can be performed with the input of 34 to reach a target number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 34."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 / 14 = 0.5714285714285714 (left: 0.5714285714285714)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 34."
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34. -> There are no possible next steps with the input of 34.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "80"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps as the input is already a single number. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 80."
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80. -> There are no possible next steps with just the number 80.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80. -> There are no possible next steps with just the number 80. -> There are no possible next steps with just the number 80.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with just the number 80."
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80. -> 80 * 4 = 320 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80. -> 80 * 4 = 320 (left -> 4 - 80 = -76 (left: -76)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with just the number 80."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82 (left: 2)  -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "80"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82 (left: 2) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82 (left: 2)  -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input: 5"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps as the input is already a single number. -> Input: 5 -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps as the input is already a single number. -> Input: 5 -> There is only one number provided, so there are no possible next steps to calculate. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Possible"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Can you provide the numbers for the next calculation?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> Please provide numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Please provide numbers to continue the calculation."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> Please provide numbers to continue the calculation. -> 3. 8 / 2 = 4 (left: 4 6 64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> Please provide numbers to continue the calculation. -> 3. 8 / 2 = 4 (left: 4 6 64) -> 4 * 6 = 24 (left: 24 64)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "It seems like the input is missing. Can you provide the numbers for the next calculation?"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Can you provide the numbers for the next calculation? -> 2. Subtract one number from another",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Can you provide the numbers for the next calculation? -> 2. Subtract one number from another -> 4. Subtract one number from another",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4. Subtract one number from another"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Can you provide the numbers for the next calculation? -> 2. Subtract one number from another -> 4. Subtract one number from another -> 4 - 7 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Please provide numbers to continue the calculation."
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> Please provide numbers to continue the calculation. -> 8 / 7 = 1.142857142",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10.67"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left: -> 14 + 1 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left: -> 14 + 1 = 15 (left: 15) -> 15 - 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> - 14 = -14 (left: -14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left: -> 14 - 1 = 13 (left:)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left: -> 14 - 1 = 13 (left:) -> 13 + 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "14 / 1 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left: -> 14 * 1 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 1 = 14 (left: -> 14 * 1 = 14 (left: 14 14) -> 14 * 14 = 196 (left: 196)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> 10.67 * 2 = 21.34 (left: 2 21.34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations. -> 10.67 * 2 = 21.34 (left: 2 21.34) -> 2 + 21.34 = 23.34 (left: 21.34 23.34)",
                "Pruning": null
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 5\nSteps:\n2 * 5 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) - 5) * 3 +",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 0.875"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 7 / 8 = 0.875 (left: 2 8 0.875) -> 0.875 + 2 = 2.875 (left: 2.875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 9"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input: 4 16"
                }
            },
            "Step 7": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 / 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Input: 4 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> These are all valid ways to obtain the number 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 + 3 = 9"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 0.875"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 7 / 8 = 0.875 (left: 2 8 0.875) -> 2 / 0.875 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 9"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 + 7 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible next steps"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8) -> 1.1428571428571428 / 8 = 0.14285714285714286 (left: 0.14285714285714286 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 7 / 8 = 0.875 (left: 2 8 0.875)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 0.875"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 7 / 8 = 0.875 (left: 2 8 0.875) -> 8 / 2 = 4 (left: 0.875 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Possible next steps -> 7 / 8 = 0.875 (left: 2 8 0.875) -> 8 / 2 = 4 (left: 0.875 4) -> 0.875 * 4 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 10"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 + 7 = 10 (left: 9 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 + 7 = 10 (left: 9 10) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> 9 * 9 = 81",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> 9 * 9 = 81 -> 9 - 9 = 0 (left: 0 9 81)",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 2.67 + 4.87 = 7.54 (left: 7.54)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 4 8 16"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 4.87 / 2.67 = 1.82397 (left: 1.82397)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 4 8 16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 8 11"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8 11) -> 1 * 8 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 4.87 - 2.67 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 4 8 16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 - 8 = 8 (left: 4 8 16)",
                "Pruning": null
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "39"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with just the number 39."
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> 39 / 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.33"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 2 1.665)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 1.665"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 2 1.665) -> 2 + 1.665 = 3.665 (left: 3.665)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "25 29"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 29) -> 25 / 29 \u2248 0.8621 (left: 0.8621)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 39."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "39"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There is only one number given, so there are no possible next steps. -> There are no possible next steps since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "25 29"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 29) -> 25 + 29 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just the number 39."
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 1.665"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 2 1.665) -> 2 - 1.665 = 0.335 (left: 0.335)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "27"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "25 29"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 29) -> 25 - 29 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 1.665"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 2 1.665) -> 2 - 1.665 = 0.335 (left: 0.335)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "39"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> 39 + 2 = 41",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 2"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 0.666665."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.75 * 2 = 1.5"
                }
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.75 / 2 = 0.375"
                }
            },
            "Step 8": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375 -> 0.75 * 0.75 = 0.5625 (left: 0.5625)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 / 2 = 0.666665 (left: 0.666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.666665"
                }
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 / 2 = 0.666665 (left: 0.666665) -> There are no possible next steps for the input 0.666665.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> No possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 10 / 5 = 2 -> 10 / 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps with the input 20."
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> No possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.5 5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5) -> 0.5 + 5 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 10 10"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the input 48 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the input 48 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.5 5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5) -> 0.5 + 5 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 10 11"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.5 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.75"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step for the input 0.75:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step for the input 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.5 5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5) -> 0.5 * 5 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 50)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 * 10 = 50 (left: 10 50) -> 10 * 50 = 500 (left: 500)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.5 5"
                }
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60) -> There are many possible next steps for the input 60. Here are a few examples:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60) -> There are many possible next steps for the input 60. Here are a few examples: -> 60 - 20 = 40 (left: 20 40)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "-2 6 14"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> -2 + 6 = 4 (left: 4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> -2 + 6 = 4 (left: 4 14) -> 4 * 14 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "60"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2 6 14"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> 14 - 6 = 8 (left: -2 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> 14 - 6 = 8 (left: -2 8 8) -> 8 * -2 = -16 (left: -16 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-2"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "-2 6 14"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> -2 * 6 = -12 (left: -12 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> -2 * 6 = -12 (left: -12 14) -> -12 + 14 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-2 6 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2 6 14"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> 14 - 6 = 8 (left: -2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> 14 - 6 = 8 (left: -2 8) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-2 6 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 * 2 = 22 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 30"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30) -> 11 + 30 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30) -> 11 + 30 = 41 (left: 41) -> 41 * 8 = 328 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2 6 14"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> 6 / -2 = -3 (left: -3 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> -2 is not a valid input. Please provide a valid input. -> 8 - 2 = 6 (left: -2 6 14) -> 6 / -2 = -3 (left: -3 14) -> -3 * 14 = -42 (left: -42)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-2 6 14"
                }
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 + 40 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> Possible next steps: -> ",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> 5.33333 * 2 = 10.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> Input: 3 9 12 -> 9 - 3 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 12"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> Input: 3 9 12 -> 9 - 3 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 7 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> Possible next steps: -> It seems like you did not provide an input. Please enter a set of numbers to continue.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> Possible next steps: -> It seems like you did not provide an input. Please enter a set of numbers to continue. -> 5 + 6 = 11 (left: 4 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> Input: 3 9 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> Input: 3 9 12 -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.33333 * 2 = 10.66666"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> 5.33333 * 2 = 10.66666 -> 5.33333 - 2 = 3.33333 (left: 3.33333 * 2 = 6.66666)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> 5.33333 * 2 = 10.66666 -> 5.33333 - 2 = 3.33333 (left: 3.33333 * 2 = 6.66666) -> 3.33333 - 2 = 1.33333",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 + 40 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> Possible next steps: -> No valid operations can be performed with the given numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8) -> Possible next steps: -> No valid operations can be performed with the given numbers. -> No valid operations can be performed with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "42"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> Input: 3 9 12 -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> Input: 3 9 12 -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> 14 + 2 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> 14 + 2 = 16 -> 16 + 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> There are no possible next steps with the input of 23.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> There are no possible next steps with the input of 23. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> There are no possible next steps with just the number 14.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 * 9 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 * 9 = 9 (left: 9 13) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Input: 3 5"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 * 9 = 9 (left: 9 13) -> Input: 3 5 -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 / 5 = 2.6 (left: 2.6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 / 5 = 2.6 (left: 2.6 5) -> 5 - 2.6 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> There are no possible next steps with the input \"23\" as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> There are no possible next steps with the input \"23\" as it is a single number. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 / 4 = 3"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 12 - 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "None, as there is only one number in the input."
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.25 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 8 = 1.25 (left: 1.25 8) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "None, as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 / 4 = 3"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> None, as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> None.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.25 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 8 = 1.25 (left: 1.25 8) -> 1.25 - 8 = -6.75 (left: -6.75)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 / 4 = 3"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 8 = 1.25 (left: 1.25 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.25 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 8 = 1.25 (left: 1.25 8) -> 1.25 + 8 = 9.25 (left: 9.25)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 3 = 3"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 6 / 3 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 6 / 3 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 2"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 6 / 3 = 2 (left: 3 2) -> 3 * 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 - 3 = 3"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 6 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 - 3 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "54 7"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7) -> 54 - 7 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7) -> 54 - 7 = 47 (left: 47) -> 47 + 2 = 49",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.57"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> 2.57 - 8 = -5.43 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 - 3 = 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.57"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 2"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 6 / 3 = 2 (left: 3 2) -> 2 - 3 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "54 7"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7) -> 54 - 7 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7) -> 54 - 7 = 47 (left: 47) -> No possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 3 = 3"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 - 3 = 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 6 / 3 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 + 7 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 + 7 = 13 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "54 7"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7) -> 54 / 7 = 7.71 (left: 7.71)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7) -> 54 / 7 = 7.71 (left: 7.71) -> 7.71 * 7 = 53.97 (left: 53.97)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 2"
                }
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "630"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 63 / 3 = 21 (left: ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 9 13"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "630"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 630 / 6 = 105 (left: 105)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Please provide at least two numbers to calculate possible next steps."
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "630"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Please provide at least two numbers to generate possible next steps."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "630"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 / 3 = 2 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 / 3 = 2 ( -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "630"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 14"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 13 14) -> 13 * 14 = 182 (left: 182)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 13 14) -> 13 * 14 = 182 (left: 182) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "630"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Please provide at least two numbers to generate possible next steps."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> Input: 18 -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> Possible next steps: -> It seems like there was an error in the input as there are no numbers provided. If you could please provide the numbers, I would be happy to give you the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "52"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 * 5 = 65 (left: 13 65) -> 65 - 13 = 52 (left: 52) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "234"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 3",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 + 12 = 14 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 3 + 9 = 12 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "52"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 * 5 = 65 (left: 13 65) -> 65 - 13 = 52 (left: 52) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "It seems like there was an error in the input as there are no numbers provided. If you could please provide the numbers, I would be happy to give you the possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> Possible next steps: -> It seems like there was an error in the input as there are no numbers provided. If you could please provide the numbers, I would be happy to give you the possible next steps. -> Without numbers provided, I am unable to give you possible next steps. Please provide the numbers so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 * 5 = 65 (left: 13 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 * 5 = 65 (left: 13 65) -> 65 - 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "52"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 * 5 = 65 (left: 13 65) -> 65 - 13 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 * 5 = 65 (left: 13 65) -> 65 - 13 = 52 (left: 52) -> 5 + 2 = 7 -> None, the equation is already solved.",
                "Pruning": null
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> There is only one possible next step which is 40 + 2 = 42 (left: 2 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> There is only one possible next step which is 40 + 2 = 42 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 15"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 16 "
                }
            },
            "Step 4": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 8 16"
                }
            },
            "Step 7": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16) -> 16 - 8 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0 8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12 12) -> 12 - 8 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.25 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25 12) -> 0.25 * 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64) -> 64 + 2 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 8 16"
                }
            },
            "Step 7": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16) -> 8 - 0 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16) -> 8 - 0 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0 8 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12 12) -> 12 - 8 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 10 12"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 8 16"
                }
            },
            "Step 7": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16) -> 8 * 2 = 16 (left: 0 16 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 16) -> 8 * 2 = 16 (left: 0 16 16) -> 0 + 16 = 16 (left: 16 16)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 27"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27) -> Input: 4.5 21",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27) -> Input: 4.5 21 -> 4.5 * 21 = 94.5 (left: 94.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 4"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 * 8 = 48 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 * 8 = 48 ( -> 48 - 8 = 40 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 4 4"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4 -> 6 - 2 = 4 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4 -> 6 - 2 = 4 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.5"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 + 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 27"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4 -> 6 - 2 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 4 4"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4 -> 6 - 2 = 4 (left: 2 4 4) -> 4 / 2 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4 -> 6 - 2 = 4 (left: 2 4 4) -> 4 / 2 = 2 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.5"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There is only one number given (4.5), so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 11 - 2 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There is only one number given (4.5), so there are no possible next steps to perform any operations. -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 4 4"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> Input: 2 6 2 4 -> 6 - 2 = 4 (left: 2 4 4) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.5"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 - 9 = 4"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 9 - 13 = -4 (left: -4 - 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 9 - 13 = -4 (left: -4 - 4) -> -4 + -4 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75 8) -> 0.75 / 8 = 0.09375 (left: 0.09375)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4) -> -2 - 4 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 9 = 4"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 13 * 9 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 9 13"
                }
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> There are no possible next steps with the input of 6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 - 9 = 4"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 13 - 9 = 4 (left: 4 = 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 13 - 9 = 4 (left: 4 = 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "13 - 9 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 - 9 = 4"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 13 - 4 = 9 (left: 9 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 =  -> 13 - 9 = 4 -> 13 - 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 8 - 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": "NA"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided. -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 12 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 12 = 1.5 (left: 1.5 9) -> 1.5 / 9 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 12 = 1.5 ( -> 18 - 12 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21) -> 18 * 21 = 378 (left: 378)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 2 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 2 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108) -> 18 * 108 = 1944 (left: 1944)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "18 9 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 12 = 1.5 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 12 = 1.5 ( -> 18 - 12 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided."
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided. -> There are no possible next steps as there are no other numbers provided. -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 + 13 = 25 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 + 13 = 25 (left: 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 60"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 15 * 60 = 900 (left: 900)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 - 12 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 8"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Possible next steps -> 8 + 7 = 15 (left: 15 8) -> 15 + 8 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 15"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 - 12 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "30 + 2 = 32"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> 30 + 2 = 32 -> 32 + 2 = 34 (left: 30 34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> 30 + 2 = 32 -> 32 + 2 = 34 (left: 30 34) -> 30 * 34 = 1020 (left: 1020)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "30 + 2 = 32"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 60"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 15 * 60 = 900 (left: 900)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 15"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 15 - 2 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "30 + 2 = 32"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 156 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 156 15) -> 156 / 15 = 10.4 (left: 10.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 60"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Possible next steps",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Possible next steps -> 8 + 7 = 15 (left: 15 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 15 / 2 = 7.5 (left: 7.5) -> 7.5 * 8 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "30 + 2 = 32"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> 30 + 2 = 32 -> 30 - 2 = 28 (left: 28 + 2 = 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> 30 + 2 = 32 -> 30 - 2 = 28 (left: 28 + 2 = 30) -> 28 * 2 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "15 8"
                }
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "22.75"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> There are no possible next steps with the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11.375 * 2 = 22.75"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 / 2 = 5.6875 (left: 5.6875 * 2 = 11.375)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 / 2 = 5.6875 (left: 5.6875 * 2 = 11.375) -> 5.6875 + 2 = 7.6875",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9.375 22.75"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 - 2 = 9.375 -> 11.375 * 2 = 22.75 (left: 9.375 22.75) -> 9.375 * 22.75 = 213.28125 (left: 213.28125)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5.6875 2"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 + 2 = 13.375 -> 11.375 / 2 = 5.6875 (left: 5.6875 2) -> 5.6875 * 2 = 11.375 (left: 11.375)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5.6875 + 2 = 7.6875"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22.75"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11.375 * 2 = 22.75"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 + 2 = 13.375",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 + 2 = 13.375 -> 11.375 / 2 = 5.6875 (left: 5.6875 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9.375 22.75"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 - 2 = 9.375 -> 11.375 * 2 = 22.75 (left: 9.375 22.75) -> 9.375 / 22.75 = 0.41176470588 (left: 0.41176470588)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-2"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2 as the numbers provided are all positive.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22.75"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11.375 * 2 = 22.75"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 - 2 = 9.375",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 - 2 = 9.375 -> 11.375 * 2 = 22.75 (left: 9.375 22.75)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9.375 22.75"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 - 2 = 9.375 -> 11.375 * 2 = 22.75 (left: 9.375 22.75) -> Input: 4 5 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> 22.75 * 2 = 45.5 -> 22.75 / 2 = 11.375 (left: 11.375 * 2 = 22.75) -> 11.375 - 2 = 9.375 -> 11.375 * 2 = 22.75 (left: 9.375 22.75) -> Input: 4 5 7 -> 5 + 7 = 12 (left: 4 12)",
                "Pruning": null
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30) -> 20 * 30 = 600 (left: 600)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "600"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30) -> 20 * 30 = 600 (left: 600) -> 600 * 2 = 1200 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.75 15.75"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75) -> 15.75 - 3.75 = 12 (left: 3.75 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.75 12"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75) -> 15.75 - 3.75 = 12 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left:  -> It seems like you did not provide an input for the calculator to work on. Please enter a set of numbers for the calculator to process.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.8 8 15.6"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6) -> 8 / 3.8 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6) -> 8 / 3.8 =  -> 8 / 3.8 = 2.1052631578947367",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7.6"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 - 8 = -0.4 (left: -0.4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 - 8 = -0.4 (left: -0.4 8) -> 8 / (-0.4) = -20 (left: -20)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.75 12"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75) -> 15.75 - 3.75 = 12 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left:  -> It seems like there was an error in the input. Could you please provide the numbers again?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.8 8 15.6"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6) -> 3.8 + 8 = 11.8 (left: 11.8 15.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6) -> 3.8 + 8 = 11.8 (left: 11.8 15.6) -> 11.8 + 15.6 = 27.4 (left: 27.4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3.8 8 15.6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.75 15.75"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75) -> 15.75 - 3.75 = 12 (left: 3.75 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75) -> 15.75 - 3.75 = 12 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "600"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.75 12"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 30 / 8 = 3.75 (left: 12 3.75) -> 12 + 3.75 = 15.75 (left: 3.75 15.75) -> 15.75 - 3.75 = 12 (left: 3.75 12) -> 3.75 * 12 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7.6"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.8 8 15.6"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6) -> 3.8 * 8 = 30.4 (left: 30.4 15.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6) -> 7.6 / 2 = 3.8 (left: 3.8 8 15.6) -> 3.8 * 8 = 30.4 (left: 30.4 15.6) -> 30.4 / 15.6 = 1.94871794872 (left: 1.94871794872)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3.75 12"
                }
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 * 9.6 = 19.2 (left: 6.8 19.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 * 9.6 = 19.2 (left: 6.8 19.2) -> 6.8 * 19.2 = 130.56 (left: 130.56)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5.666666666666667"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 4.8."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8 as it is a decimal number and cannot be operated on using basic arithmetic operations like addition, subtraction, multiplication, or division with the other numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8 as it is a decimal number and cannot be operated on using basic arithmetic operations like addition, subtraction, multiplication, or division with the other numbers provided. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 5) -> 0.6666666666666666 + 5 = 5.666666666666667 (left: 5.666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 = 7.6 (left: 7.6 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 = 7.6 (left: 7.6 6.8) -> 7.6 * 6.8 = 51.68 (left: 51.68)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 4.8."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8 as it is not a valid input for arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 + 9.6 = 11.6 (left: 6.8 11.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 + 9.6 = 11.6 (left: 6.8 11.6) -> 6.8 + 11.6 = 18.4 (left: 18.4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 10 / -2 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 5 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 / 10 = 0.8 (left: 0.8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 / 10 = 0.8 (left: 0.8 10) -> 10 / 0.8 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "180"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> There are multiple possible next steps for the number 180:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> There are multiple possible next steps for the number 180: -> 180 + 1 = 181",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "28"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28) -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 10 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "180"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> 180 / 6 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-5"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 10 / -2 = -5 (left: -5) -> There are no possible next steps with the input -5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 10 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "180"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> 180 / 2 = 90",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> 180 / 2 = 90 -> 180 - 2 = 178 (left: 178)",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "42 6"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps as 36 is a single number and cannot be combined with any other numbers using the operations +, -, *, or /.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps as 36 is a single number and cannot be combined with any other numbers using the operations +, -, *, or /. -> None.",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "18 36"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-36 - 2 = -38"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38 -> -36 / -2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "18 36"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 1 = 18 (left: 18 36) -> 18 + 36 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "18 36"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 1 = 18 (left: 18 36) -> 18 * 36 = 648 (left: 648)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "18 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = 18 (left: 18 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = 18 (left: 18 18) -> 18 / 18 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 1 = 18 (left: 18 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "18 36"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 1 = 18 (left: 18 36) -> 18 / 36 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "36 / 2 = 18"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36 18)",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11) -> 27 * 11 = 297 (left: 297)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 2"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 9 - 3 = 6 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2) -> 9 + 2 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 4 + 9 = 13 (left: 13 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 4 + 9 = 13 (left: 13 5) -> 13 * 5 = 65 (left: 65)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "297"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "297"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11) -> 27 * 11 = 297 (left: 297) -> 2 + 97 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "11 + 2 = 13"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 9 - 3 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 2"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 9 - 3 = 6 (left: 6 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 + 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 + 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "11 + 2 = 13"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2) -> 9 + 2 = 11 (left: 11) -> 11 + 2 = 13 -> None, the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2) -> 9 + 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 2"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 9 - 3 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 11"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 3 - 11 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "20 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 20 + 16 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 20 + 16 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no more operations that can be performed on the numbers provided."
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> 5 + 10 = 15 (left: 15 15 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> 5 + 10 = 15 (left: 15 15 20) -> 20 * 15 = 300 (left: 15 300)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "145"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as there are no more operations that can be performed on the numbers provided."
                }
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> N/A",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> N/A -> Please provide a set of numbers to continue with possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 20 + 16 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no more operations that can be performed on the numbers provided."
                }
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> None.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "145"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 145",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there are no more operations that can be performed on the numbers provided."
                }
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> There are no possible next steps as there are no more operations that can be performed on the numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no more operations that can be performed on the numbers provided."
                }
            },
            "Step 7": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> There are no possible next steps as there are no more operations that can be performed on the numbers provided. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 / 2 = 18"
                }
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 20 + 16 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 18 36)",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input of 0.7."
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7) -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7) -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> None.",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 7 = 14 (left: 7 14) -> 14 - 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.7"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7) -> There are no possible next steps with the input of 0.7.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7) -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 0.7."
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7) -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7) -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no possible next steps with the input of 0.7. -> There are no valid operations that can be performed on the input of 0.7 to get a whole number result.",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 + 23 = 101 (left: 23 101)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "23 101"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 + 23 = 101 (left: 23 101) -> 23 / 101 \u2248 0.2277 (left: 0.2277)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "23 101"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 + 23 = 101 (left: 23 101) -> 23 / 101 \u2248 0.2277 (left: 0.2277)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 13 23"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 10 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23) -> 23 - 7 = 16 (left: 7 16 23)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23) -> 23 - 7 = 16 (left: 7 16 23) -> 16 - 7 = 9 (left: 9 23)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.39"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 - 2 = 1.39",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 - 2 = 1.39 -> 3.39 / 2 = 1.695 (left: 1.695)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 13 23"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 - 23 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 10 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23) -> 10 - 7 = 3 (left: 3 10 23)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23) -> 10 - 7 = 3 (left: 3 10 23) -> 23 - 3 = 20 (left: 3 10 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 13 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 13 = 10 (left: 6 10) -> 6 - 10 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "23 101"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 + 23 = 101 (left: 23 101) -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 + 23 = 101 (left: 23 101) -> 5 + 5 = 10 (left: 5 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 13 23"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23) -> 7 * 23 = 161 (left: 161)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 10 23"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23) -> 10 * 7 = 70 (left: 70 23)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 13 23) -> 23 - 13 = 10 (left: 7 10 23) -> 10 * 7 = 70 (left: 70 23) -> 70 - 23 = 47 (left: 47)",
                "Pruning": "NA"
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 - 8 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with only one number. -> Please provide more numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with only one number. -> Please provide more numbers to continue finding possible next steps. -> - 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.6666666666666666 * 2 = 1.3333333333333333"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 6 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 6 8"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 6 + 8 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 * 2 = 1.3333333333333333"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665 = 1.3333333333333333) -> 2.6666666666666665 * 1.3333333333333333 = 3.5555555555555554 (left: 3.5555555555555554)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.6666666666666666 * 2 = 1.3333333333333333"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 14 "
                }
            },
            "Step 1": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 14 - 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 14 - 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "273"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-1"
                }
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 14 - 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> There are no possible next steps with the input -1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "273"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 7 - 2 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 7 - 2 = 5 (left: 5 3) -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4.33"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is already a single number. -> There are no possible next steps for the input 4.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 21"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21) -> 13 * 21 = 273 (left: 273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21) -> 13 * 21 = 273 (left: 273) -> 27 / 3 = 9 (left: 9",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "273"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input -1."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 14 - 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> There are no possible next steps with the input -1. -> There are no possible next steps with the input -1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 14 - 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> There are no possible next steps with the input -1. -> There are no possible next steps with the input -1. -> There are no possible next steps with the input -1.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4.33"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations. -> It seems like there are no more possible calculations to be done with the current set of numbers. Please provide a new set of numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations. -> It seems like there are no more possible calculations to be done with the current set of numbers. Please provide a new set of numbers to continue with the calculations. -> Please provide a new set of numbers to continue with the calculations.",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 38"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38) -> 10 * 38 = 380 (left: 380)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11 12"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 12 12"
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20) -> Input: -> Please provide a list of numbers for me to suggest possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20) -> Input: -> Please provide a list of numbers for me to suggest possible next steps. -> - Subtract one number from another",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 12 12"
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20) -> Input: -> There seems to be no input provided for the next steps. Could you please provide the numbers you'd like to use for the calculations?",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20) -> Input: -> There seems to be no input provided for the next steps. Could you please provide the numbers you'd like to use for the calculations? -> Apologies for the confusion. Please provide the numbers you'd like to use for the calculations.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> None.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 11"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 5 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.5"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5) -> 2.5 - 2 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.0909090909090908"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908) -> 1.0909090909090908 / 2 = 0.5454545454545454",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10.8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 + 5 = 11 (left: 11 12) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.5"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5) -> 8 - 2.5 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10.8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9 2) -> 2 + 9 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "20 10 12"
                }
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 10 + 12 = 22 (left: 20 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 * 12 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 * 12 = 60 (left: 6 60) -> 60 - 6 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.5"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5) -> There is only one number given, so there are no possible next steps to calculate with another number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5) -> There is only one number given, so there are no possible next steps to calculate with another number. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, or division with at least two numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, or division with at least two numbers. -> Multiplication: Multiply two numbers together.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Multiplication: Multiply two numbers together."
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number. -> Addition, subtraction, multiplication, or division with at least two numbers. -> Multiplication: Multiply two numbers together. -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 2 = 12 -> None, as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 11"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 11"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number. -> Please provide at least two numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> There are no possible next steps with just one number. -> Please provide at least two numbers to continue with the calculations. -> 5 * 10 = 50 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 11"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There is no input provided. Please provide a set of numbers to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> There is no input provided. Please provide a set of numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> No input provided. Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> - Divide one number by another",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> 7 - 6 = 1 (left: 1 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Please provide a set of numbers for me to work with."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> None.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.642857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> 5 * 7 = 35",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> 5 * 7 = 35 -> 5 / 7 = 0.714 (left: 0.714 = 35)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857 (left: 0.642857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There is no input provided. Please provide a set of numbers to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Please provide a set of numbers for me to work with."
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Divide one number by another"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> Without input, I am unable to generate possible next steps. Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> Please provide a set of numbers for me to work with. -> - Divide one number by another -> - 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "11"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 * 8 = 88 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No input provided. Please provide a set of numbers to generate possible next steps."
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-140"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps with the input -140."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input -140."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9.75 (left: 9.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-140"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. Please provide numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps. Please provide numbers to perform operations on."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input -140."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2496"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 6 / 2 = 3 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 6 / 2 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps with the input -140."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps with the input -140. -> No possible next steps with the input -140. -> There are no possible next steps with the input -140. -> There are no possible next steps with the input -140.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps. Please provide numbers to perform operations on."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> No possible next steps. Please provide numbers to perform operations on. -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 / 3 = 11",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 / 3 = 11 -> 33 + 3 = 36 (left: 36 / 3 = 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 18"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5. Possib + le = Possible"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5. Possib + le = Possible"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5. Possib + le = Possible"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 9 9"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 18"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 30 - 28 = 2 (left: 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 30 - 28 = 2 (left: 2 -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 30 - 28 = 2 (left: 2 -> 2 / 2 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> There are no possible next steps with just the number 33.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> There are no possible next steps with just the number 33. -> There are no possible next steps with just the number 33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 18"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 10 9 9) -> 9 + 9 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5. Possib + le = Possible"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 - 5 = 0 (left: )",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "36 / 3 = 12"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 / 3 = 11 -> 33 + 3 = 36 (left: 36 / 3 = 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 * 7 = 35 (left: 35 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 * 7 = 35 (left: 35 12) -> 35 / 12 = 2.91666666667 (left: 2.91666666667)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 * 7 = 35 (left: 35 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 * 7 = 35 (left: 35 12) -> 35 - 12 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 7 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 7 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 - 5 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 / 5 = 2.4 (left: 2.4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 / 5 = 2.4 (left: 2.4 7) -> 2.4 * 7 = 16.8 (left: 16.8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 / 7 = 1.71428571429 (left: 1.714285714",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12) -> 12 / 1.4 = 8.57 (left: 8.57)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-4"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps, as the input is not applicable to the current list of numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps, as the input is not applicable to the current list of numbers. -> N/A",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 9 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 \u2248 0.714 (left: 0.714)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.714"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 \u2248 0.714 (left: 0.714) -> 0.714 - 2 = -1.286 (left: -1.286)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Please provide more than one number for possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Please provide more than one number for possible next steps. -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with a single number input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with a single number input. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Please provide more numbers to continue with the calculations. -> - Add two numbers together",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "140"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 - 40 = 100 (left: 40)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "117"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 1 + 1 + 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps, the input is already a single number."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number. -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "14"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps with only one number given. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> There are no possible next steps with only one number given. -> Possible next steps: -> This is not a valid input. Please provide a list of numbers or a mathematical equation to continue.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps, the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps, the input is already a single number."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "14"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "None"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> None -> There are no possible next steps since there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> None -> There are no possible next steps since there is no input provided. -> No possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0.875"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875) -> 8 * 0.875 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps since there is no input provided."
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> None -> There are no possible next steps since there is no input provided. -> No possible next steps since there is no input provided. -> No possible next steps since there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "- No more possible next steps, the input numbers are already in the correct order."
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> - No more possible next steps, the input numbers are already in the correct order. -> No more possible next steps, the input numbers are already in the correct order.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> - No more possible next steps, the input numbers are already in the correct order. -> No more possible next steps, the input numbers are already in the correct order. -> No more possible next steps, the input numbers are already in the correct order.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 + 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 0.875"
                }
            },
            "Step 8": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875) -> 8 * 0.875 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-1 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> - No more possible next steps, the input numbers are already in the correct order.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "- No more possible next steps, the input numbers are already in the correct order."
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> - No more possible next steps, the input numbers are already in the correct order. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0.875"
                }
            },
            "Step 7": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875) -> 8 / 0.875 = 9.142857142857143 (left: 9.142857142857143)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "None"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Possible next steps: -> None -> Please provide a new set of numbers to continue the sequence.",
                "Pruning": null
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 / 2 = 7 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 / 2 = 7 (left: 7 8 8) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just the number 14. -> 14 / 2 = 7 (left: 7 8 8) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 3 * 7 = 21",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 3 * 7 = 21 -> 7 / 3 = 2.333 (left: 2.333 21)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide more than one number to generate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "7 8 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with just one number. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 5 * 7 = 35 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 5 * 7 = 35 ( -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Please provide more than one number to generate possible next steps."
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 / 8 = 0.33375 (left: 0.33375)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11 - 3 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10.67"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 8 = 10.67 (left: 8 10.67) -> 8 * 10.67 = 85.36 (left: 85.36)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10.67"
                }
            },
            "Step 8": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 8 = 10.67 (left: 8 10.67) -> 8 + 10.67 = 18.67 (left: 18.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10.67"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 / 2 = 10 (left: 2) ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 * 18 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 8 = 10.67 (left: 8 10.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10.67"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 8 = 10.67 (left: 8 10.67) -> 8 - 10.67 = -2.67 (left: -2.67)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "11 - 3 = 8"
                }
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10.67"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 + 8 = 28 (left: 8) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11 - 3 = 8"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10.67"
                }
            },
            "Step 7": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 8 = 10.67 (left: 8 10.67) -> 8 + 10.67 = 18.67 (left: 18.67)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 / 5 = 1"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 5 - 5 = 0",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 5 - 5 = 0 -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 13 17"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 130 - 17 = 113 (left: 113)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "113"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 130 - 17 = 113 (left: 113) -> 1 + 1 * 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5.666666666666667"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17) -> 17 / 3 = 5.666666666666667 (left: 5.666666666666667) -> 5.666666666666667 + 2 = 7.666666666666667 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14.7"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17) -> 17 / 3 = 5.666666666666667 (left: 5.666666666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "113"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 130 - 17 = 113 (left: 113) -> 11 - 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the input of 40.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the input of 40. -> There are no possible next steps with the input of 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number. -> Input consists of a single number. No further operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.6666666666666667"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. No further steps can be taken.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> Input: 8 96",
                "Pruning": null
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 *"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> Input: 3 9 12 +",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> Input: 3 9 12 + -> 3 * 9 = 27 (left: 12 27 +)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 - 10 = 2 (left: 2 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17) -> 2 * 17 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.0588235294117647"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1.0588235294117647 * 2 = 2.1176470588235294",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1.0588235294117647 * 2 = 2.1176470588235294 -> 2.1176470588235294 - 2 = 0.1176470588235294 (left: 0.117",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 12 17"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.05882352941 (left: 1.05882352941)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "34"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17) -> 2 * 17 = 34 (left: 34) -> None - there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17) -> 2 * 17 = 34 (left: 34) -> None - there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 40 - 1 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 4 6 7 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 + 40 = 41 (left: 40 41)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 + 40 = 41 (left: 40 41) -> 40 - 41 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 + 40 = 41 (left: 40)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with the input of 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12) -> Input: 1 6 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 6 6 6 6 -> 6 + 6 = 12 (left: 6 6 12) -> Input: 1 6 2 -> Input: 3 3",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.51 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 4.51 * 8 = 36.08 (left: 36.08)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 4.51 * 8 = 36.08 (left: 36.08) -> There are no possible next steps for the input 36.08 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.77."
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 8 / 4.51 = 1.77 (left: 1.77) -> There are no possible next steps for the input 1.77. -> There are no possible next steps for the input 1.77.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 8 / 4.51 = 1.77 (left: 1.77) -> There are no possible next steps for the input 1.77. -> There are no possible next steps for the input 1.77. -> 1.77 * 2 = 3.54",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.33 6 8"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.51 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 8 - 4.51 = 3.49 (left: 3.49 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 8 - 4.51 = 3.49 (left: 3.49 8) -> 3.49 / 8 = 0.43625 (left: 0.43625)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 36.08 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 4.51 * 8 = 36.08 (left: 36.08) -> There are no possible next steps for the input 36.08 as it is already a single number. -> There are no possible next steps for the input 36.08 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 4.51 * 8 = 36.08 (left: 36.08) -> There are no possible next steps for the input 36.08 as it is already a single number. -> There are no possible next steps for the input 36.08 as it is already a single number. -> There are no possible next steps for the input 36.08 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.51 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 8 / 4.51 = 1.77 (left: 1.77)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8) -> 8 / 4.51 = 1.77 (left: 1.77) -> There are no possible next steps for the input 1.77.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 3",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 36.08 as it is already a single number."
                }
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-4"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 / 9 = 0.666666 -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 (left: 15 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 / 9 = 0.666666 -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 (left: 15 30) -> 15 * 30 = 450 (left: 450)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input -4."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-4"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input -4.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 / 9 = 0.666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 / 9 = 0.666666 -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of -4."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-4"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> -4 / -4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "65"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65) -> 65 * 2 = 130 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 / 15 = 0.73333 (left: 0.73333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 - 2 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 39"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39) -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39) -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39) -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 11 - 6 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 11 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 11 - 6 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39) -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 11 - 6 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 39"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 3 -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39) -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 9 27) -> 9 - 27 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 39"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 + 8 = 39 (left: 8 39) -> 10 * 5 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 66."
                }
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 / 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 / 2 =  -> 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 / 2 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 / 2 = 6 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 / 2 = 6 (left -> 12 - 6 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 / 2 = 6 (left -> 12 - 6 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 / 2 =  -> 5 (left: 5) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 10 =  -> 12 - 10 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 / 2 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 8 / 2 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 / 2 = 6 (left -> 12 - 6 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 / 2 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 - 6 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 - 6 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 / 2 = 6 (left -> 12 - 6 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 / 2 = 6 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 10 - 2 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12 / 2 = 6 (left:"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 3. 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 8"
                }
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 0.846 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 0.846."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no operations that can be performed on the input 0.846 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no operations that can be performed on the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input 0.846."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 0.846."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846. -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for the input 0.846 as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 0.846 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6.66666666667 - 2 = 4.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6.6666666666667 8.6666666666667"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335 (left: 3.33333333333335 2 8.6666666666667) -> 3.33333333333335 * 2 = 6.6666666666667 (left: 6.6666666666667 8.6666666666667) -> 6.6666666666667 / 8.6666666666667 = 0.7692307692308 (left: 0.7692307692308 8.6666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335 (left: 3.33333333333335 2 8.6666666666667) -> 3.33333333333335 * 2 = 6.6666666666667 (left: 6.6666666666667 8.6666666666667) -> 6.6666666666667 / 8.6666666666667 = 0.7692307692308 (left: 0.7692307692308 8.6666666666667) -> 0.7692307692308 / 8.6666666666667 = 0.0888030888031 (left: 0.0888030888031 8.6666666666667)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.33333333334 5 16.66666666668"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 + 13.33333333334 = 16.66666666668 (left: 3.33333333334 16.66666666668) -> 16.66666666668 / 3.33333333334 = 5 (left: 3.33333333334 5 16.66666666668) -> 3.33333333334 + 5 = 8.33333333334 (left: 8.33333333334 16.66666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 + 13.33333333334 = 16.66666666668 (left: 3.33333333334 16.66666666668) -> 16.66666666668 / 3.33333333334 = 5 (left: 3.33333333334 5 16.66666666668) -> 3.33333333334 + 5 = 8.33333333334 (left: 8.33333333334 16.66666666668) -> 8.33333333334 * 16.66666666668 = 138.888888",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.6666666666667 + 2 = 8.6666666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 - 2 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 - 2 =  -> 6.6666666666667 - 2 = 4.6666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.33333333334 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 * 13.33333333334 = 44.44444444448 (left: 13.333333",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 8 = 10 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.0888030888031 8.6666666666667"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335 (left: 3.33333333333335 2 8.6666666666667) -> 3.33333333333335 * 2 = 6.6666666666667 (left: 6.6666666666667 8.6666666666667) -> 6.6666666666667 / 8.6666666666667 = 0.7692307692308 (left: 0.7692307692308 8.6666666666667) -> 0.7692307692308 / 8.6666666666667 = 0.0888030888031 (left: 0.0888030888031 8.6666666666667) -> 8.6666666666667 - 0.0888030888031 = 8.5778635778636 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335 (left: 3.33333333333335 2 8.6666666666667) -> 3.33333333333335 * 2 = 6.6666666666667 (left: 6.6666666666667 8.6666666666667) -> 6.6666666666667 / 8.6666666666667 = 0.7692307692308 (left: 0.7692307692308 8.6666666666667) -> 0.7692307692308 / 8.6666666666667 = 0.0888030888031 (left: 0.0888030888031 8.6666666666667) -> 8.6666666666667 - 0.0888030888031 = 8.5778635778636 ( -> 8.6666666666667 + 0.0888030888031 = 8.7554697554698",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 0 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 - 0 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 - 0 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.6666666666667 + 2 = 8.6666666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335 (left: 3.33333333333335 2 8.6666666666667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335 (left: 3.33333333333335 2 8.6666666666667) -> 3.33333333333335 * 2 = 6.6666666666667 (left: 6.6666666666667 8.6666666666667)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.33333333334 13.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 + 13.33333333334 = 16.66666666668 (left: 3.33333333334 16.66666666668)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 + 13.33333333334 = 16.66666666668 (left: 3.33333333334 16.66666666668) -> 16.66666666668 / 3.33333333334 = 5 (left: 3.33333333334 5 16.66666666668)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.33333333334 5 16.66666666668"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 + 13.33333333334 = 16.66666666668 (left: 3.33333333334 16.66666666668) -> 16.66666666668 / 3.33333333334 = 5 (left: 3.33333333334 5 16.66666666668) -> 16.66666666668 - 3.33333333334 = 13.33333333334 (left: 5 13.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334 13.33333333334) -> 3.33333333334 + 13.33333333334 = 16.66666666668 (left: 3.33333333334 16.66666666668) -> 16.66666666668 / 3.33333333334 = 5 (left: 3.33333333334 5 16.66666666668) -> 16.66666666668 - 3.33333333334 = 13.33333333334 (left: 5 13. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There is only one possible next step for the input 60, which is 60 divided by 2, resulting in 30 (left: 30).",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 - 1.5 = 1.5 (left: 1.5 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 - 1.5 = 1.5 (left: 1.5 1.5) -> 1.5 * 1.5 = 2.25 (left: 2.25) ",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 60 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 4.5."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 * 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 * 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 / 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "60"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 * 1.5 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 * 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 60 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number. -> 60 is a single number and cannot be combined with other numbers to create new equations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number. -> 60 is a single number and cannot be combined with other numbers to create new equations. -> 60 is a single number and cannot be combined with other numbers to create new equations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number. -> There are no possible next steps for the input 60 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 1.5"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 10 + 5 = 15 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 10 + 5 = 15 (left -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 60 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number. -> There are no possible next steps for the input 60 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps for the input 60 as it is a single number. -> There are no possible next steps for the input 60 as it is a single number. -> There are no possible next steps for the input 60 as it is a single number.",
                "Pruning": null
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 6"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 + 1 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 + 1 = 11 (left: 7 11) -> 11 - 7 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 6"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 6 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 6 28) -> Input: 5 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22) -> There are no possible next steps with the input 22. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 * 7 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 * 7 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 * 7 = 28 (left: 28 6) -> 28 - 6 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 - 2 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-3"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 * 1 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 10 "
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.42857142857 * 2 = 2.85714285714"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 -> 2.85714285714 - 2 = 0.85714285714 (left: 1.42857142857 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 -> 2.85714285714 - 2 = 0.85714285714 (left: 1.42857142857 0. -> 1.42857142857 - 0 = 1.42857142857 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 10 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 10 "
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 - 7 = 3 (left: 3) -> 14 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.57143 10"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 10 - 1.42857 = 8.57143 (left: 8.57143 10) -> 8.57143 - 10 = -1.42857 (left: -1.42857)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-1"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1) -> There are no possible next steps with the input of -1.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.42857142857 * 2 = 2.85714285714"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 -> 2.85714285714 - 1.42857142857 = 1.42857142857 (left: 1.42857142857 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 -> 2.85714285714 - 1.42857142857 = 1.42857142857 (left: 1.42857142857 2) -> 1.42857142857 * 2 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.42857142857 * 2 = 2.85714285714"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 10 "
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857 (left: 1.42857 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 10 - 1.42857 = 8.57143 (left: 8.57143 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 - 7 = 3 (left: 3)  -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.57143 10"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 10 - 1.42857 = 8.57143 (left: 8.57143 10) -> 8.57143 * 10 = 85.7143 (left: 85.7143)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Without the input, I am unable to generate possible next steps. Please provide the input so I can assist you further."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> Input: -> It appears that the input is missing. Could you please provide the input so I can generate possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "It appears that the input is missing. Could you please provide the input so I can generate possible next steps for you?"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> Input: -> It appears that the input is missing. Could you please provide the input so I can generate possible next steps for you? -> Without the input, I am unable to generate possible next steps. Please provide the input so I can assist you further.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> Input: -> It appears that the input is missing. Could you please provide the input so I can generate possible next steps for you? -> Without the input, I am unable to generate possible next steps. Please provide the input so I can assist you further. -> Without the input, I am unable to generate possible next steps. Please provide the input so I can assist you further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 10 "
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 - 7 = 3 (left: 3) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 - 7 = 3 (left: 3)  -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.57143 10"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 10 - 1.42857 = 8.57143 (left: 8.57143 10) -> 8.57143 + 10 = 18.57143 (left: 18.57143)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-1"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 - 6 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1) -> There are no possible next steps as the input is not a valid operation.",
                "Pruning": null
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22) -> 16 / 22 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 10 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 14 16"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16) -> 6 / 16 = 0.375 (left: 0.375)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112) -> 112 - 96 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 10 / 9 = 1.1111 (left: 1.1111 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 10 / 9 = 1.1111 (left: 1.1111 12) -> 1.1111 + 12 = 13.1111 (left: 13.1111)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112) -> 16 * 7 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 14 16"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 10 - 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 10 - 9 = 1 (left: 1 12) -> 1 + 12 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 / 8 = 1.75 (left: 1.75 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 / 8 = 1.75 (left: 1.75 16) -> 1.75 * 16 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "110"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110 as it only contains one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110 as it only contains one number. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.75 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 6 / 8 = 0.75 (left: 0.75 14) -> 14 - 0.75 = 13.25 (left: 13.25)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.5 11"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 11 - 1.5 = 9.5 (left: 9.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 11 - 1.5 = 9.5 (left: 9.5) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "68"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 8 + 6 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "110"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.75 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 6 / 8 = 0.75 (left: 0.75 14) -> 0.75 + 14 = 14.75 (left: 14.75)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.5 11"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 * 11 = 16.5 (left: 16.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 * 11 = 16.5 (left: 16.5) -> There are no possible next steps with the input 16.5 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "68"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 6 / 8 = 0.75 (left: 0.75 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.75 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 6 / 8 = 0.75 (left: 0.75 14) -> 0.75 + 14 = 14.75 (left: 14.75)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "110"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "68"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.5 11"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 * 11 = 16.5 (left: 11 16.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 * 11 = 16.5 (left: 11 16.5) -> 11 + 16.5 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0.75 14"
                }
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Please provide at least two numbers to calculate the next steps."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 0.25 * 8 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 0.25 * 8 = 2 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.25 8 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left:  -> It appears that the input is missing. Can you please provide the input numbers so I can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 - 0.25 = 13.75 (left: 8 13.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 - 0.25 = 13.75 (left: 8 13.75) -> 8 / 13.75 = 0.58 (left: 0.58)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 17."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 + 0.25 = 14.25 (left: 8 14.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> - Division: Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 + 0.25 = 14.25 (left: 8 14.25) -> 8 + 14.25 = 22.25 (left: 22.25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input 17."
                }
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 + 3 = 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 =  -> 10 + 3 = 13 -> 13 / 10 = 1.3 (left: 1.3 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 =  -> 10 + 3 = 13 -> 13 / 10 = 1.3 (left: 1.3 3) -> 1.3 - 3 = -1.7 (left: -1.7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "130 + 2 = 132"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 132) -> 65 - 132 = -67 (left: -67)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 + 3 = 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "65 264"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 2 132) -> 2 * 132 = 264 (left: 65 264) -> 264 / 65 = 4.061538461538462 (left: 4.061538461538462)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-17"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 - 13 = -4 (left: -4 13) -> -4 - 13 = -17 (left: -17) -> There are no possible next steps with the input -17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 13 13"
                }
            },
            "Step 1": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 - 13 = -4 (left: -4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 - 13 = -4 (left: -4 13) -> -4 - 13 = -17 (left: -17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-17"
                }
            },
            "Step 3": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 - 13 = -4 (left: -4 13) -> -4 - 13 = -17 (left: -17) -> -17 + 2 = -15 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-17"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 - 13 = -4 (left: -4 13) -> -4 - 13 = -17 (left: -17) -> -17 - 2 = -19 (left: -19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-17"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "130 + 2 = 132"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 2 + 130 = 132 (left: 132 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 2 + 130 = 132 (left: 132 132) -> 132 + 132 = 264",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "65 264"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 2 132) -> 2 * 132 = 264 (left: 65 264) -> 65 * 264 = 17160 (left: 17160)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-17"
                }
            },
            "Step 8": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 9 - 13 = -4 (left: -4 13) -> -4 - 13 = -17 (left: -17) -> -17 + 8 = -9 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "132 + 132 = 264"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 =  -> 10 + 3 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 + 3 = 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 + 3 =  -> 10 + 3 = 13 -> 13 - 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "130"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "130 + 2 = 132"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 2 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 2 132) -> 2 * 132 = 264 (left: 65 264)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "65 264"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 2 132) -> 2 * 132 = 264 (left: 65 264) -> 264 - 65 = 199 (left: 199)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "130 + 2 = 132"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 -> 130 * 2 = 260 (left: 260 + 2 = 262)",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 ( -> 7 + 4 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 ( -> 7 + 4 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.333333 7"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 0.333333 * 7 = 2.333331 (left: 2.333331)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 0.333333 * 7 = 2.333331 (left: 2.333331) -> There are no possible next steps with the input 2.333331.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 0.833333"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 - 0.333333 = 6.666667 (left: 6.666667) -> 6.666667 / 8 = 0.833333 (left: 8 0.833333) -> 8 - 0.833333 = 7.166667 (left: 7.166667)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 0.833333"
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 - 0.333333 = 6.666667 (left: 6.666667) -> 6.666667 / 8 = 0.833333 (left: 8 0.833333) -> 8 - 0.833333 = 7.166667 (left: 7.166667)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 0.833333"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 + 7 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 + 7 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 ( -> 7 + 4 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-2"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2) -> There are no possible next steps with the current input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.333333 7"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 - 0.333333 = 6.666667 (left: 6.666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 - 0.333333 = 6.666667 (left: 6.666667) -> 6.666667 / 8 = 0.833333 (left: 8 0.833333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 0.833333"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 - 0.333333 = 6.666667 (left: 6.666667) -> 6.666667 / 8 = 0.833333 (left: 8 0.833333) -> 8 - 0.833333 = 7.166667 (left: 7.166667)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 + 7 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 0.833333"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 ( -> 7 + 4 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 11"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 ( -> 7 + 4 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.333333 7"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 / 0.333333 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 / 0.333333 = 21 (left: 21) -> 21 / 8 = 2.625 (left: 2.625)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.333333 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 0.833333"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 7 - 0.333333 = 6.666667 (left: 6.666667) -> 6.666667 / 8 = 0.833333 (left: 8 0.833333) -> 8 - 0.833333 = 7.166667 (left: 7.166667)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 11"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 4 = 1.75 ( -> 7 + 4 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 4 2.75)",
                "Pruning": null
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-32"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32) -> -32 / 8 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 + 8 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "96"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the number 96.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the number 96. -> There are no possible next steps with the number 96.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-32"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32) -> -32 * 2 = -64 (left: -64)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-32"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32) -> -32 / 2 = -16 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": " -> It appears that the input is missing. Could you please provide the numbers you would like to use for the next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": " -> It appears that the input is missing. Could you please provide the numbers you would like to use for the next steps? -> 3. Multiply two numbers",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 8 64)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 8 64) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "204"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 4 * 5 = 20 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "19 4 21"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 -> 2 * 2 = 4 (left: 19 4 21) -> 21 * 4 = 84 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 -> 2 * 2 = 4 (left: 19 4 21) -> 21 * 4 = 84 ( -> 25 / 4 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "29"
                }
            },
            "Step 7": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 + 5 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 + 5 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> 29 + 2 = 31 -> 29 * 2 = 58 (left: 2 58 31)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 -> 2 * 2 = 4 (left: 19 4 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 + 5 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 + 5 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "25 / 4 = 6"
                }
            },
            "Step 7": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 -> 2 * 2 = 4 (left: 19 4 21) -> 21 * 4 = 84 ( -> 25 / 4 = 6 -> 25 * 4 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "25 / 4 = 6"
                }
            },
            "Step 8": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 -> 2 * 2 = 4 (left: 19 4 21) -> 21 * 4 = 84 ( -> 25 / 4 = 6 -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "19 4 21"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 7 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 7 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "204"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "204"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 - 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 12 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 / 5 = 2.4 (left: 2.4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 / 5 = 2.4 (left: 2.4 12) -> 2.4 * 12 = 28.8 (left: 28.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "28.8"
                }
            },
            "Step 7": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 / 5 = 2.4 (left: 2.4 12) -> 2.4 * 12 = 28.8 (left: 28.8) -> 28 + 8 = 36 (left: 8 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 / 5 = 2.4 (left: 2.4 12) -> 2.4 * 12 = 28.8 (left: 28.8) -> 28 + 8 = 36 (left: 8 36) -> 288 - 28",
                "Pruning": null
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 16 + 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 1."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 + 2 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 + 2 = 8 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 16 + 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1.2 6 8"
                }
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16 -> 16 + 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 1."
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 1."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 - 6 = -1 (left: -1 2) -> -1 + 2 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "931"
                }
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931) -> 9 + 3 + 1 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "931"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931) -> 3 * 1 = 3 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931) -> 3 * 1 = 3 (left: 9 3) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 3"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931) -> 3 * 1 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "931"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0.387755 (left: 0.387755)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 3"
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931) -> 3 * 1 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0"
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 / 49 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 6 = 36 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. -> - Perform a mathematical operation on the existing numbers",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. -> - Perform a mathematical operation on the existing numbers -> - Subtract the third number from the fourth number",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations. -> - Subtract one number from another",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 4 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 30"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18 30) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.375 8"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8) -> 0.375 - 8 = -7.625 (left: -7.625)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 1.33"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 - 1.33 = 7.67 (left: 7.67) -> 7.67 * 10 = 76.7 (left: 76.7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 30"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 + 30 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 12 = -3 (left: 9 -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.375 8"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8) -> 0.375 + 8 = 8.375 (left: 8.375)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18 30) -> Possible next steps: -> It seems like there was an error in the input provided. Could you please provide the numbers again so I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 1.33"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 / 1.33 = 6.766 (left: 6.766)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 / 1.33 = 6.766 (left: 6.766) -> 6.766 * 2 = 13.532",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 30"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.375 8"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8) -> 0.375 + 8 = 8.375 (left: 8.375)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18 30) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 1.33"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 + 1.33 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 + 1.33 = 10.33 (left: 10.33) -> There are no possible next steps for the number 10.33 since it is already a decimal number and not an integer.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 / 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 8 30) -> 8 - 8 = 0 (left: 0 30) -> 30 - 0 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 / 10 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0 30"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10) -> 10 * 2 = 20 -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 20"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10) -> 10 * 2 = 20 -> 20 / 2 = 10 (left: 10 20) -> 10 + 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 10"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 * 4 = 20 (left: 20 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 8 30) -> 8 - 8 = 0 (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 - 10 = 10 (left: 10) -> 10 * 2 = 20 -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 8 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 8 30) -> 8 - 8 = 0 (left: 0 30)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 8 30) -> 8 - 8 = 0 (left: 0 30) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No further steps can be taken with just the number 8. -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 8 30) -> 8 - 8 = 0 (left: 0 30) -> 5 + 5 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 20"
                }
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "188.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 64.0 - 5 = 59.0 (left: 1 8 8 59.0)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "188 + 5 = 193"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 188 * 5 = 940",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 188 * 5 = 940 -> 188 / 5 = 37.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "188 / 5 = 37.6"
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 188 * 5 = 940 -> 188 / 5 = 37.6 -> 188 - 5 = 183 (left: 183 / 5 = 36",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 188 * 5 = 940 -> 188 / 5 = 37.6 -> 188 - 5 = 183 (left: 183 / 5 = 36 -> 5 + 183 = 188 (left: 188)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "188 / 5 = 37.6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 + 30 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "188.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "188 + 5 = 193"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 193 / 5 = 38.6 (left: 38.6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "13 - 12 = 1 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 12 = 1 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "188.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 1 * 88.5 = 89.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 1 * 88.5 = 89.5 -> 88.5 * 1 = 88.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "188 + 5 = 193"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 193 * 5 = 965 (left: 965)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2.5 12 13"
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 30 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "188 / 5 = 37.6"
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 188 * 5 = 940 -> 188 / 5 = 37.6 -> 188 * 5 = 940 (left: 940 / 5 = 188)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 188 + 5 =  -> 188 + 5 = 193 -> 188 * 5 = 940 -> 188 / 5 = 37.6 -> 188 * 5 = 940 (left: 940 / 5 = 188) -> 940 * 5 = 4700",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 20 / 10 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with just one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with just one number given. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 20 / 10 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 10 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28 -> 28 + 14 = ",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the number 19.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the number 19. -> There are no possible next steps with the number 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps for the input 43 as it is the only number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps for the input 43 as it is the only number provided. -> There are no possible next steps for the input 43 as it is the only number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44. -> There are no possible next steps with the input 6.44. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44. -> There are no possible next steps with the input 6.44. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "43"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> 43 - 2 = 41 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6.44"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "43"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> 43 + 2 = 45 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "43"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide more numbers to continue with the calculations. -> Addition, subtraction, multiplication, or division of the provided numbers to reach a target number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 6"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 + 8 = 27 (left: 8 19 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 + 8 = 27 (left: 8 19 27) -> 8 + 19 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "43"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 6.44."
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44. -> There are no possible next steps with the input 6.44.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44. -> There are no possible next steps with the input 6.44. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44. -> There are no possible next steps with the input 6.44. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 4 / 9 = 0.44 (left: 0.44 6) -> 0.44 + 6 = 6.44 (left: 6.44) -> There are no possible next steps with the input 6.44. -> There are no possible next steps with the input 6.44. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers. -> There are no valid arithmetic operations that can be performed on the number 6.44 to result in whole numbers.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 - 8 = -2.66667 (left: -2.66667)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "It looks like the input is missing. Please provide the numbers for the next step calculation."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> It looks like the input is missing. Please provide the numbers for the next step calculation. -> Without the input numbers, it is not possible to determine the next steps for calculation. Please provide the numbers to continue.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> It looks like the input is missing. Please provide the numbers for the next step calculation. -> Without the input numbers, it is not possible to determine the next steps for calculation. Please provide the numbers to continue. -> Without the input numbers, it is not possible to determine the next steps for calculation. Please provide the numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 * 8 = 42.66664 (left: 42.66664)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 8 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 8 / 8 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 + 2 = 15 -> 13 + 8 = 21 (left: 2 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.33333 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 / 8 = 0.66667 (left: 0.66667)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> It looks like the input is missing. Please provide the numbers for the next step calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "It looks like the input is missing. Please provide the numbers for the next step calculation."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> It looks like the input is missing. Please provide the numbers for the next step calculation. -> Without the input numbers, it is not possible to determine the next steps for calculation. Please provide the numbers for the calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> It looks like the input is missing. Please provide the numbers for the next step calculation. -> Without the input numbers, it is not possible to determine the next steps for calculation. Please provide the numbers for the calculation. -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 12 - 8 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.1667 8"
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8) -> 8 / 0.1667 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 / 14 = 0.5714285714285714 (left: 0.5714285714285714)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 12 - 8 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 12 - 8 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "72"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72 - 2 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "72"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.1667 8"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8) -> 0.1667 * 8 = 1.3336 (left: 1.3336 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8) -> 0.1667 * 8 = 1.3336 (left: 1.3336 8) -> 8 - 1.3336 = 6.6664 (left: 6.6664)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.33333333333 (left: 1.33333333333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "72"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72 / 4 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 7 + 23 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 21 11) -> 21 + 11 = 32 (left: 32) -> Input: 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 21 11) -> 21 + 11 = 32 (left: 32) -> Input: 10  -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 * 9 = 27"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 3 * 9 = 27 -> 9 * 3 = 27 (left: 27 = 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 21 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 21 11) -> 21 + 11 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 7 + 23 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 7 + 23 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 42 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.23"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23) -> 1.23 / 2 = 0.615",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23) -> 1.23 / 2 = 0.615 -> 1.23 + 2 = 3.23 (left: 3.23)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 7 = 77 (left: 12 77)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 7 = 77 (left: 12 77) -> 77 + 12 = 89 (left: 89)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 7 + 23 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 7 + 23 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.23"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23) -> 1.23 * 2 = 2.46 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 7 + 23 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 9 - 7 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 9 - 7 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "192"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 7 + 9 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 192 / 1 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left:  -> It looks like you have not provided any input. Can you please provide the numbers for which you want to find possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.5"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 7 + 9 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 7 + 9 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.71"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 12 / 7 = 1.71 (left: 1.71 9) -> 1.71 + 9 = 10.71 (left: 10.71) -> There are no possible next steps with the input 10.71.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 12 / 7 = 1.71 (left: 1.71 9) -> 1.71 + 9 = 10.71 (left: 10.71) -> There are no possible next steps with the input 10.71. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 12 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps for the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps for the input 15. -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 10.71."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 12 / 7 = 1.71 (left: 1.71 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 12 / 7 = 1.71 (left: 1.71 9) -> 1.71 + 9 = 10.71 (left: 10.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.71"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 12 / 7 = 1.71 (left: 1.71 9) -> 1.71 + 9 = 10.71 (left: 10.71) -> There are no possible next steps for the input 10.71.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 7 9 12) -> 12 / 7 = 1.71 (left: 1.71 9) -> 1.71 + 9 = 10.71 (left: 10.71) -> There are no possible next steps for the input 10.71. -> There are no possible next steps for the input 10.71.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> No possible next steps, since there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> No possible next steps, since there is only one number. -> No possible next steps, since there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 12"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 14 - 1 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: -> 3 / 12 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 / 12 = 0.6666666667 (left: 0.6666666667)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 2 5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4 -> There are no possible next steps as the equation has been solved and the result is 4.",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30 120"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 15 20"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 5 + 15 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 5 + 15 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 15 20"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 15 20"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 / 5 = 4 (left: 4",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "15 25"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 + 5 = 25 (left: -> 20 - 5 = 15 (left: 15 25) -> 25 + 15 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 15 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 =  -> 5 - 4 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30 120"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> 30 / 120 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "30 120"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 15 20"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 - 15 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 - 15 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "30 120"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 15 20"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 5 * 15 = 75 (left: 75 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 5 * 15 = 75 (left: 75 20) -> 75 + 20 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 15 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30 120"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> 30 + 90 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 2 6 9) -> 2 * 6 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 15 20"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 + 5 = 25 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 + 5 = 25 (left: -> 20 - 5 = 15 (left: 15 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 15 20"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> Input: 5 5 10 20 -> 10 + 5 = 15 (left: 5 15 20) -> 20 - 5 = 15 (left: 15 20) -> 20 / 15 =",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 * 10 = 80"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80 -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 * 10 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 * 10 = 130 (left: 130) -> 130 - 2 = 128",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 10 13) -> -2 + 10 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 10 13) -> -2 + 10 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 / 1.6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> No possible next steps with the input 31.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> No possible next steps with the input 31. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 10 13) -> -2 + 10 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 10 13) -> -2 + 10 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "31"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> 3 * 1 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 * 10 = 80"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80 -> 80 - 10 = 70 (left: 8 70)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80 -> 80 - 10 = 70 (left: 8 70) -> 70 - 8 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 * 10 = 80"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "130 - 2 = 128"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 * 10 = 130 (left: 130) -> 130 - 2 = 128 -> 128 / 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 * 10 = 130 (left: 130) -> 130 - 2 = 128 -> 128 / 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Provide additional numbers to perform calculations."
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Provide additional numbers to perform calculations. -> 7 + 8 = 15 (left: 8 15 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Provide additional numbers to perform calculations. -> 7 + 8 = 15 (left: 8 15 12) -> 12 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.909090909090909 4.909090909090909"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909) -> 2.909090909090909 * 4.909090909090909 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909) -> 2.909090909090909 * 4.909090909090909 =  -> 2.909090909090909 * 4.909090909090909 = 14.27272727272727",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number given. -> Provide additional numbers to perform calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2.909090909090909 - 0.9090909090909091 = 2"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2.909090909090909 * 0.9090909090909091 = 2.636363636363636",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2.909090909090909 * 0.9090909090909091 = 2.636363636363636 -> 2.909090909090909 + 0.9090909090909091 = 3.818181818181818 (left: 3.818181818181818 * 2.909090909090909 = 11.09090909090909)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.909090909090909 4.909090909090909"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909) -> 2.909090909090909 + 4.909090909090909 = 7.818181818181818 (left: 4.909090909090909 7.818181818181818)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909) -> 2.909090909090909 + 4.909090909090909 = 7.818181818181818 (left: 4.909090909090909 7.818181818181818) -> 4.909090909090909 * 7",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 * 2 = 1.8181818181818182",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 * 2 = 1.8181818181818182 -> 0.9090909090909091 / 2 = 0.4545454545454546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2.909090909090909 - 0.9090909090909091 = 2"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.909090909090909 4.909090909090909"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909) -> 4.909090909090909 - 2.909090909090909 = 2.000000000000000 (left: 2.000000000000000)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2.909090909090909 4.909090909090909"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 + 2 = 2.909090909090909 -> 2.909090909090909 - 0.9090909090909091 = 2 -> 2 + 0.9090909090909091 = 2.909090909090909 (left: 2 2.909090909090909) -> 2 + 2.909090909090909 = 4.909090909090909 (left: 2.909090909090909 4.909090909090909) -> 2.909090909090909 + 4.909090909090909 = 7.818181818181818 (left: 7.818181818181818)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2.909090909090909 4.909090909090909"
                }
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n5 * 2 = 10 (left: 3 10 10)\n10 - 3 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\nAnswer: ((5 * 2) - 3) * 10 = 70",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 4\nSteps:\n6 + 6 = 12 (left: 6 4 12)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 6) * 4 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 96"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96) -> 12 * 8 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96) -> 12 * 8 = 96 (left: 96) -> There are no possible next steps with the number 96.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> 5 + 2 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 8\nSteps:\n4 * 8 = 32 (left: 2 3 32)\n3 + 2 = 5 (left: 5 32)\n5 * 32 = 160 (left: 160)\nAnswer: (3 + 2) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 96"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96) -> 96 - 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96) -> 96 - 12 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24\nAnswer: (((2 * 3) + 8) + 6) + 4 = 24.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * 6) * 2 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the given inputs can be simplified using the basic arithmetic operations to obtain the final result of 24.",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 96"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96) -> 96 / 12 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 8 12 12) -> 12 * 8 = 96 (left: 12 96) -> 96 / 12 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 10 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 10 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 * 10 = 20 (left: 11 20) -> 20 - 11 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "15 / 2 = 7.5 "
                }
            },
            "Step 8": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5  -> 15 + 2 = 17 (left: 2 7.5 17)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 3 * 9 = 27 (left: ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 10 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 * 10 = 20 (left: 11 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 * 10 = 20 (left: 11 20) -> 20 - 11 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.7272727272727273"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 * 2 = 1.4545454545454546",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 * 2 = 1.4545454545454546 -> 0.7272727272727273 + 2 = 2.7272727272727275 (left: 2.7272727272727275)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 17"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 2 4 17) -> 4 + 2 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 10 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 * 10 = 20 (left: 11 20) -> 20 - 11 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 * 10 = 20 (left: 11 20) -> 20 - 11 = 9 (left: 9) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps. Equation has been solved."
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps. Equation has been solved."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "41"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> Equation has been solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No further steps, the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps. Equation has been solved."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> The equation has been solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 8 9"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 8 9) -> 8 - 1 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 8 9) -> 8 - 1 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps as the equation has already been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps. Equation has been solved."
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps. Equation has been solved."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 1 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 1 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 1 + 5 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 1 + 5 = 6 (left: 6 7) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "It seems like the input is incomplete. Can you please provide the numbers or operation you would like to perform next?"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> Possible -> It seems like the input is incomplete. Can you please provide the numbers or operation you would like to perform next? -> Multiplication:",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number. -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 / 1 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 / 1 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.4"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 / 1 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> The input \"1.4\" is not a valid input for this type of mathematical operation. Please provide whole numbers for the next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 / 1 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> The input \"1.4\" is not a valid input for this type of mathematical operation. Please provide whole numbers for the next steps. -> 1 - 4 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Input: 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 10 - 5 = 5 (left: 5 15",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 10 - 5 = 5 (left: 5 15 -> 15 / 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 5 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> Possible -> It seems like the input is incomplete. Can you please provide the numbers or operation you would like to perform next?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 1 + 5 = 6 (left: 6 7) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 1 + 5 = 6 (left: 6 7) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Input: 3"
                }
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25 - 5 = 20 ("
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 / 5 = 5 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 - 5 = 20 (left: 20 20) -> 20 - 20 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "30 11"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330) -> 3 + 30 = 33",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25 - 5 = 20 ("
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 - 5 = 20 (left: 20 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 - 5 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 11"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> 4 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "30 11"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11) -> 30 + 11 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11) -> 30 + 11 = 41 (left: 41) -> There are no possible next steps with the input of 41.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 2"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 - 5 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 20"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 / 5 = 5 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "30 11"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11) -> 5 * 3 = 15 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 30 11) -> 5 * 3 = 15 (left: -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 * 5 = "
                }
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12) -> 25 + 12 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 + 3 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Please provide at least two numbers to find possible next steps."
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 8 17"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17) -> 8 / 8 = 1 (left: 1 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17) -> 8 / 8 = 1 (left: 1 17) -> 1 + 17 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 + 3 = 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 8 17"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17) -> 8 * 8 = 64 (left: 64 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17) -> 8 * 8 = 64 (left: 64 17) -> 64 - 17 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 + 3 = 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 4 / 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 4 / 12 =  -> 12 / 4 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 + 3 = 6"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 + 3 = 6 -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 13 12"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 4 / 13 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 8 17"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17) -> Possible next steps: -> Not enough information provided. Please input a set of numbers.",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 35 36"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 10 / 35 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 10 / 35 =  -> 10 / 35 = 0.2857142857142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 / 35 = 0.2857142857142857"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 10 / 35 =  -> 10 / 35 = 0.2857142857142857 -> 10 - 35 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 35 36"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 35 / 10 = 3.5 (left: 3.5 36)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide the corrected input so I can suggest possible next steps."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 / 35 = 0.2857142857142857"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 10 / 35 =  -> 10 / 35 = 0.2857142857142857 -> 35 / 10 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Please provide the corrected input so I can suggest possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps? -> Please provide the corrected input so I can suggest possible next steps. -> 2 * 8 = 16 (left: 14 16 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps? -> Please provide the corrected input so I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 / 35 = 0.2857142857142857"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 10 / 35 =  -> 10 / 35 = 0.2857142857142857 -> 35 / 10 = 3.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> Input: 26 9 10 36 -> 26 + 9 = 35 (left: 10 35 36) -> 10 / 35 =  -> 10 / 35 = 0.2857142857142857 -> 35 / 10 = 3.5 -> 10 / 35 = 0.2857142857142857 (left: 0.2857142857142857)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Please provide the corrected input so I can suggest possible next steps."
                }
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14) -> 14 - 2 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers. -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> None, as there is only one number provided. -> Only one number is provided, so no mathematical operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Only one number is provided, so no mathematical operations can be performed."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> Input: 15 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> Input: 15 3 -> 3 * 15 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 26"
                }
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 2 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 / 1.692307692307692",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 / 1.692307692307692 -> 13 / 1.692307692307692 = 7.666666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 / 1.6923076923076923 = 7.666666666666667 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 / 1.6923076923076923 = 7.666666666666667 (left -> 13 * 1.6923076923076923 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.6923076923076923 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 - 1.6923076923076923 = 11.307692307692308 (left: 1.6923076923076923 11.307692307692308)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 - 1.6923076923076923 = 11.307692307692308 (left: 1.6923076923076923 11.307692307692308) -> 1.6923076923076923 + 11.307692307692308 = 13 (left: 11.307692307692308 13)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 11 / 2 = 5.5 (left: 5.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 11 / 2 = 5.5 (left: 5.5 13) -> 5.5 * 13 = 71.5 (left: 71.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 / 1.6923076923076923 = 7.666666666666667 (left: 7.666666666666667 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 13 / 1.6923076923076923 = 7.666666666666667 (left: 7.666666666666667 13) -> 7.666666666666667 + 13 = 20.666666666666667 (left: 20.666666666666667)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.6923076923076923 13"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 1.6923076923076923 * 13 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 11 "
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 4 11  -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 1.6923076923076923 * 13 = 22 (left: 13)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "71.5"
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 11 / 2 = 5.5 (left: 5.5 13) -> 5.5 * 13 = 71.5 (left: 71.5) -> 71.5 + 8 = 79.5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.5 11"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 * 11 = 60.5 (left: 60.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.5 11"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 13 - 2 = 11 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 - 11 = -5.5 (left: -5.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 11 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 1.6923076923076923 * 13 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 1.6923076923076923 * 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "71.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.6923076923076923 13"
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 1.6923076923076923 * 13 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 * 11 = 22 (left: 13 22) -> 22 / 13 = 1.6923076923076923 (left: 1.6923076923076923 13) -> 1.6923076923076923 * 13 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "13 / 1.692307692307692 = 7.666666666666667"
                }
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.8666666666666667"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.7511111111111112 1.7333333333333334"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 / 1.7333333333333334 = 0.4338461538461539 (left: 0.4338461538461539 1.7333333333333334)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 / 1.7333333333333334 = 0.4338461538461539 (left: 0.4338461538461539 1.7333333333333334) -> 0.4338461538461539 / 1.7333333333333334 = 0.25000000000000006 (left: 0.25000000000000006)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.7511111111111112 1.7333333333333334"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.7511111111111112 1.7333333333333334"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-16"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 - 22 = -16 (left: -16) -> There are no possible next steps with the input of -16.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 - 22 = -16 (left: -16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "39"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps with the number 39.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps with the number 39. -> There are no possible next steps with the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.7511111111111112 1.7333333333333334"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 + 1.7333333333333334 = 2.4844444444444446 (left: 2.4844444444444446)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "39"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> 39 / 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the number 39."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.7511111111111112 1.7333333333333334"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 * 1.7333333333333334",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 * 1.7333333333333334 -> 0.7511111111111112 - 1.7333333333333334 = -0.9822222222222222",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "39"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> 39 - 2 = 37 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 13 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.7511111111111112 1.7333333333333334"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 / 1.7333333333333334 = 0.43333333333333335 (left: 0.43333333333333335)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.8666666666666667"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 / 2 = 0.4333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.7511111111111112 1.7333333333333334"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 * 1.7333333333333334",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15) -> 13 / 15 = 0.8666666666666667 (left: 0.8666666666666667) -> 0.8666666666666667 + 0.8666666666666667 = 1.7333333333333334 -> 0.8666666666666667 * 0.8666666666666667 = 0.7511111111111112 (left: 0.7511111111111112 1.7333333333333334) -> 0.7511111111111112 * 1.7333333333333334 -> 0.7511111111111112 * 1.7333333333333334 = 1.3022222222222223",
                "Pruning": null
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 702477,
        "output_tokens": 233321.5111111109,
        "total_cost": 0.7012207666666663
    }
}