{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 / 5 = 26.4 (left: 26.4)\n26.4 - 6 = 20.4 (left: 20.4)\n20.4 - 4",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 11 10"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 11 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> I hope this helps! Let me know if you need further assistance.",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 5 6 8\nSteps:\n5 * 3 = 15 (left: 6 8 15)\n15 - 6 = 9 (left: 8 9)\n9 * 8 = 72 (left: 72)\nAnswer: (5 * 3) - (15 - 6) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 7 7\nSteps:\n3 * 7 = 21 (left: 3 7 21)\n7 - 3 = 4 (left: 4 21)\n4 * 21 = 84 (left: 84)\nAnswer: (3 * 7) * (7 - 3) = 84\nInput: 2 3 5 10\nSteps:\n10 - 5 = 5 (left:",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> These are some examples of how to obtain 24 using the given numbers and basic arithmetic operations.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (6 * 3) - (9 - 8) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: (3 + 5) * (8 - 3) = 40",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> These are just a few examples of how to obtain 24 with the given numbers using basic arithmetic operations. There are many different combinations that can lead to the desired result.",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 3) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) - (8 - 9)) * 9 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n8 - 3 = 5 (left: 5 6 9)\n5 + 6 = 11 (left: 11 9)\n11 * 9 = 99 (left: 99)\nAnswer: (8 - 3) + (6 + 9) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n5 * 3 = 15 (left: 15 15)\n15 * 15 = 225 (left: 225)\nAnswer: (7 + 8) * (5 * 3) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> All the possible ways to obtain 24 using the input numbers have been mentioned above.",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 4 5 7\nSteps:\n4 + 7 = 11 (left: 3 5 11)\n5 + 11 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 4) + (5 + 7)) -",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 4 6 7\nSteps:\n4 * 6 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (4 * 6) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 3 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) + 3) * 4 =",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3 24)\n3 * 3 = 9 (left: 9 24)\n9 - 24 = -15 (left: -15)\n-15 + 24 = 9 (left: 9)\nAnswer: ((3 * 8) - (6",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 6\nSteps:\n3 + 6 = 9 (left: 3 4 9)\n9 * 4 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 6) * 4) / 3 * 2 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\n-9 * -1 = 24 (left: 24)\nAnswer: (3 * 8) + ((6 + 9) - 24) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 3 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 4) + 7) * 3 -",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 7 8 9\nSteps:\n8 - 3 = 5 (left: 5 7 9)\n5 + 9 = 14 (left: 7 14)\n14 - 7 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((8 - 3) + 9) * 3 =",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 9 = 45 (left: 3 45)\n3 * 45 = 135 (left: 135)\nAnswer: 3 * (8 - 3) * 9 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 7"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 4 + 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 24"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 24"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "8 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 9 / 4 = 2.25 (",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 9 / 5 = 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.6667 (left: 3 2.6667)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 0 * 16 = 0 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> No possible next steps as there are no other numbers to operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 0 - 16 = -16 (left: -16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> None",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 - 1.125 = 11.875 (left: 11.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "14.625"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 * 13 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps as there are no more numbers to operate with. -> N/A",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 72 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 + 13 = 14.125 (left: 14.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps as there are no more numbers to operate with.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps as there are no more numbers to operate with. -> 8 / 8 = 1 (left: 16 12)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 / 1.125 = 11.5555555556 (left: 11.5555555556)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 * 13 = 14.625 (left: 14.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps as there are no more numbers to operate with. -> N/A",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 * 13 = 14.625 (left: 14.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 - 9 = -8 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "14.625"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 * 13 = 14.625 (left: 14.625) -> There are no possible next steps for the input 14.625.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps as there are no more numbers to operate with. -> None.",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 - 1 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 - 1 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate with."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps as there are no more numbers to operate with. -> N/A",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate with."
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 - 132 = -119 (left: -119)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 - 132 = -119 (left: -119)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1716"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716) -> 17 - 1 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 - 132 = -119 (left: -119)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 25 - 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "145"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 45 + 1 = 46 (left: 46)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.098 (left: 0.098)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "13 21"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 21 - 13 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "145"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 5 * 5 = 25 (left: 1 25)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1716"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716) -> 1 * 7",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.098 (left: 0.098)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 21 - 13 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> Input: 2 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18 as there are no other numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 * 2 = 18 (left: 18 18)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 / 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 8 + 11 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 18."
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 - 9 = 9 (left: 9 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 * 11 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 18."
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the input 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> None as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input: 18."
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input: 18. -> There are no possible next steps with the input: 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input: 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input: 18."
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input: 18. -> There are no possible next steps with the input: 18.",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There is only one possible next step: 18 - 8 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There is only one possible step:"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There is only one possible step: -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 / 6 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 / 6 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There is only one possible step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 * 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> No possible next steps. The equation is complete with the result 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 9 135)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 135"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 9 135) -> 9 + 135 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "15 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 135"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 / 9 = 1.6667 (left: 1.6667)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 135"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 9 135) -> 9 + 135 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -6)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "15 9"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (9 + 1) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (1 / 9) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9 135"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 135"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n7 + 14 = 21 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 6 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n8 + 0 = 8 (left: 8)\n14 - ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 12 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 4 6 8\nSteps:\n6 / 2 = 3 (left: 3 4 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / 2) * 8 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "4 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 7 - 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 10"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 7 - 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 / 21 = 0.142",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 10\nSteps:\n10 + 5 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (10 + 5) * (3 * 15 - 2) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 5 + 7 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 * 6) * (5 + 3) = 96",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 9"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 12 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 * 4 = 36 (left: 36) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 + 3) - 6) * 6 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 1 2 3 4\nSteps:\n1 * 4 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * 4) * (2 * 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n2 * 4 = 8 (left: 8 18)\n8 + 18 = 24 (left: 24)\nAnswer: ((3 * 6) + 2) * 4 = 24",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 7 / 3 = 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 2 - 10 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.8"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 * 3 = 30"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 * 3 = 30 -> 10 / 3 = 3.33 (left: 3.33 10 30)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "20"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 * 9 = 36 (left: 36 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 * 3 = 30"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 * 3 = 30 -> 3 - 10 = -7 (left: -7)",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.6667 (left: 2.6667 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846153846153846 (left: 1.846153846153846)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 65"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 - 3 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 65"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 65"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 - 3 = 62 (left: 62)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10 13"
                }
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 13 - 3 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10 13"
                }
            },
            "Step 5": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 13 * 24 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 65"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 65"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 65"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 3 + 65 = 68 (left: 68)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = 4.33 (left: 4.33 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 - 3 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 3 + 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> Input: 4 6 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 65"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 - 3 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 65"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 65"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 - 3 = 62 (left: 62)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 3 * 5 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 + 3 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 65"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 / 3 = 21.666666666666668 (left: 21.666666666666668)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 65"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 65"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 3 * 65 = 195 (left: 195)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 3 + 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 13 + 3 = 16 (left: 5 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 65"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 3 + 65 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 65"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 65"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65) -> 65 - 3 = 62 (left: 62)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 + 6 = 7.5 (left: 7.5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> Input: 10 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 27 / 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 3"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 2"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 3"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 - 3 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 3 - 4 = -1 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 - 3 = 21 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24 3"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 10 + 5 = 15 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 30 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24 3"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 24"
                }
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 * 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 - 8 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 1 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> No possible next steps. The input is already a single number.",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There is only one number, so no possible next steps."
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 27 -> There is only one number, so no possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> Input: 20 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "44"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> 44 / 2 = 22",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "15"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15) -> 15 / 2 = 7.5",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "44"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 * 10 = 60 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "27"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 27 -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "44"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 - 6 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> 44 + 2 = 46 (left: 2 44)",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 12 11"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 12 11) -> 11 + 6 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on what operation you choose to perform. Could you please provide more information or specify which operation you would like to see the next step for?",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 10 "
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 3 - 10 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 12 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> It seems like you did not provide an input for the next calculation. Please provide the numbers you would like to use next.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> It seems like the input is missing. Could you please provide the numbers for the next step calculation?",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left: ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> There are no possible next steps as the input is missing.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> No input given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 5 = 25 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 / 1 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> It seems like there was no input provided. Can you please provide the numbers for me to suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> It seems like you did not input any numbers. Please provide a list of numbers to continue finding possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 + 1 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 1"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 - 1 = 2 (left: 2) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> It seems like there was no input provided. Can you please provide the numbers to continue with the calculations?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 5 * 9 = 45 (left:  -> It seems that there is no input provided. Please provide a set of numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 9 48"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 48 / 9 = 5.33 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 9 48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "2 40"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 48"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 40"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 + 40 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 2 "
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 2  -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 40"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 40"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 40"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 40 - 2 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 48"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 * 48 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 40"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 2 "
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 2  -> 2 * 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2 40"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 40 - 2 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 48"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 40"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 40"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 40 - 2 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 48"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2 40"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 8 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "1 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 48"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 8 9 48) -> 9 - 8 = 1 (left: 1 48) -> 1 - 48 = -47 (left: -47 48)",
                "Pruning": null
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Input: 3 9 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 4 5  -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 5 / 4 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 4 * 20 = 80 (left: 80 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 - 5 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 / 5 = 2.6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 3 - 10 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 20"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 20"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 4 * 20 = 80 (left: 80)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 2 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * (6 - 3)) * 7 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 / 6 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "32 32"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "32 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 + 32 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "32 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "32 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 * 32 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "32 0.03125"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 31"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 * 0.03125 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 + 0.03125 = 32.03125 (left: 32.03125)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "32 0.03125"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 - 0.03125 = 31.96875 (left: 31.96875)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 31"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 * 0.03125 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 * 0.03125 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "32 0.03125"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 5",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "32 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 + 32 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 + 0.03125 = 32.03125 (left: 32.03125)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "32 0.03125"
                }
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 * 13 = 65 (left: 13 65)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 5 * 8 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.625 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 * 10 = 6.25 (left: 6.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10.625"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 + 10 = 10.625 (left: 10.625) -> 10.625 * 2 = 21.25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.625 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 * 10 = 6.25 (left: 6.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9.375"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 10 - 0.625 = 9.375 (left: 9.375) -> There are no possible next steps for 9.375 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.625 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 10 / 0.625 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9.375"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 10 - 0.625 = 9.375 (left: 9.375) -> There are no possible next steps for a single number input of 9.375 as it is already a single value.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> Input: 4 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 7 * 3 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.625 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 + 10 = 10.625 (left: 10.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10.625"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 + 10 = 10.625 (left: 10.625) -> 10.625 * 2 = 21.25",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.625 10"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 10 - 0.625 = 9.375 (left: 9.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10.625"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 / 8 = 0.625 (left: 0.625 10) -> 0.625 + 10 = 10.625 (left: 10.625) -> 10.625 / 2 = 5.3125",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 2 = 24 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "3 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 + 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 * 8 = 288 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 10 - 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.83 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 1.83 + 11 = 12.83 (left: 12.83 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 3 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> Input: 3 7 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5.83 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 15 - 9.17 = 5.83 (left: 5.83 15) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 * 15 = 137.55 (left: 15 137.55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 * 15 = 137.55 (left: 137.55)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.61133 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.83 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 15 / 9.17 = 1.63 (left: 1.63)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9.17 15"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 - 15 = -5.83 (left: -5",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "9.17 15"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 24.17)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "9.17 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 24.17)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.61133 15"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.83 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 15 - 1.83 = 13.17 (left: 11",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.83 11 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 1.83 + 11 = 12.83 (left: 12.83 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 15 - 9.17 = 5.83 (left: 5.83 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5.83 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 15 - 9.17 = 5.83 (left: 5.83 15) -> 5.83 + 15 = 20.83 (left: 15 20.83)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 24.17"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 15 24.17) -> 15 - 24.17 = -9.17 (left: -9.17)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.61133 15"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 15 - 9.17 = 5.83 (left: 5.83)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "0.61133 15"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.83 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 1.83 + 11 = 12.83 (left: 12.83 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 * 15 = 137.55 (left: 137.55)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9.17 15"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 15 + 9.17 = 24.17 (left: 9",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "9.17 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 / 15 = 0.61133 (left: 0.61133 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 * 15 = 137.55 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 24.17)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.61133 15"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 / 8 = 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 8 - 5 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 * 15 = 137.55 (left: 137.55)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 3 + 7 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 15 24.17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 24.17)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "9.17 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9.17 15"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.83 (left: 1.83 11 15) -> 11 - 1.83 = 9.17 (left: 9.17 15) -> 9.17 + 15 = 24.17 (left: 15 24.17)",
                "Pruning": null
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 9 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((7 - 9) - 9) + 13 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + (13 - (-2))) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((7 - 9) - 9) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((7 - 9) - 9) + 13 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + (13 - (-2))) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) - (13 - (-2)) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) + (13 - (-2)) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((7 - 9) - 13) + 9 + 15 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 15"
                }
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + (13 - 7)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) - (13 - 9) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + (13 - (-2))) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((7 - 9) - 9) + 13 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + (13 - (-2))) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 9 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 9 4) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + (13 - 2)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((7 - 9) - 9) + 13 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - (-2) = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 - 9) * (9 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 4 + 5 = 9 (left: 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 9 - 6 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 12 * 9 = 108 (left: 18 108)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "18 108"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 12 * 9 = 108 (left: 18 108) -> 18 * 108 = 1944 (left: 1944)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.16666666666666666 12"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 / 12 = 0.16666666666666666 (left: 0.16666666666666666 12) -> 0.16666666666666666",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.16666666666666666 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 3) / 9) * 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 * 6 = 54 (left: 9 9 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 9 12"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 12) -> 12 - 9 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 / 12 = 0.16666666666666666 (left: 0.16666666666666666 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) / (9 / 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 12 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 9 / 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) / (9 / 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 6 + 9 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 16.67"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67) -> 1.33 + 16.67 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 18 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "Input: 4 5"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> Input: 4 5 -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) * (9 / 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 9 - 6 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 18 12"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 3) / (9 / 12) = 24"
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 + 4 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (5 + 4) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 * 1 = 21 (left: 21)\nAnswer: ((3 * 7) * (8 - 3)) /",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 2 3 5 9\nSteps:\n5 - 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((5 - 3) * 9) + 2 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 24)\n6 * 24 = 24\nAnswer: ((3 * 3) + (7 + 8)) * 24 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\nAnswer: (3 * 3) * (8 - 5) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (4 * 6) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((5 * 4) - 6) + 3 + 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (7 + 8) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 + 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 + 10 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\nAnswer: (3 * 8) + (6 + 9) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) + 5) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 4 = 9 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 7 13"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 7 13) -> 13 / 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (9 - 7)) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 9)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (9 - 7)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 7 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 9 13"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 4 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - (13 - 7)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (13 - 7) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 - 7 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 3 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 + 21 = 29 (left: 29)\nAnswer: (3 * 7) + (5 + 3) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nAnswer: (3 * 3) * (5 - 9) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 9\nSteps:\n3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 3) + 5) * (",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 7) - (5 - 3)) * 10 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 8",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 7 9\nSteps:\n7 + 9 = 16 (left: 3 3 16)\n3 * 3 = 9 (left: 9 16)\n16 - 9 = 7 (left: 7 9)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * (",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n7 - 5 = 2 (left: 2 42)\n2 * 42 = 84 (left: 84)\n3 * 84 = 252 (left: 252)\n252",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.6667 (left: 16.6667)\n16.6667 + 3 = 19.6667 (left: 19.6667)\n19.6667 + 0.3333 = 20 (",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\nAnswer: 3 * (8 + 6) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 9 = 12 (left: 5 12)\n12 + 5 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((3 * 7) - 9) + 5 + 7 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 7) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 + 21 = 29 (left: 29)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) + (6 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n3 * 7 = 21 (left: 21 14)\n21 - 14 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 14) * 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Overall, there are multiple ways to obtain the number 24 using the given numbers and basic arithmetic operations.",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) + (5 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 8 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 4 6 9\nSteps:\n3 * 9 = 27 (left: 4 6 27)\n4 + 6 = 10 (left: 10 27)\n27 - 10 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((3 * 9) - (4 + 6)) + 7 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 10",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 19 "
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 / 5 = 3.8 (left: 3.8 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 19 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 + 19 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 29"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 + 5 = 29 (left: 5 29) -> 29 / 5 = 5.8 (left: 5.8 29)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 19 "
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 - 5 = 14 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 27 / 3 = 9 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "19 95"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 / 24 = 0.20833333333333334 (left: 0.20833333333333334 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 19 "
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 + 19 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 24"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 + 5 = 29 (left: 5 29)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 19 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 27 / 3 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 19 "
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 19 95)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "19 95"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 19 95) -> 19 + 95 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "19 95"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 - 19 = -14 (left: -14 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 19 "
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 - 5 = 14 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 19 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 19 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 7 + 3 = 10 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 19 "
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 / 5 = 3.8 (left: 3.8 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 19 "
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 - 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "5 24"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 24"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 - 24 = -19 (left: -19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 19 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 19 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 + 19 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 27 / 3 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "19 95"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 19 95) -> 19 - 95 = -76 (left: -76)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "19 95"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 24"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 10 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 19 "
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 + 19 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 19 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 - 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 19 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "5 19 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 19 "
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 19 - 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "19 95"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 5 19  -> 5 * 19 = 95 (left: 19 95) -> 95 - 19 = 76 (left: 76)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "19 95"
                }
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 10 / -2 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 10 / -2 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 - 10 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 * 10 = -20 (left: -20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 + 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 10 / -2 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 10 - 1.4285714285714286 = 8.571428571428572 (left: 1.4285714285714286 8.571428571428572)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps for the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> The input provided is invalid. Please enter a valid input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 + 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 10 + (-2) = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> 5 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 + 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 * 10 = 14.285714285714287 (left: 10)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1.4285714285714286 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 / 10 = -0.2 (left: -0.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "-2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 - 10 = -2 (left: -2 10) -> -2 / 10 = -0.2 (left: -0.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 10 / 1.4285714285714286 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.4285714285714286 8.571428571428572"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 10 - 1.4285714285714286 = 8.571428571428572 (left: 1.4285714285714286 8.571428571428572) -> 8.571428571428572 - 1.4285714285714286 = 7.142857142857144 (left: 7.",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.4285714285714286 8.571428571428572"
                }
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps as 36 is a single number and cannot be combined with any other numbers using the operations +, -, *, or /.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 1 14"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 1 * 2 = 2 (left: 2 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There is only 1 number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 1 14"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 1 + 2 = 3 (left: 3 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 1 14"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 2 / 1 = 2 (left: 2 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 2 = 46 (left: 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and not a combination of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 1 14"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 14 - 2 = 12 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 + 2 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 1 14"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 14 / 2 = 7 (left: 2 7)",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 2 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "54 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 - 2 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (6 + (9 * (11 - 9))) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (6 + (9 * (11 - 9))) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "54 2"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 / 2 = 27 (left: 27)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "54 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (6 + (9 * (11 - 9))) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "54 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 * 2 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24)"
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 2": {
                "Step": "5 * 11 = 55 (left: 8 12 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "80"
                }
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 - 16 = 80 (left: 80) -> 80 + 2 = 82",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.098 (left: 0.098)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.09 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> Input: 5 3 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1536"
                }
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536) -> 15 + 36 = 51",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 10 = 130 (left: 130 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1536"
                }
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536) -> Input: 537",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 - 132 = -119 (left: -119)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 / 16 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 / 16 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13 132"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 * 16 = 1536 (left: 1536)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "96 16"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 / 16 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "112"
                }
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112) -> 1 + 1 + 2 = 4 (left: 4 2)",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 10 - 0.4 = 9.6 (left: 9.6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.4 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 0.4 + 10 = 10.4 (left: 10.4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 2 * 6 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 10 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 10 * 5 = 50 (left: 50 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 0.4 * 10 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 5 10 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 70"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 10 70) -> 70 - 10 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "7 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 10 - 0.4 = 9.6 (left: 9.6)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 6 + 10 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "5 10 14"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 10 / 5 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 70"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 10 70) -> 10 - 7 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 10 48"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "50 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 10 * 5 = 50 (left: 50 48) -> 50 / 48 = 1.04167 (left: 1.04167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 0.4 + 10 = 10.4 (left: 10.4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 2 - 11 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 10 70)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "50 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 10 * 5 = 50 (left: 50 48) -> 50 - 48 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 10 - 0.4 = 9.6 (left: 9.6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.4 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10) -> 0.4 / 10 = 0.04 (left: 0.04)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 / 12 = 0.9167 (left: 0.9167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 - 8 = 15 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There is only one number, so no calculations are possible."
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> There is only one number, so no calculations are possible. -> No calculations are possible with only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> None - there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "23"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> None.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "23 + 2 = 25"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25 -> 23 / 2 = 11.5 (left: 11.5 25)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 13 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 6 = 17 (left: 6 17 23)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with the input of 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with just the number 23 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 - 2 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "23 + 2 = 25"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25 -> 23 * 2 = 46 (left: 46)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 11 12 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with just the number 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 17 23"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 6 = 17 (left: 6 17 23) -> 6 * 17 = 102 (left: 102 23)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> There is only one number, so no calculations are possible.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "23 + 2 = 25"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25 -> 23 / 2 = 11.5 (left: 11.5 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 10"
                }
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 - 13 = 10 (left: 6 10) -> 10 / 6 \u2248 1.67 (left: 1.67 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "23"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 - 2 = 21 (left: 2 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "23"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There is only one number, so no calculations are possible."
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23) -> There is only one number, so no calculations are possible. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 8"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 8"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2.33333333"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 / 6 = 2.33333333 (left: 2.33333333) -> There are no possible next steps with the input 2.33333333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "91"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 91 + 2 = 93",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 * 14 = 98 (left: 13 98)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 12 14"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 + 7 = 21 (left: 12 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 / 6 = 2.33333333 (left: 2.33333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps with the input 2.33333333 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 12 / 13 = 0.923076",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 12 14"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 / 7 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "91"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 91 - 1 = 90 (left: 90 1)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 12 14"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 2.33333333 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 14 / 6 = 2.33333333 (left: 2.33333333) -> There are no possible next steps with the input 2.33333333 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 2.33333333 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "20"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "91"
                }
            },
            "Step 8": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 9 + 1 = 10 (left: 10 1)",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.3333 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 / 6 = 1.3333 (left: 1.3333 10) -> 10 / 1.3333 = 7.4998 (left: 7.4998)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.3333 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 / 6 = 1.3333 (left: 1.3333 10) -> 10 - 1.3333 = 8.6667 (left: 8.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 - 10 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((12 - 2) + (6 + 8)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 8 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 / 6 = 1.3333 (left: 1.3333 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 2 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 4 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 4 = 1.5 (left: 1.5 13) -> 13 - 1.5 = 11.5 (left: 11.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 13 = 0.461538461",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 / 6 = 0.666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.33 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.3325"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 / 4 = 0.3325 (left: 0.3325) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the number 5 given the previous calculations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 4 = 1.5 (left: 1.5 13) -> 1.5 + 13 = 14.5 (left: 14.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.33 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 / 4 = 0.3325 (left: 0.3325)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 10 + 12 = 22 (left: 20 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 9"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> Possible next",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 9"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 + 5 = 9 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 12"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 12"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 + 7 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 2 4"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 - 2 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 * 1 = 3 (left:"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 3 * 1 = 3 (left: -> 3 - 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 * 1 = 3 (left:"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 3 * 1 = 3 (left: -> 1 * 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 2 4"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 3 * 1 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 - 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((4 + 5) - 6) * 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 - 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 5) * (6 - 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)"
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 60 + 12 = 72 (left: 13 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 25 + 60 = 85 (left: 85)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 6": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 25 - 60 = -35 (left: -35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 1"
                }
            },
            "Step 7": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1) -> 60 + 1 = 61 (left: 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "50 20"
                }
            },
            "Step 8": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 10 * 5 = 50 (left: 50 20 -> 50 - 20 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 10 * 5 = 50 (left: 50 20",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 6": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 25 + 60 = 85 (left: 85)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 7": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 25 - 60 = -35 (left: -35)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "50 20"
                }
            },
            "Step 8": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 10 * 5 = 50 (left: 50 20 -> Input: 6 3 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 12 * 5 = 60 (left: 60 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 1"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1) -> 60 / 1 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 6": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 60 - 25 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 7": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 60 - 25 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "50 20"
                }
            },
            "Step 8": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 10 * 5 = 50 (left: 50 20 -> 50 - 20 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 + 10 = 16 (left: 16 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 13"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12 13) -> 13 - 12 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 1"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1) -> 60 + 1 = 61",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 12 13) -> 4 + 12 = 16 (left: 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "25 60"
                }
            },
            "Step 7": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 25 / 60 = 0.4166666666666667 (left: 0.4166666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0.4166666666666667"
                }
            },
            "Step 8": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 25 / 60 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps with the input of 0.4166666666666667.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 12 13) -> 13 - 4 = 9 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 1"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1) -> 60 * 1 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 1"
                }
            },
            "Step 6": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1) -> 60 / 1 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 1"
                }
            },
            "Step 7": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 - 12 = 1 (left: 60 1) -> 60 / 1 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "50 20"
                }
            },
            "Step 8": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 + 12 = 25 (left: 25 60) -> 10 * 5 = 50 (left: 50 20 -> 50 * 20 = 1000 (left: 1000)",
                "Pruning": "NA"
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * 11) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (11 - (1 + 4)) = 24"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 / 9 = 0.5555555555555556 (left: 0.555555555555555",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 / 2 = 5 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 14"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14) -> 4 * 14 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 "
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (4 * 6) - (5 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 / 5 = 1.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 14"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 14"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 "
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 5 5 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n7 - 3 = 4 (left: 4 25)\n4 * 25 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 5) + (7 - 1)) =",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 "
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((5 * 4) - 3) * (6 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 14"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14) -> 4 + 14 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 "
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 8 "
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 6 7 8\nSteps:\n7 + 8 = 15 (left: 3 6 15)\n6 - 3 = 3 (left: 3 15)\n3 * 15 = 45 (left: 45)\n45 - 21 = 24\nAnswer: ((7 + 8) - (6 - 3)) * 15 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3 13"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 2 * 3 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> There are no possible next steps with the input 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 - 1 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 / 3 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 13 + 3 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> No possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> No possible next steps for the input 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 / 3 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> There are no possible next steps as there is only 1 number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 1 * 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> No possible next steps with the input 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> There are no possible next steps with the input of 16 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: -> 3 + 13 = 16 (left: 16) -> 16 - 2 = 14",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 / 0 = undefined (left: 0 6)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 / 0 = undefined (cannot divide by 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 + 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 is undefined (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0 6"
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 - 5 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 + 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 * 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 * 1 = 5 (left: 5) -> There is no possible next step with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8 14"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.5714285714285714 (left: 0.5714285714285714)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 - 5 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 7 / 2 = 3.5 (left: 1 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "-1 5"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1 5) -> -1 + 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "-1 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1 5) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 27"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1 5) -> 9 * 3 = 27 (left: 27 27) -> 27 * 27 = 729 (left: 729)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 11"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "27 27"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1 5) -> 9 * 3 = 27 (left: 27 27) -> 27 * 27 = 729 (left: 729)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 6 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 11"
                }
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.3 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17) -> 1.3 * 17 = 22.1 (left: 22.1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> Input: 3 5 2 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 / 17 = 0.411764705882 (left: 0.411764705882)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 - 10 = 3 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 23 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((12 + 5) - 10) + 13 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.3 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17) -> Input: 5 2 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.3 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17) -> 1.3 + 17 = 18.3 (left: 18.3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 10 = 7 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (12 + 5) + (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> It appears that there was no input provided. Could you please provide the numbers for the next steps calculation?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 - 2) * (6 * 4) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a list of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) * 4 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 27",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 / 10 = 1.2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> Input: 16 60 22 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (10 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 6 * (7 - 10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 + 13 = 13.8333 (left: 13.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / (12 - 6)) * 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 12) -> 7 + 4 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 120 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / (12 - 6)) * 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 22 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 / 13 = 0.0641 (left: 0.0641)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 6) * (6 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "64 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "64 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 + 40 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "64 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> Input: 8 40 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "64 40"
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "0 5 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "64 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "64 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "64 40"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "64 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "64 40"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "64 40"
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "0 5 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 8 40)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 40"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "64 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "64 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 8 40"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40) -> 40 / 8 = 5 (left: 0 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 8 40"
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40) -> 8 * 5 = 40 (left: 0 40)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "64 40"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 40"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "64 40"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "64 40"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "8 8 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "64 40"
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 / 40 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "0 5 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "64 40"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 + 40 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "64 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "64 40"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "64 40"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 + 40 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "64 40"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "64 40"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 + 40 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "64 40"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 40 / 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0 5 8"
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40) -> 40 / 8 = 5 (left: 0 5 8) -> 8 - 5 = 3 (left: 0 3)",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> Input: 36 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "8 128"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 8 + 128 = 136 (left: 8 136)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> Input: 32 16 3 192",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 - 11 = -2 (left: 7 -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 / 7 = 1.2857142857142858 (left: 1.285714285714285",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7 2"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 99"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99) -> 7 * 99 = 693 (left: 99 693)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 / 9 = 0.888... (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.5"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5) -> There are no possible next steps for the input 3.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7 2"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 - 9 = -2 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 99"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99) -> 7 / 99 = 0.0707 (left: 0.0707)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 2 * 1 = 2 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + (3 + 8)) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 6 * 12 = 72 (left: 2 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There are no possible next steps with the input of 18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 2 + 5 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None - this is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There is only one possible step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "18"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate on. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 12 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24 13"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 + 6 = 12.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 + 2 = 8.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.33333333334"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334) -> 3.33333333334 + 2 = 5.33333333334",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps with the input 6.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps for the input 6.66666666667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 * 2 = 13.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps for the input 6.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.33333333334"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334) -> 3.33333333334 + 3.33333333334 = 6.66666666668",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 + 2 = 8.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.33333333334"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334) -> 3.33333333334 - 2 = 1.33333333334 (left: 1.33333333334)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps for the input 6.66666666667."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps for the input 6.66666666667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 * 2 = 13.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 6.66666666667."
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps for the input 6.66666666667. -> There are no possible next steps for the input 6.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.33333333334"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334) -> None, since there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 - 80 = -68 (left: -68)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.333333333335",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 * 2 = 13.3333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.33333333334"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 2 = 3.33333333334 (left: 3.33333333334) -> There is only 1 number given, so there are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 - 8 = 6 (left: 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 - 8 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 3 + 8 = 11 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (3 * 1) + (8 + 13) = 24"
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 4 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 9 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)"
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 / 3 = 4.33 (left: 1 4.33)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 / 10 = 0.6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 ^ 2 = 100 (left: 100)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 - 7 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 9 + 11 = 20 (left: 13 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 4"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There is only one number, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 * 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 9 + 10 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 4"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 24"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 9 / 24 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "36 + 8 = 44"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 / 9 = 1.22 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 4"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "36 + 8 = 44"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 / 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 5": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 4"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any of the other numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 9 + 10 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 13"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 / 9 = 1.44 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 24"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 24 / 9 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.8"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 11 = 66 (left: 4 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 11"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 * 8 = 168 (left: 8 168)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 / 11 = 2.181818181818182 (left: 2.181818181818182)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 11"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 8 = 17 (left: 17)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 2 * 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 10 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10  -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (13 - 9) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (9 - (13 - 10)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (9 - (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (9 - (13 - 10)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 9 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (9 - (13 - 10)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (10 - 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (9 - (13 - 10)) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 - 7 = 0 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 2 * 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 10 + 5 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 5 - 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 * 7 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10.5"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 * 7 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 + 7 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)  ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> Possible next steps: -> There are no further possible next steps with the current numbers provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 2 * 4 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 - 5 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> Input: 10 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 7"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)   -> 2 * 7 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 3.5 + 7 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 5"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10.5"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 * 7 = 10.5 (left: 10.5) -> There are no possible next steps for the input 10.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 7 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 7"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 / 1.5 = 4.66666666667 (left: 4.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10.5"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 * 7 = 10.5 (left: 10.5) -> There are no possible next steps for the input 10.5.",
                "Pruning": null
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "2 8 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> Input: 4 10 16 6 8 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67 (left: -0.67 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 * 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.8"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 8 = 9.33 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 * 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 48 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 12 / 1 = 12 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "48 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "48 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "48 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "48 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 - 12 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "48 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "48 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "48 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "48 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "48 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "48 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "48 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "48 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "48 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "48 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "48 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 48 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "48 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "48 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "48 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "48 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 12 / 48 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "48 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "48 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 1 48 12) -> 48 / 1 = 48 (left: 48 12) -> 48 * 12 = 576 (left: 576)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 + 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 + 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 + 8 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 6 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 - 1.2 = 4.8 (left: 4.8 8",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((5 * 6) - 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((5 * 6) - 6) * 8 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 6 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 3 + 6 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((5 * 6) - 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - 6 + 8 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 - 6 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (5 * 6) - (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 88 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 / 4 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 + 2 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14) -> 14 - 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 4 + 7 = 11 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24 28)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 19 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 4 + 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 4"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 / 4 = 2 (left: 2 4) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 * 8 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 8 / 1 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 / 4 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 4"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 / 4 = 2 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24 28"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24 28) -> 24 - 28 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 / 14 = 0.57 (left: 0.57 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 19 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 8 - 1 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 28 / 8 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 7 * 4 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 3 + 9 = 12 (left: 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.33 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 / 3 = 2.33 (left: 2.33 10) -> 2.33 * 10 = 23.3 (left: 10 23.3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 23.3"
                }
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 / 3 = 2.33 (left: 2.33 10) -> 2.33 * 10 = 23.3 (left: 10 23.3) -> 10 * 23.3 = 233 (left: 233)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 10"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 12.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 / 3 = 2.33 (left: 2.33 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 10 - 3 = 7 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> Input: 5 7 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 23.3"
                }
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 / 3 = 2.33 (left: 2.33 10) -> 2.33 * 10 = 23.3 (left: 10 23.3) -> 10 + 23.3 = 33.3 (left: 33.3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "10 12.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 1 21 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 21 10"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 1 21 10) -> 1 + 21 = 22 (left: 10 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 23.3"
                }
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 / 3 = 2.33 (left: 2.33 10) -> 2.33 * 10 = 23.3 (left: 10 23.3) -> 10 - 23.3 = -13.3 (left: -13.3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12.5"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 * 12.5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 12.5"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "10 12.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 * 3 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 4 - 10 = -6 (left: -6 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 21 10"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 1 21 10) -> 21 - 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "10 12.5"
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 6 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 / 0 = undefined (left: 6)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 / 0 = undefined (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 6"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 - 6 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 / 0 is undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 / 0 = undefined (cannot divide by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 *"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 is undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 6 + 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> Input: 1 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 5 10 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 + 1 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 10 15"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 15 - 7 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 5 / 3 = 1.666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5 / 3 = 1.666666666"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 5 / 3 = 1.666666666 -> 5 * 3 = 15 (left: 15 1.666666666)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 + 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 10 15"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 + 15 = 25 (left: 7 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 13 16"
                }
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 / 13 \u2248 0.4615 (left: 0.4615)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 156"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156) -> Possible next steps: -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 13 16"
                }
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 13 - 10 = 3 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 156"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156) -> 14 / 156 = 0.08974359 (left: 0.08974359)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2184"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 * 182 = 2184 (left: 2184) -> 4 * 8 = 32 (left: 3 32)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 156"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156) -> 14 - 156 = -142 (left: -142)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 156"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156) -> 14 / 156 = 0.08974359 (left: 0.08974359)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 2 * 5 = 10 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4615"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 / 13 \u2248 0.4615 (left: 0.4615) -> 0.4615 * 2 = 0.923 (left: 0.923)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 2 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 14 - 12 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 13 16"
                }
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 16 130)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 156"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156) -> 156 / 14 = 11.14 (left: 11.14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 / 13 = 0.46 (left: 0.46)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 182"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 * 182 = 2184 (left: 2184)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.46"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 / 13 = 0.46 (left: 0.46) -> 0.46 + 2 = 2.46",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 * 13 = 156 (left: 14 156)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 12 / 13 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2184"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 * 182 = 2184 (left: 2184) -> 1 * 8 = 8 (left: 8 8 4)",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 36"
                }
            },
            "Step 6": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 12 36"
                }
            },
            "Step 7": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 - 12 = 0 (left: 0 12 36) -> 12 / 0 is not possible as dividing by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 36"
                }
            },
            "Step 8": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "1 36"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 36"
                }
            },
            "Step 6": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 36 / 12 = 3 (left: 12 3 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 7": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 36"
                }
            },
            "Step 8": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "1 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8 12"
                }
            },
            "Step 6": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "12 12 36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12 36"
                }
            },
            "Step 7": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 - 12 = 0 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 36"
                }
            },
            "Step 8": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "1 36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 36"
                }
            },
            "Step 6": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 - 12 = 0 (left: 0 12 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12 36"
                }
            },
            "Step 7": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 12 36"
                }
            },
            "Step 8": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 9 / 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 2 5  -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 6": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12 36"
                }
            },
            "Step 7": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 36 - 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 36"
                }
            },
            "Step 8": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 12 36) -> 12 / 12 = 1 (left: 1 12 36) -> 12 * 3 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "1 36"
                }
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 24 0)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> Input: 1 1 2 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 24 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 + 1 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 6 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 + 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 - 0 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 24"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "0 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 24"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 24"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 / 0 = undefined (left: 0 24)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 - 27 = 0 (left: 3 0)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 16 / 4 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 0"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 11 + 5 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 3 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 5 + 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 0"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 11 * 5 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 27"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 27"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 3 + 8 = 11 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 0"
                }
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 12 = 36 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 48 = 60 (left: 8 60)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> 4 * 4 * 1 = 16 (left: 16 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There are no possible next steps with the input of 144.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 - 48 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> 14 * 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "144"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 12 = 36 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 / 48 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 - 48 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 * 96 = 4608 (left: 4608)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> 1 * 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 6 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There are no possible next steps for the number 144 as it is already a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There is only one number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 - 1.3333 = 6.6667 (left: 6.6667 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 / 8 = 1.5 (left: 1.5 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 / 48 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "48 96"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 12 = "
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 =  -> 48 / 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 + 48 = 144 (left: 144) -> There is only one possible next step: 12 * 12 = 144.",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8 99"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99) -> 8 - 99 = -91 (left: -91)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "8 99"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8 99"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99) -> 8 + 99 = 107 (left: 107)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) ->  -> There are no more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8 99"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99) -> 8 + 99 = 107 (left: 107)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "8 99"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8 99"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99) -> 8 * 99 = 792 (left: 792)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 * 42 = 84 (left: 11 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 8 / 18 = 0.4444 (left: 0.4444",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 2 6 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 + 18 = 24 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 + 18 = 24 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 + 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> There are no possible next steps with the input of 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 / 2 = 18 (left: 2)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 - 2 = 40 (left: 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 2 * 18 = 36 (left: 36) -> There is only 1 number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 / 12 = 1.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14 14"
                }
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14 14) -> 14 / 14 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 * 12 = 144 (left: 14 144)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 - 14 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "14 15"
                }
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 + 2 = 15 (left: 13 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14 14"
                }
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14 14) -> 14 + 14 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 + 12 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "15"
                }
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 / 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 2 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 / 5 = 2.4 (left: 1 2.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 1 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> No possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 1 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 * 4) - 5) * 6 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6 + 3) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6 + 8) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * ((8 - 5) * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) - (5 - 6) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4 - 5) * 6 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 * 4) - 5) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 6 / 5 = 1.2 (left: 1.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 * 4) - 5) * 6 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) - (5 - 6) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6 + 8) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 * 4) - 5) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6 + 8) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 * 4) - 5) * 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 - 6 + 3) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (5 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 10"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 128"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 8 + 128 = 136 (left: 136)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "16 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> Input: 4 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 4 + 6 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 8 - 16 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 4 + 6 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "16 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 128"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 16 128)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "16 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 10"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 128"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 128 - 8 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "16 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16 128"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 16 128) -> 128 / 16 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "16 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 2 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> Input: 4 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "16 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "16 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "16 128"
                }
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 3 "
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 * 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n5 * 2 = 10 (left: 3 10 10)\n10 - 3 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\nAnswer: ((5 * 2) - 3) * 10 = 70",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 1.5 = 24 (left: 24)\nAnswer: ((6 * 3) / (9 - 7)) * 1.5 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n12 + 8 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 5) * 2) + 4 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: ((3 * 4) * 2) * 6 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Great job! You were able to find different ways to get the number 24 using the given numbers and basic arithmetic operations. Keep up the good work!",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n5 + 3 = 8 (left: 8 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 7) + (5 + 3)) - 8 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 8\nSteps:\n4 * 8 = 32 (left: 2 3 32)\n3 + 2 = 5 (left: 5 32)\n5 * 32 = 160 (left: 160)\nAnswer: (3 + 2) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n5 * 3 = 15 (left: 2 7 15)\n15 - 7 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 * 3) - 7) * 2 + 8 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 12 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 3) - (12 /",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24\nAnswer: (((2 * 3) + 8) + 6) + 4 = 24.",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 + 2 = 12 (left: 12)\n12 * 2 = 24\nAnswer: ((6 * 3) - 8) + 2 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Great job! All solutions are correct. Well done!",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 7 8 9\nSteps:\n6 * 7 = 42 (left: 8 9 42)\n9 - 8 = 1 (left: 1 42)\n1 * 42 = 42 (left: 42)\nAnswer: (6 * 7) - (9 - 8) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Great job with the calculations! You were able to obtain 24 using the given numbers and arithmetic operations. Keep up the good work!",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 5 5\nSteps:\n5 * 5 = 25 (left: 2 3 25)\n25 - 3 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\nAnswer: ((5 * 5) - 3) / 2 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given inputs have been used to obtain the number 24 using basic arithmetic operations.",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 6\nSteps:\n6 * 3 = 18 (left: 2 6 18)\n18 - 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 * 3) - (6 - 2) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 * 24 = 24 (left: 24)\nAnswer: ((2 * 6) * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n35 - 11 = 24 (left: 24)\nAnswer: ((6 * 6) / 6) + (36 - 11) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((3 + 7) * 2) * 10 / 4 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given sequences have been used to obtain the desired result of 24.",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n5 * 2 = 10 (left: 3 10 10)\n10 * 3 = 30 (left: 30 10)\n30 - 10 = 20 (left: 20)\nAnswer: ((5 * 2) * 10) - 10 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Great job! You were able to find multiple ways to obtain the number 24 using the given numbers and basic arithmetic operations. Keep up the good work!",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 6 11"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 9"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 9"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 8) ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 9"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 4 11"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 4 11) -> 12 / 4 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There is only one possible next step: 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 2 24 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 9"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 - 2 = 16 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There is only one possible next step: 18."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the number 18 alone.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 4 11"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 4 11) -> 4 + 11 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "18"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "There are no possible next steps with the input of 18."
                }
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 - 9 = 23 (left: 23) -> 23 - 2 = 21 (left: 2 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "23"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 - 9 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 21"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 1"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 - 1 = 5 (left: 5)  ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 1 * 6 = 6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> There are no possible next steps for the input 10 as it is the final result.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 / 9 = 3.55555555556 (left: 3.55555555556)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 2 - 8 + 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 1"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 1"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "23"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 - 9 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 21"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 - 9 = 23 (left: 23) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6 + 1 = 7"
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 + 1 = 7 -> 1 * 6 = 6 (left: 6 6 7)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 - 9 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 + 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 -1"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 6 - 7 = -1 (left: 5 -1) -> 5 + (-1) = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11 7"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 7 + 1 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 6 - 7 = -1 (left: 5 -1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 5 + 7 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 11"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 10 * 2 = 20 (left: 20 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "20 20"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 10 * 2 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "2 10 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 + 11 = 21 (left: 21 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 9 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 20 / 2 = 10 (left: 2 10 20)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "20 20"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 10 * 2 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "20 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Input: 3 6 12 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 3": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 20 - 10 = 10 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "20 20"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 10 * 2 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "20 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 10 - 2 = 8 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "20 20"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 10 * 2 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "20 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Input: 21 17 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 3": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> 8 * 11 = 88 (left: 88 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 11"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 2 + 10 = 12 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 10 20"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 10 / 5 = 2 (left: 2 10 20 -> 20 / 2 = 10 (left: 2 10 20) -> 2 + 10 = 12 (left: 12 20)",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "-3 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12) -> 12 - (-3) = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 * 9 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.125"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 + 1 = 2.125 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 5"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 8 + 4 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 3 * 3 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 + 12 = 21 (left: 16 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "-3 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12) -> 12 / -3 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 5"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 1 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 4 * 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 4 * 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 9 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.6666666666666666 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6) -> 6 / 0.6666666666666666 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 1 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 - 1 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 9 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.6666666666666666 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6) -> 6 / 0.6666666666666666 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 1 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 1 * 4 = 4 (left: 4 6) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 4 * 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 + 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 1 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 4 * 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 9 27"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 1 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 4 * 1 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 10 * 5 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 6 = 1 (left: 4 1 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 9 27"
                }
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 10 - 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 + 2 = 4.666666666666666 (left: 4.666666666666666)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2.6666666666666665"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the input 2.6666666666666665 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2.66667"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667) -> There are no possible next steps for the input 2.66667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the input 2.6666666666666665 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2.6666666666666665"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step for the input 2.6666666666666665:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 8 / 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the input 2.6666666666666665 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the input 2.6666666666666665 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps with the input 2.6666666666666665.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 * 2 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the input 2.6666666666666665."
                }
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 8 13"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 8 - 7 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 8 = 32 (left: 11 13 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909090909090",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (13 - 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.18 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 - 1.18 = 10.82 (left: 10.82)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.18 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24"
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36/2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No further steps can be taken with just the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with only the number 36 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None, since there is only one number (36) provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps for the input 36 since it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 9 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1415947,
        "output_tokens": 484383.75555555685,
        "total_cost": 1.4345491333333351
    }
}