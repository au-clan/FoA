{
    "0": {
        "puzzle": "1 1 4 6",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 * 1) * (4 * 6) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 1 5 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 1 * (1 * 4 * 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 + 5 = 6 (left: 6 6)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "1 * 1 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)"
            }
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 11 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 11 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5.5 11 11"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11 11) -> 11 / 5.5 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 11 11"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 11 11"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> Input: 4 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 11 11"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 9 + 11 = 20 (left: 11 11 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 1 11 10) -> 11 - 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 0 11"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11) -> 9 - 0 = 9 (left: 9 11)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 11"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11) -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 1 11 10) -> 11 - 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 0 11"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11) -> 11 / 9 = 1.2222 (left: 1.2222 11)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 1 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 1 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 9 - 3 = 6 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5.5 11 11"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10 11"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 1 10 11) -> 10 - 1 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 0 11"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11) -> 9 + 0 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 1 11 10) -> 11 - 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 0 11"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11) -> 9 + 0 = 9 (left: 9 11)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 1 11 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 11 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 10 11"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 1 10 11) -> 1 * 10 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5.5 11 11"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11 11) -> 5.5 + 11 = 16.5 (left: 11 16.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 11 "
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 1 11 10) -> 11 - 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 0 11"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11) -> 9 + 0 = 9 (left: 9 11)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 - 1 = 0 (left: 0 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 1 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 / 2 = 5.5 (left: 5.5 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 11 11"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 11 11"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 1 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 11 10"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 1 11 10) -> 11 - 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 1 11 10) -> 11 - 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 0 11"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 11 11) -> 11 - 2 = 9 (left: 9 11 11) -> 11 - 11 = 0 (left: 9 0 11) -> 9 - 0 = 9 (left: 9 11)",
                "Pruning": null
            }
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 1": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 - 3 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 3 + 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 + 8 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 8 * 1 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 9": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 1) * (3 * 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 1 = 4 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 3 8"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 / 1 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 4": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 8 * 1 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 7": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 8": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 + 8 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 9": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 1) * (3 * 8) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 / 1 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 8 - 3 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 8 - 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 / 1 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 9": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 * 1) + 3) * 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 1": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 4 * 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 3 8"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 3 + 1 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 8 * 1 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 + 8 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 7": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 8": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 + 8 = 11 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 9": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 1) * (3 * 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 1 = 4 (left: 4 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 1": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2"
                }
            },
            "Step 2": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 / 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 3 8"
                }
            },
            "Step 3": {
                "Step": "1 * 1 = 1 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 5": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 + 8 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 / 1 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 + 8 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 9": {
                "Step": "1 * 1 = 1 (left: 1 3 8) -> 3 / 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 * 1) * (3 * 8) = 24"
            }
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 1 / 8 = 0.125 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 * 2 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 8 / 2 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> Input: 10 5 "
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 1 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1 8"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 1 + 8 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 4 + 7 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 2) * 8 = 24"
            }
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 6 = 0 (left: 0 6 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 36"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((6 + 6) + (6 + 6)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 6 6 1 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 36"
                }
            },
            "Step 1": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> Input: 2 3 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 36"
                }
            },
            "Step 2": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 - 6 = 0 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 6 6 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 6 = 0 (left: 0 6 6) -> 4 + 5 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 36"
                }
            },
            "Step 2": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 / 6 = 1 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 36"
                }
            },
            "Step 3": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 + 6 = 12 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 6 = 0 (left: 0 6 6) -> 6 - 0 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> 6 / 6 = 1 (left: 1 36) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 0 6 6)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 2 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 3": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 6"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 2 12"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 - 2 = 10 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 5": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 12 - 1 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 4": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 6"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 - 2 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 2 12"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "1 * 1 = 1 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 4 * 6 = 24 (left: 1 24) -> 24 * 1 = 24 (left: 24) -> Answer: ((1 * 2) * 2) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 4 * 6 = 24 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 4 * 6 = 24 (left: 1 24) -> 24 * 1 = 24 (left: 24) -> Answer: ((1 * 2) * 2) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 4 * 6 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 6"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> 1 + 2 = 3 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> Input: 3 9 2 5"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> 3 / 2 = 1.5 (left: 1",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 2 3 6) -> Input: 1 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> Input: 3 9 12 15"
            }
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 10 12"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 2 * 1 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 / 2 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 1 11 12) -> 11 / 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 2 * 1 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 * 2 = 20 (left: 2 20 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 2 * 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 * 10) + (12 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 1 1 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 1 11 12) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((1 + 1) + 10) + 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 10 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 2 * 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 1 2 12) -> 2 * 1 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 * 10) + (12 - 2) = 24"
            }
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 10 10"
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 / 10 = 1.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "6 6 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 10 + 15 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9 / 3 ="
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 10 10"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.1",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9 / 3 ="
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 9 / 3 =",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 / 10 = 1.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9 / 3 ="
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 10 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9 / 3 ="
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9 / 3 ="
                }
            }
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 1 1 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 1 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 1 12"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 12) -> 2 + 1 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 12) -> 2 + 1 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 1 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 + 1 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 + 1 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> There are no possible next steps with just the input of 25."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 1 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 + 1 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 1 12"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 1 12) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24) -> Answer: (1 + 1) * 12 / 1 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 1 12"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 1 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 1 12"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 1 12) -> 12 * 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 1 12"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 12) -> 1 + 12 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 1 * 2 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 1 1 12"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 24"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 24 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)"
            }
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "Cost": {
        "input_tokens": 134705,
        "output_tokens": 46083.0,
        "total_cost": 0.13647700000000001
    }
}