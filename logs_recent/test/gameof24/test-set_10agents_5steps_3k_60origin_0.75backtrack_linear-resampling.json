{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number. -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.66667 (left: 16.66667)\nAnswer: (3 + 7) * (5 * 10 / 3) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 8) + 3) + 3 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n7 + 8 = 15 (left: 15 18)\n15 + 18 = 33 (left: 33)\nAnswer: ((6 * 3) + (7 + 8)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 * 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / (16 -",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6) -> There are no possible next steps with the input 0.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 6\nSteps:\n3 + 6 = 9 (left: 3 9 6)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (3 + 6) * (3 - 6 + 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 5 = 30 (left: 4 10 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 - 6 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 - 6 = 3 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0) -> There are no possible next steps since there is no input given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 - 8 = 1"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9) -> 9 - 8 = 1 -> 8 + 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "49 + 2 = 51"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49) -> 49 + 2 = 51 -> 2 + 51 = 53 (left: 49 53)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 - 8 = 1"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9) -> 9 - 8 = 1 -> 9 * 8 = 72 (left: 72 = 1)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9) -> 9 - 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49) -> 49 + 2 = 51",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 - 8 = 1"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 - 8 = 1"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps as there are no numbers to operate on."
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps as there are no numbers to operate on.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 2 = 6 (left: 1 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 - 8 = 1"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9) -> 9 - 8 = 1 -> 9 / 8 = 1.125 (left: 1.125 1)",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 2 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.8181818181818182 + 2 = 2.8181818181818183"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19) -> 19 / 7 = 2.71 (left: 2.71)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19) -> 19 / 7 = 2.71 (left: 2.71) -> There is only one number given, so there are no possible next steps as there is no operation to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of -4."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None. The input is complete.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4) -> 7 * 4 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4) -> 7 * 4 = 28 (left: 28) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 / 2 = 11 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps as there is no operation to perform."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 + 2 = 2.8181818181818183",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> None. The input only has one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 2 * 1 + 1 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 - 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps as there is no operation to perform."
                }
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (approximated) (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (approximated) (left: 1.67) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> Input: 10 5 2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 54 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 * 16 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 0 * 54 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9) -> 9 + 1.3333 = 10.3333 (left: 10.3333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 54 / 54 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 (left: 3.25)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 54 - 0 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 4 / 1.3333 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 4 / 1.3333 = 3 (left: 3 13) -> 13 + 3 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 10 + 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 12 - 4 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 12 - 4 = 8 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 54 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 54 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 0 + 54 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 27 / 3 = 9 (left: ",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 54"
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no more possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left:  -> There are no more possible next steps. -> Input needed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 * 4 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps? -> I'm sorry, but without the numbers for calculations, it is not possible to provide specific next steps. Please provide the missing numbers so we can assist you further.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no more possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left:  -> There are no more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6) -> There are no possible next steps with the input 1.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 * 4 = 240 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left:  -> There are no more possible next steps.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no more possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left:  -> There are no more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733 -> 3.733 - 3 = 0.733",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 4": {
                "Step": "1 * 11 = 11 (left: 11 11  -> 11 / 11 = 1 (left: 1) -> There are no possible next steps with just one number given. -> Please provide at least two numbers to continue with the calculation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13 -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "11 / 2 is not possible as it doesn't result in a whole number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 / 18 = 0.72 (left: 0.72)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 + 14 = 28"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28 -> 28 - 14 = 14 (left: 14 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091) -> 11.909091 * 11 = 131 (left: 131)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 + 14 = 28"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28 -> 14 / 14 = 1 (left: 28 1)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 11 2"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 4": {
                "Step": "1 * 11 = 11 (left: 11 11  -> 11 / 11 = 1 (left: 1) -> There are no possible next steps with just one number given. -> Please provide more numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13) -> There are no possible next steps with the number 13. -> 13 + 1 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "14 + 14 = 28"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28 -> 14 - 14 = 0 (left: 0 28)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps with the input of 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13 -> 2 - 11 = -9 (left: -9 13)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "1 * 11 = 11 (left: 11 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 11 = 11 (left: 11 11  -> 11 / 11 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 11 = 11 (left: 11 11  -> 11 / 11 = 1 (left: 1) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 / 2 is not possible as it doesn't result in a whole number."
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11. -> 11 / 2 is not possible as it doesn't result in a whole number. -> 11 - 2 = 9 (left: 2 8 9)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11. -> 11 / 2 is not possible as it doesn't result in a whole number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "13 14"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14) -> 13 * 14 = 182 (left: 182)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "14 + 14 = 28"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 / 2 is not possible as it doesn't result in a whole number."
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11. -> 11 / 2 is not possible as it doesn't result in a whole number. -> 9 * 3 = 27",
                "Pruning": null
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.7272727272727273 + 2 = 3.7272727272727275"
                }
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19) -> 19 / 11 = 1.7272727272727273 (left: 1.7272727272727273) -> 1.7272727272727273 + 2 = 3.7272727272727275 -> 2 + 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80. -> 80 / 2 = 40 (left: 40)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.7272727272727273 + 2 = 3.7272727272727275"
                }
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19) -> 19 / 11 = 1.7272727272727273 (left: 1.7272727272727273) -> 1.7272727272727273 + 2 = 3.7272727272727275 -> 1.7272727272727273 * 2 = 3.4545454545454546 (left: 3.4545454545454546 3.7272727272727275)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> There are no possible next steps with just one number given. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19) -> 19 / 11 = 1.7272727272727273 (left: 1.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19) -> 19 / 11 = 1.7272727272727273 (left: 1.7272727272727273) -> 1.7272727272727273 + 2 = 3.7272727272727275",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1) -> 8 / -1 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1) -> 8 / -1 = -8 (left: -8) -> -8 - 2 = -10 (left: -10)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.7272727272727273 + 2 = 3.7272727272727275"
                }
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19) -> 19 / 11 = 1.7272727272727273 (left: 1.7272727272727273) -> 1.7272727272727273 + 2 = 3.7272727272727275 -> 1.7272727272727273 * 2 = 3.4545454545454546 (left: 3.4545454545454546)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 / 10 = 1.1"
                }
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 10 =  -> 11 / 10 = 1.1 -> 11 * 10 = 110",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 1 = 10 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99) -> 8 - 99 = -91 (left: -91)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 * 1 = 10 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 10 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 10 =  -> 11 / 10 = 1.1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> There are no possible next steps with just one number given. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 3) ->  -> It seems like the input was not provided. Please provide the numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There are no possible next steps for 75 with only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> 75 * 2 = 150 (left: 2 150)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There are no possible next steps with the input 75.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 4 * 9 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> 75 - 2 = 73",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 3.5 + 7 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 3.5 + 7 = 10.5 (left: 10.5) -> 10.5 * 8 = 84 (left: 8 84)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> 75 / 2 = 37.5",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6 9) -> 6 * 2 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 6 9) -> 6 * 2 = 12 (left: 12 9) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There are no possible next steps for the input 75 as it is a single number and cannot be combined with any of the other numbers.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6) -> 1.8 * 6 = 10.8 (left: 10.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6) -> 1.8 * 6 = 10.8 (left: 10.8) -> 10 / 8 = 1.25 (left: 1.25 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There are no possible next steps with just one number (75).",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 6 3) -> 6 - 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 2 6 3) -> 6 - 2 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There is only one number given (75), so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> 75 + 2 = 77 ",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> Input: 5 10 15 -> 10 / 5 = 2 (left: 2 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> Input: 5 10 15 -> 10 / 5 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "75"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There is only one number, so there are no possible next steps. The input number is the final result.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8) -> 15 - 8 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 7"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7 -> 10 - 3 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps without an input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "56"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 * 14 = 56 (left: 56) -> 56 / 2 = 28",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7 -> 10 - 3 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> There are no possible next steps without an input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8) -> 15 - 8 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4) -> 4 * 4 = 16 (left: 16) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 / 9 = 0.8888888889 (left: 0.8888888889)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 / 9 = 0.8888888889 (left: 0.8888888889) -> 0.8888888889 * 2 = 1.777777778 (left: 1.777777778)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "56"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 * 14 = 56 (left: 56) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide a set of numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4.67 (left: 1 4.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4.67 (left: 1 4.67) -> 1 - 4.67 = -3.67 (left: -3.67 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4.67 (left: 1 4.67) -> 1 - 4.67 = -3.67 (left: -3.67 1) -> -3.67 - 1 = -4.67 (left: -4.67)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 * 14 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 7"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7 -> 10 - 3 = 7 (left: 7 7) -> 7 + 7 = 14",
                "Pruning": null
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "15 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with the input 18."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / 12)",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> No possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15) -> 15 / 3 = 5 (left: 5)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with the input 18."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18. -> There are no possible next steps as there are no numbers provided to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to operate on."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 9 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 27 / 3 =",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Input: 5 20 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Input: 5 20 20 -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to operate on."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 5) - 6) * 4 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)  -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to operate on."
                }
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777) -> 1.7777777777777777 * 2 = 3.5555555555555554",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.8"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> 1 + 8 = 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 4 + 26 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 4 + 26 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step: 30 + 2 = 32"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 4 + 26 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3 -> 5 * 3 = 15 (left: 15)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "50.4"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4) -> There is only one number, so no possible operations can be done.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> There are no more possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "50.4"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4) -> There are no valid operations that can be performed with the number 50.4 to reach the target numbers 2, 8, and 14.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 12 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "50.4"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4) -> There are no possible next steps with just one number provided. More numbers are needed to perform operations.",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "16 64"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 + 64 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5 as there are no valid operations that can be performed on the existing numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 64"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 64"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "16 64"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 64 / 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 64"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 64"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33) -> 10.33 * 8 = 82.64 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps for the input 2.6 as it is a single number and not an operation with multiple operands.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 64"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13) -> 13 - 2.66666666667 = 10.33333333333 (left: 10.33333333333 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13) -> 13 - 2.66666666667 = 10.33333333333 (left: 10.33333333333 13) -> 13 - 10.33333333333 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 64"
                }
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 - 6 = -4.8 (left: -4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 - 6 = -4.8 (left: -4.8) -> -4.8 + 2 = -2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There are no further possible next steps with the input 3.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 6 * 1.5 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 6 * 1.5 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 6 * 1.5 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 * 3 = 4.5 (left: 4.5 9",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 9 / 2 = 4.5 (left: 6 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 9 / 2 = 4.5 (left: 6 4.5) -> 6 - 4.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 3 9) -> Input: 4 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 3 9) -> Input: 4 5 -> 4 * 5 = 20 (left: 20)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 2 + 6 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 2 + 6 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 4 + 10 = 14 (left: 14 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 - 9 = -1 (left: 9)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 * 16 =",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2) -> End of input. No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 - 16 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform an operation.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 121 / 1 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 * 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 / 10 = 0.6 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 / 10 = 0.6 ( -> 6 - 10 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input -4."
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps for the input -4. -> There are no possible next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps for the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "27 27"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27) -> 27 - 27 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input -4."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 27"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 16 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 16 11) -> 16 + 11 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "27 27"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27) -> 27 * 27 = 729 (left: 729)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There is only one possible next step for the input 17:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "121"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 121 / 1 = 121 (left: 121) -> 1 + 2 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input -4."
                }
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the input of 4."
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you? -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.7777777777777778 * 2 = 1.555555555555556"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556 -> 0.7777777777777778 /",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.7777777777777778 * 2 = 1.555555555555556"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556 -> ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": "NA",
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the input of 4."
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.7777777777777778 * 2 = 1.555555555555556"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556 -> ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 4 = 2.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 4 = 2. -> 11 * 4 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 5"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 2 + 3 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input of 4."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 2 + 3 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.7777777777777778 * 2 = 1.555555555555556"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556 -> 0.7777777777777778 + 2 = 2.777777777777778",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 4 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the input of 4."
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 - 1 = 8 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.7777777777777778 * 2 = 1.555555555555556"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556 -> 0.7777777777777778 - 2 = -1.2222222222222222 (left: -1.2222222222222222 * 2 = -2.4444444444444444)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "44"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 4 = 2. -> 11 * 4 = 44 (left: 44) -> 44 / 2 = 22",
                "Pruning": null
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 36)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 8 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 - 5 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 - 5 = 3 (left: 2 3) -> 3 / 2 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 * 8 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "19 + 2 = 21 "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 13."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5/5 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5/5 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> There are no possible next steps with just the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 + 2 = 21 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.9523809523809523 - 0.9523809523809523 = "
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 1 20 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list. -> N/A",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 13."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 4 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523) -> 0.9523809523809523 - 0.9523809523809523 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400) -> 400 * 2 = 800 (left: 800)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12 -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 9"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9) -> 9 + 18 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 4 = 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 + 4 = 5"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5 -> 5",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5 -> 10 + 2 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 + 4 = 5"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5 -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 + 4 = 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 9"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9) -> 18 - 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 + 4 = 5"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5 -> 4 - 1 = 3 (left: 3 5)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14) -> 14 * 14 = 196 (left: 196)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14) -> 14 * 14 = 196 (left: 196) -> 19 * 6 = 114 (left: 114)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 9"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9) -> 18 * 9 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 4 = 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 + 4 = 12"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12 -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 + 4 = 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38) -> 8 / 3 = 2 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 9"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9) -> 18 - 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 + 4 = 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 9"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 4 = 5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 12 / 2 = 6 (left: 6 12) -> 12 + 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 + 4 = 12"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12 -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number in the input, so no operations can be performed."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number in the input, so no operations can be performed. -> Please provide at least two numbers in the input to perform operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63) -> 6 + 63 = 69 (left: 69)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1) -> There is only one number given, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 2 * 8 = 18 (left: 8 18 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number in the input, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 * 3 = 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 =  -> 4 * 3 = 12 -> 4 / 3 = 1.33 (left: 1.33 = 12)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 * 3 = 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 =  -> 4 * 3 = 12 -> 4 * 3 = 12 (left: 12 = 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number in the input, so no operations can be performed."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number in the input, so no operations can be performed. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 =  -> 4 * 3 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 * 3 = 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 =  -> 4 * 3 = 12 -> 3 - 4",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 * 3 = 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 =  -> 4 * 3 = 12 -> 12 + 4 = 16 (left: 3 4 16)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 7 * 15 = 105 (left: 105) -> 105 - 2 = 103 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 - 3 - 0 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 5.6 2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 + 3 + 0 = 9 (left: 9 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59 * 2 = 114)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 5 + 8 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 * 2 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32) -> 32 * 2 = 64 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 * 2 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> There are no possible next steps with the input 57.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 - 2 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 / 2 = 28.5 (left: 28.5 2 114)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: 1 5 22)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 572 + 5 = 577 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 / 1 = 5 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 * 2 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 6 + 7 = 13 (left: 5 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65) -> 6 + 5 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Possible next steps",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 6 + 7 = 13 (left: 5 8 13) -> Possible",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12 -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 7 - 7 = 0 (left: 0 12) -> 12 / 0 is undefined (left: 0 12)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 / 2 = 15 (left: 7 13 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 / 2 = 15 (left: 7 13 15) -> 15 - 7 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17) -> 17 - 2 = 15 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 3)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 7 - 7 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 7 3)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 7 3)",
                "Pruning": null
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> 40 * 2 = 80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 64 / 4 =",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 5 8 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 10 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 - 10 = -2 (left: -2 10 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 - 10 = -2 (left: -2 10 25) -> -2 * 10 = -20 (left: -20 25)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 3 - 5 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 3 - 5 = -2 (left: -2) -> Sorry, I made an error. Let me correct it.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 5 8 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                }
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA",
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> 5 * 10 = 50 (left: 50 15 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 16 - 12 = 4 (left: 4) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 divided by 2 = 7.5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "No possible next steps with only one number."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number. -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 16 - 12 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> Please enter a set of numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5 -> 9 / 3 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5 -> 9 / 3 = 3 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> 10 / 2 = 5 (left: 5 10 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "It appears that you did not provide any input. Please enter a set of numbers to continue."
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 6 10) ->  -> It appears that you did not provide any input. Please enter a set of numbers to continue. -> 81 / 9 = 9 (left: 3 27 9)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3 -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15) -> 15 - 4 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 6 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19) -> 13 / 19 \u2248 0.6842 (left: 0.6842)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 11 = 88 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 11 = 88 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 / 2 = 0.5833333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 7 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 7 11 14) -> 7 + 11 = 18 (left: 11 14 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 7 11 14) -> 7 + 11 = 18 (left: 11 14 18) -> 11 * 14 = 154 (left: 18 154)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 * 13 = 143 (left: 8 143)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 * 13 = 143 (left: 8 143) -> 8 + 143 = 151 (left: 151)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 5 * 2 = 10 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": "NA"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.3846153846154"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154 * 2 = 2.7692307692308",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 13"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16) -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.3846153846154"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154 * 2 = 2.7692307692308",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 9 + 1.2857 = 10.2857 (left: 10.2857 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 9 + 1.2857 = 10.2857 (left: 10.2857 13) -> Input: 5 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.3846153846154"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154 - 1 = 0.3846153846154",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 + 7 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 - 1 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 - 1 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2) -> 8 - 2 = 6 (left: 6 2) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 7 13 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 9 = 54 (left: 54 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 9 = 54 (left: 54 13) -> 54 / 13 \u2248 4.153846 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.3846153846154"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 * 9 = 81 (left: 7 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 13 + 7 = 20 (left: 81 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 13 + 7 = 20 (left: 81 20) -> 81 / 20 = 4.05 (left: 4.05)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.3846153846154"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154 * 2 = 2.7692307692308",
                "Pruning": null
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 * 10.5 = 89.25 (left: 89.25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7 -> 7 - 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 + 10.5 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 / 10.5 = 0.80952380952 (left: 0.80952380952)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 - 10.5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 * 10.5 = 89.25 (left: 89.25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 12) -> 9 / 2 = 4.5 (left: 4.5 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 12) -> 9 / 2 = 4.5 (left: 4.5 12) -> 4.5 * 12 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 / 10.5 = 0.8095238 (left: 0.8095238)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 18 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 18 15) -> 18 / 15 = 1.2 (left: 1.2)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7 -> 7 - 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> Possible",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 - 10.5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 - 10.5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 5"
                }
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5 -> 10 + 2 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 2340 / 6 = 390 (left: 6 390)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15) -> 78 + 15 = 93 (left: 15 93)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 2340 - 6 = 2334 (left: 2334)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": "NA",
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 2340 - 6 = 2334 (left: 2334)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 6 * 2340 = 14040 (left: 14040)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 6 * 2340 = 14040 (left: 14040)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 / 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 / 12 =  -> 13 / 12 = 1.08333333333",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 / 12 =  -> 13 / 12 = 1.08333333333 -> 13 - 12 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 2340 - 6 = 2334 (left: 2334)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 13 - 12 = 1 (left: 1 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 13 - 12 = 1 (left: 1 54) -> 1 * 54 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 6 + 2340 = 2346 (left: 2346)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 6 + 2340 = 2346",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 + 7) - 8) * 2 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> There are no possible next steps with the input of 26.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 2340"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340) -> 2 * 3 = 6 (left: 6 2340) -> 2340 - 6 = 2334 (left: 2334)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 2340"
                }
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + (7 + 7)) * 2 = 24",
                "Pruning": "NA",
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 0.75 * 3.5 = 2.625 (left: 2.625)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 0.75 + 3.5 = 4.25 (left: 4.25)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 9 / 24 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 3.5 - 0.75 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 3.5 / 0.75 = 4.66666666667 (left: 4.66666666667)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 3.5 / 0.75 = 4.666666666666667 (left: 4.666666666666667)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 3 * 9 = 27 (left: 27 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 3 * 9 = 27 (left: 27 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 0.75 + 3.5 = 4.25 (left: 4.25)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 3.5 / 0.75 = 4.666666666666667 (left: 4.666666666666667)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps. -> None",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 0.75 * 3.5 = 2.625 (left: 2.625)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 3.5 / 0.75 = 4.666666666666667 (left: 4.666666666666667)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (9 - 6) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 0.75 * 3.5 = 2.625 (left: 2.625)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.75 3.5"
                }
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 88 = 96 (left: 88)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 / 96 = 0.08333333333333333 (left: 0.08333333333333333)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 8 104)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100) -> 100 * 2 = 200 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 8 = 1.5 (left: 1.5 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 8 = 1.5 (left: 1.5 30) -> 1.5 * 30 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 8 = 1.5 (left: 1.5 30) -> 1.5 * 30 = 45 (left: 45) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 8 104)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 * 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 * 8 =  -> 12 * 8 = 96",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 * 8 =  -> 12 * 8 = 96 -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 8 = 16 (left: 16 96)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 11 + 4 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "40"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40) -> There are no possible next steps for the number 40 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 12"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.8 + 2 = 6.8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4.8 + 2 = 6.8"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 2",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28) -> 12 + 28 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "252"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 2 + 2 = 4 (left: 4 2)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide more numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 * 7 = 42 (left: 8 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 * 7 = 42 (left: 8 42) -> 42 / 8 = 5.25 (left: 5.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 * 7 = 42 (left: 8 42) -> 42 / 8 = 5.25 (left: 5.25) -> 5.25 + 2 = 7.25 (left: 7.25)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4.8 + 2 = 6.8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29) -> There is only one possible step for this input: 29 - 2 = 27 (left: 27)",
                "Pruning": "NA",
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 12"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 12"
                }
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.5714 (left: 0.5714)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100) -> 100 - 10 = 90",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17) -> 17 - 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 \u2248 0.5714 (left: 0.5714)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)  -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 5 10  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 5 10  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 / 8 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.57 (left: 0.57)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "100 - 10 = 90"
                }
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 * 7 = 77 ("
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11) -> 11 * 7 = 77 ( -> 7 + 11 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 36."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14."
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14. -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> No further steps can be taken with the input of 8.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> No further steps can be taken with the input of 8. -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "12 - 6 =  -> 12 - 6 = 6 -> 12 / 6 = 2 (left: 2) -> There are no possible next steps with only one number input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11) -> 11 * 7 = 77 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14."
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14. -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 36."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 =  -> 12 - 6 = 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 =  -> 12 - 6 = 6 -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 44."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14."
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> Invalid input. Please provide a valid mathematical operation using the numbers: 2, 8, 8, 14. -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11) -> 27 * 11 = 297 (left: 297)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12) -> 11 + 12 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11) -> 27 - 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 - 2 = -0.8 (left: -0.8)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: 9 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: 9 8) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 - 9 = -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 - 9 = - -> 6 - 9 = -3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 + 9 = 20 (left: 9 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 + 9 = 20 (left: 9 20) -> 9 + 20 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                }
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40) -> 23 - 40 = -17 (left: -17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40) -> 23 - 40 = -17 (left: -17) -> There are no possible next steps with the input of -17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> There is only one number, so no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 5 + 4 = 9 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 5 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12) -> 11 / 1.6 = 6.875 (left: 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12) -> 11 / 1.6 = 6.875 (left: 6 -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -17."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12) -> -2 + 12 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12) -> -2 + 12 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13) -> 1.0909090909090908 * 13 = 14.272727272727726 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13) -> 1.0909090909090908 * 13 = 14.272727272727726 (left: 13) -> 13 * 8 = 104 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19) -> 17 + 19 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of 29."
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> There are no possible next steps with the input of 29. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 29."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "20 14"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 20 14) -> 20 + 14 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "20 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> There are no possible next steps with the input of 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "190"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 48 - 10 = 38 (left: 5 38) -> 5 * 38 = 190 (left: 190) -> 190 * 2 = 380 (left: 380)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 29."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 20 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> Input is incomplete.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "20 14"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 20 14) -> 20 - 14 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 29."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "190"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 48 - 10 = 38 (left: 5 38) -> 5 * 38 = 190 (left: 190) -> 190 / 2 = 95 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "20 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "190"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 48 - 10 = 38 (left: 5 38) -> 5 * 38 = 190 (left: 190) -> There are no possible next steps for the number 190.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left: -> 8 / 1.2 = 6.666666666666667 (left: 6.666666666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "20 14"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 20 14) -> 20 + 14 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "20 14"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 10 = 18 (left: 5 18 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 48 - 10 = 38 (left: 5 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 48 - 10 = 38 (left: 5 38) -> 5 * 38 = 190 (left: 190)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 / 120 = 0.1 (left: 0.1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "20 14"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 =  -> 8 - 1.2 = 6.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 - 1.2 = 6.8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 =  -> 8 - 1.2 = 6.8 -> 8 - 1.2 = 6.8",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 - 9 = -1 (left: -1)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 - 66 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "66 66"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19) -> 11 / 19 = 0.5789473684210527 (left: 0.5789473684210527)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "16"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 13 = 4 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input: -> Please provide a set of numbers to find the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 11 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132) -> 132 / 2 = 66 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "16"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 13 = 4 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "66 66"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 6 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 6 12  -> 12 / 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 6 12  -> 12 / 6 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 13 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 13 = 4 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 25 / 17 = 1.47 (left: 1.47)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 25 / 17 = 1.47 (left: 1.47) -> 1.47 - 2 = -0.53 (left: -0.53)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "66 66"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 66) -> 66 / 0.9230769230769231 = 71.42857142857143 (left: 71.42857142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": "NA",
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 3 + 5 = 8 (left: 2 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 3 + 5 = 8 (left: 2 8 -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.57142857143 (left: 0.57142857143)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.5714285714285714 (left: 0.5714285714285714)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 - 14 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "194"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 + 182 = 194 (left: 194) -> 4 * 9 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "84"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "194"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 + 182 = 194 (left: 194) -> 4 * 9 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "194"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 + 182 = 194 (left: 194) -> 9 * 4 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "13 + 2 = 15 (left: 7 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 7 + 12 = 19 (left: 19 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 7 + 12 = 19 (left: 19 15) -> 19 - 15 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4"
                }
            },
            "Step 4": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 7 + 12 = 19 (left: 19 15) -> 19 - 15 = 4 (left: 4) -> There are no possible next steps with the input 4.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 14 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 12 14 14) -> 12 + 14 = 26 (left: 14 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 12 14 14) -> 12 + 14 = 26 (left: 14 26) -> 14 - 26 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4"
                }
            },
            "Step 4": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 7 + 12 = 19 (left: 19 15) -> 19 - 15 = 4 (left: 4) -> There are no possible next steps with the input 4.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 13 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182) -> 12 + 182 = 194 (left: 194)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "84"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 - 4 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 1 = 13 (left: 2 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "84"
                }
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 2 13 19) -> 13 * 2 = 26 (left: 26 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 13 19) -> 13 * 2 = 26 (left: 26 19) -> 26 + 19 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> 6 + 7 = 13 (left: 4 5 13)",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input 0.6667."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6667 ( -> 8 / 12 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context. -> There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38) -> 10 * 38 = 380 (left: 380)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps with the input of -36."
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36) -> There are no possible next steps with the input of -36. -> There are no possible next steps with the input of -36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6667 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6667 ( -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6667 ( -> 8 / 12 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67) -> There are no possible next steps with the input 10.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 10.67."
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67) -> There are no possible next steps with the input 10.67. -> There are no possible next steps with the input 10.67.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168) -> 1 * 6 * 8 = 48 (left: 48)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context. -> None.",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 12 48 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input 0.6667."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6667 ( -> 8 / 12 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations. -> There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations. -> There are no possible next steps for the input 5.33 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36) -> There are no possible next steps with the input of -36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7 -> 7 * 2 = 14 (left: 2 7)",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "26"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 / 2 = 13",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "37"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "26"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> There are no possible next steps for the number 26 since it is not possible to combine the numbers 7, 8, and 8 using basic arithmetic operations to achieve a result of 26.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39) -> 39 - 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "26"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 / 2 = 13",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-3"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": "NA",
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39) -> 39 - 13 = 26 (left: 26) -> 26 / 2 = 13",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": ""
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) ->  -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "37"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "37"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> There are no possible next steps with the input 37 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 4 = 1 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 4 = 1 ( -> 2 - 2 = 0 (left",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 4 = 1 ( -> 2 - 2 = 0 (left -> 0 - 8 = -8 (left: -8)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / (10 / 12) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22) -> 9 - 22 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22) -> 9 - 22 = -13 (left: -13) -> There are no possible next steps with the input of -13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20) -> 20 - 10 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / (10 / 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 4 * 2 = 8 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / (10 / 12) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / 10 * 12 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2  -> 4 - 2 = 2 (left: 2) -> Invalid input. Please enter at least two numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 5 10 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 12 - 9 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 12 - 9 = 3 (left: 3 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) * (10 / 12) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 4 50 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2) -> 20 / 2 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible -> There are infinite possible next steps depending on the specific rules or operations you want to apply to the input \"Possible\". Without additional context or constraints, it is not possible to determine a specific next step.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "26"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12) -> 14 + 12 = 26 (left: 26) -> 26 + 8 = 34 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> No possible next steps for the number 0.6363636363636364.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps for the number 0.6363636363636364."
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> No possible next steps for the number 0.6363636363636364. -> There seems to be a mistake in the input as the number provided (0.6363636363636364) is not part of the original input (2 8 8 14). Please provide the correct input for further calculations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left: -> 18 - 1 = 17 (left: 17) -> There are no possible next steps for the input 17.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12) -> 14 + 12 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are infinite possible next steps depending on the specific rules or operations you want to apply to the input \"Possible\". Without additional context or constraints, it is not possible to determine a specific next step."
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible -> There are infinite possible next steps depending on the specific rules or operations you want to apply to the input \"Possible\". Without additional context or constraints, it is not possible to determine a specific next step. -> - 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left: -> 18 - 1 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> - Subtract 21 - 8 = 13",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11) -> 11 - 2 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps for the number 0.6363636363636364."
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> No possible next steps for the number 0.6363636363636364. -> There seems to be an error in the input provided. Can you please provide a valid set of numbers for me to generate possible next steps?",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 2 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 - 8 = 13 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 - 11 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30) -> 2 * 30 = 60 (left: 60) -> 60 + 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6.77 + 2 = 8.77"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1) -> Sorry, please provide a valid input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30) -> 2 * 30 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 - 11 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6.77 + 2 = 8.77"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 / 1.33 = 6.77 (left: 6.77)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 / 1.33 = 6.77 (left: 6.77) -> 6.77 + 2 = 8.77",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.0909090909090908"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908) -> 1.0909090909090908 * 2 = 2.1818181818181816",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> 8 - 6.5 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.3333 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> There are no possible next steps for the input 10.3333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6.77 + 2 = 8.77"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 / 1.33 = 6.77 (left: 6.77) -> 6.77 + 2 = 8.77 -> 2 + 6.77 = 8.77",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 - 11 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30) -> 2 * 30 = 60 (left: 60) -> None.",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6.77 + 2 = 8.77"
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.5 36"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36) -> 1.5 + 36 = 37.5 (left: 37.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "41 + 2 = 43"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 120"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 13 120) -> 13 - 6 = 7 (left: 7 120)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 13 120) -> 13 - 6 = 7 (left: 7 120) -> 7 + 120 = 127 (left: 127)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 13 120) -> 13 - 6 = 7 (left: 7 120) -> 7 + 120 = 127 (left: 127) -> 127 / 1 = 127 (left: 127)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "17 29"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17 29) -> 17 / 29 \u2248 0.5862 (left: 0.5862)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.5 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 (left: 1.08)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5"
                }
            },
            "Step 4": {
                "Step": "12 * 13 = 156 (left: 6 10  -> 6 * 10 = 60 (left: 10) -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 6 = 19 (left: 10 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 6 = 19 (left: 10 19) -> 10 * 19 = 190 (left: 190)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 - 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "41 + 2 = 43"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 13 120)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 13 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 13 60) -> 13 + 60 = 73 (left: 12 73)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 13 60) -> 13 + 60 = 73 (left: 12 73) -> 12 * 73 = 876 (left: 876)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.08"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 * 13 = 156 (left: 6 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 * 13 = 156 (left: 6 10  -> 6 * 10 = 60 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 * 13 = 156 (left: 6 10  -> 6 * 10 = 60 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.08"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 * 8 = 168 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.5 36"
                }
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 14 - 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> 1 + 3 + 6 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with just one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No more possible next steps, the input is already a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 9 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222) -> 1.2222 * 2 = 2.4444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 7 / 3 = 2.33 (left: 3 2.33)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36) -> There are no possible next steps for the input 3.36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 / 2 is not valid",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No more possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13) -> 13 + 4 = 17 (left: 9 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13) -> 13 + 4 = 17 (left: 9 17) -> 9 + 17 = 26 (left: 26)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps as there is only one number left (16"
                }
            },
            "Step 4": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16). -> None",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "77 + 2 = 79"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "77 + 2 = 79"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> 77 + 2 = 79 -> 77 - 2 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "77 + 2 = 79"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "77 + 2 = 79"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> 4 + 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "77 + 2 = 79"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 * 4 = 32 (left:"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: -> 8 - 32 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "77 + 2 = 79"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> 77 + 2 = 79",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> 4 + 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> 4 + 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 / 10 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps as there is only one number left (16"
                }
            },
            "Step 4": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 / 2 = 6 (",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 * 4 = 32 (left:"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: -> Input: 32 + 8 = 40 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "77 + 2 = 79"
                }
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45) -> 10 * 45 = 450 (left: 450)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45) -> 10 * 45 = 450 (left: 450) -> 450 / 5 = 90 (left: 90)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input -4."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps for the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 - 0.5 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 8 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 8 11.67) -> 8 / 11.67 = 0.68 (left: 0.68)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 3 / 3",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 9 -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5) ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 9 10) -> 9 + 10 = 19 (left: 6 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 9 10) -> 9 + 10 = 19 (left: 6 19) -> 19 - 6 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input -4."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 5  -> 3 * 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 5  -> 3 * 5 = 15 (left: 15) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 - 0.5 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 - 0.2727272727272727 = ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 - 0.2727272727272727 = 3.393939",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 0.2727272727272727 * 3.6666666666666665 = 1 (left: 1 3.6666666666666665)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39) -> 39 / 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 / 0.272727",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 0.2727272727272727 * 3.6666666666666665 = 1 (left: 1 3.6666666666666665)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 0.2727272727272727 * 3.6666666666666665 = 1 (left: 1 3.6666666666666665)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 - 0.272727272727",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 - 0.272727272727",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 / 0.2727272727272727 = 13.428571428571429",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.2727272727272727 3.6666666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665) -> 1 / 3.6666666666666665 = 0.2727272727272727 (left: 0.2727272727272727 3.6666666666666665) -> 3.6666666666666665 / 0.2727272727272727 = 13.428571428571429 (left: 13.428571428571429)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 48"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 40 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 48"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 48"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> None, since there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 4 + 7 = 11 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 4 + 7 = 11 (left: -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 4 + 7 = 11 (left: -> 4 + 7 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> Possible next steps: -> There are no possible next steps as the input has no numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> Possible next steps: -> There are no possible next steps as the input has no numbers. -> There are no possible next steps as the input has no numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 1 42 13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 1 42 13 -> 42 / 1 = 42 (left: 42 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 1 42 13 -> 42 / 1 = 42 (left: 42 13) -> 42 / 13 = 3.23076923077 (left: 3.23076923077)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 48"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27) -> 2 + 27 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 4.5 * 9 = 40.5 (left: 1 40.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 4.5 * 9 = 40.5 (left: 1 40.5) -> 40.5 / 1 = 40.5 (left: 40.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 4 + 9 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 4 + 9 = 13 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 3 6 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 3 6 9 -> 9 / 3 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12 -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 - 10 = -7 (left: -7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> N/A",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24) -> 11 + 24 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24) -> 11 + 24 = 35 (left: 35) -> 35 + 2 = 37 (left: 37)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28) -> 7 + 28 = 35 (left: 35)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps for the input 14.7 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 8 / 4 = 2 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 5 - 5 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 8 / 4 = 2 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 8 / 4 = 2 (left: 2 8 16)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 + 5 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 + 5 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 + 5 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216) -> 21 - 6 = 15 (left: 15)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 16 - 4 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 8 - 4 = 4 (left: 4 16)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 + 8 = 12 (left: 12 16)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 16 - 8 = 8 (left:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 + 8 = 12 (left: 12 16)",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps. -> - Please provide a valid set of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 * 8 = 64 (left: 64 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 8 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 4 + 3 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 + 8 = 16 (left: 16 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 - 8 = 2 (left: 8 2)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 * 8 = 64 (left: 10 64)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 8 10"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps for the number 30 as it is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 - 8 = 2 (left: 8 2)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 - 8 = 0 (left: 0 10)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156) -> 10 * 156 = 1560 (left: 1560)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2.2857142857142856"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 16 / 7 =  -> 2.2857142857142856 -> 2.2857142857142856 - 2 = 0.28571428571428564",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9.23"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120) -> 120 / 13 = 9.23 (left: 9.23) -> It seems like there was an error in the input provided. Please enter a set of numbers separated by spaces for me to provide possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120) -> 120 / 13 = 9.23 (left: 9.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1560"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156) -> 10 * 156 = 1560 (left: 1560) -> 1 + 5 + 6 + 0 = 12",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4.2"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 6 * 7 = 42 (left: 10 42) -> 42 / 10 = 4.2 (left: 4.2) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 / 2 = 0.45454545454545455",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 6 * 7 = 42 (left: 10 42)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 6 * 7 = 42 (left: 10 42) -> 42 / 10 = 4.2 (left: 4.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9.23"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120) -> 120 / 13 = 9.23 (left: 9.23) -> No possible next steps as the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6.5"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5) -> 8 - 6.5 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2.2857142857142856"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 16 / 7 =  -> 2.2857142857142856 -> 2.2857142857142856 + 2 = 4.2857142857142856 (left: 4.2857142857142856)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 + 17 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 + 17 = 35 (left: 35) -> 35 + 2 = 37 (left: 37)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 + 7 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 7 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 16 / 7 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 16 / 7 =  -> 2.2857142857142856",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0.9090909090909091"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 / 2 = 0.45454545454545455 (left: 0.45454545454545455)",
                "Pruning": "NA"
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-3 -0.625"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3 -> 5 / -8 = -0.625 (left: -3 -0.625) -> -3 - (-0.625) = -2.375 (left: -2.375)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to take."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 - 12 = -1.6 (left: -1.6)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "96"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 / 2 = 48",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "96"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given, so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-3 -0.625"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3 -> 5 / -8 = -0.625 (left: -3 -0.625) -> -3 / (-0.625) = 4.8 (left: 4.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3 -> 5 / -8 = -0.625 (left: -3 -0.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-3 -0.625"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3 -> 5 / -8 = -0.625 (left: -3 -0.625) -> ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28) -> 2 * 8 = 16 (left: 16)",
                "Pruning": "NA",
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "192"
                }
            },
            "Step 4": {
                "Step": "12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192) -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12 -> 28 - 12 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to take."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given, so there are no possible next steps to take. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21) -> None.",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 1 = 11 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 1 = 11 (left: -> 12 / 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "16 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12 -> 28 - 12 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "96"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> No possible next steps with the input 96.",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8) -> 8 / 6 = 1.3333 (left: 1.3333 1.3333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8) -> 8 / 6 = 1.3333 (left: 1.3333 1.3333) -> 1.3333 - 1.3333 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 6 4) -> 3 * 4 = 12 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 6 4) -> 3 * 4 = 12 (left: 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 * 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 1 + 8 = 9 (left: 8 9 4)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 8 - 1 = 7 (left: 7 8 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps: -> It appears that the input is missing. Please provide the input for me to generate the possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 8 - 1 = 7 (left: 7 8 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99) -> 7 * 99 = 693 (left: 693)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 4 + 1 = 5 (left: 8 8 5)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 1 * 8 = 8 (left: 8 8 4)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59) -> There are no possible next steps with just the number 59.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 8 - 1 = 7 (left: 7 8 4)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28) -> 28 / 2 = 14 (left: 14)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 4 + 8 = 12 (left: 8 12 4)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11) -> 54 - 11 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 4 + 1 = 5 (left: 8 8 5)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 8 / 1 = 8 (left: 8 8 4)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8 8 4"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> 11 - 7 = 4 (left: 7 8 8 4) -> 8 - 7 = 1 (left: 1 8 8 4) -> 8 - 4 = 4 (left: 1 4 8)",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20 -> 20 / 2 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 / 2 = 10"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20 -> 20 / 2 = 10 -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "The input is invalid. Please provide at least two numbers to find possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-2"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> None",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "16 / 2 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-2"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 / 2 = 10"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20 -> 20 / 2 = 10 -> 20 - 10 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps for the input 1.5."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5. -> There are no possible next steps for the input 1.5 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 6 7) -> Input: 1 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 6 7) -> Input: 1 7 -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 6 7) -> Input: 1 7 -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 / 2 = 10"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20 -> 20 / 2 = 10 -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "The input is invalid. Please provide at least two numbers to find possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "The input is invalid. Please provide at least two numbers to find possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with just one number. -> The input is invalid. Please provide at least two numbers to find possible next steps. -> The input is invalid. Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15. -> 15 * 2 = 30 (left: 30)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps for the input 1.5."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5. -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps for the input 1.5."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-2"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> -2 / 2 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "16 / 2 = 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with just one number. -> The input is invalid. Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "16 / 2 = 8"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 / 2 = 8 -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 + 5 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / (-1) = -12 (left: -12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / (-1) = -12 (left: -12) -> There are no possible next steps with the input -12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> Please provide a list of numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 3.5 - 4 = -0.5 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> No possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 7 + 9 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 - 2 = 0 (left: 0 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14) -> 14 - 14 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0.8461538461538461 - 2 = -1.1538461538461539"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 * 2 = 1.6923076923076922",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 0.846 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 0.846 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0.846 / 2 = 0.423"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 / 2 = 0.423 -> 2 / 0.846 = 2.3668639 (left: 2.3668639)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 80."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 / 2 = 0.423",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0.8461538461538461 - 2 = -1.1538461538461539"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 + 2 = 2.846153846153846",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 8 7) -> 7 / 6 = 1.17 (left: 1.17  -> 17 / 1 = 17 (left: 17) -> There are no possible next steps with just the number 17.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 80."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 8 / 2 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 8 / 2 = 4 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 8 7) -> 7 / 6 = 1.17 (left: 1.17  -> 17 / 1 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 8 7) -> 7 / 6 = 1.17 (left: 1.17 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 8 7) -> 7 / 6 = 1.17 (left: 1.17  -> 17 / 1 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0.8461538461538461 - 2 = -1.1538461538461539"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 / 2 = 0.423",
                "Pruning": null
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 =",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 / 10 = 6.4 (left: 6.4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 / 10 = 6.4 (left: 6.4 12) -> 6.4 + 12 = 18.4 (left: 18.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 / 10 = 6.4 (left: 6.4 12) -> 6.4 + 12 = 18.4 (left: 18.4) -> There are no possible next steps for the input 18.4 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 12 = 120 (left: 120 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 12 = 120 (left: 120 64) -> 120 * 64 = 7680 (left: 7680)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 8 = 16 (left: 10 16 12) -> 10 * 16 = 160 (left: 12 160)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 8 = 16 (left: 10 16 12) -> 10 * 16 = 160 (left: 12 160) -> 12 + 160 = 172 (left: 160 172)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6 9"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 3 + 3 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 10 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0 0.8333333333333334) -> 0.8333333333333334 * 2 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 - 0 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 - 0 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) ",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 114 / 1 = 114 (left: 114)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 3 + 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 + 9.01 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 8 * 14 = 112 (left: 112 17)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 * 9.01 = 26.9029 (left: 26.9029)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 9.01 / 2.99 = 3.017 (left: 3.017)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 3 + -8 = -5 (left: -5)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 9.01 / 2.99 = 3.01471 (left: 3.01471)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> 4 * 1 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 9.01 / 2.99 = 3.021 (left: 3.021)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 * 9.01 = 26.9899 (left: 26.9899)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 9.01 - 2.99 = 6.02 (left: 6.02)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 + 9.01 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846) -> 1.846 - 2 = -0.154 (left: -0.154)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 * 9.01 = 26.9899 (left: 26.9899)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                }
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input: -> Please provide a set of numbers to determine possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers. -> None",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There is only one possible next step: you can't perform any operation with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers. -> None",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers. -> N/A",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps."
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> Without the input numbers, I am unable to suggest possible next steps. Please provide the input numbers for me to analyze and suggest potential calculations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps."
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) ->  -> It appears that the input is missing. Please provide the input numbers so that I can suggest possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the input numbers for me to assist you further.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 * 8 = 136 (left: 8 136)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 12 -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 12 - -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 12 - -> 12 - 8 = 4 -> 12 + 8 = 20 (left: 20)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17) -> There are no possible next steps for the number 17 as it is a prime number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 - 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There is only 1 number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 - 1 = 5 (left: 5)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "13 73"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13) -> 60 + 13 = 73 (left: 13 73) -> 5 + 25 = 30 (left: 30 30)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "13 73"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13) -> 60 + 13 = 73 (left: 13 73) -> 5 + 25 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> No possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces."
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces. -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13) -> 60 + 13 = 73 (left: 13 73)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "17"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17) -> 17 + 8 = 25",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided. -> - Provide more numbers to work with",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces."
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces. -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 8"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 is not a valid input. Please enter a valid input consisting of numbers separated by spaces."
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5) -> 10 + 5 = 15 (left: 5 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50 5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 6.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 9 6",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: -> 9 * 9 = 81 (left: 81) -> 8 / 1 = 8 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18) -> 8 / 18 = 0.4444 (left: 0.4444)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24) -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one number provided (1.33"
                }
            },
            "Step 4": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to perform any operations. -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 + 2 = 14 (left: 14)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18 + 18 = 36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one number provided (1.33"
                }
            },
            "Step 4": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to perform any operations. -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 / 3 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 12.5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33) -> 3 * 33 = 99 (left: 99)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 12.5."
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps for the input 12.5. -> There are no possible next steps for the input 12.5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 12.5."
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps for the input 12.5. -> There are no possible next steps for the input 12.5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18 + 18 = 36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 * 2 = 36 (left: 18 36)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps for the input 12.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18 + 18 = 36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 12.5."
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps for the input 12.5. -> There are no possible next steps for the input 12.5.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28 -> 14 * 14 = 196 (left: 28 196)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 + 8 = 14"
                }
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 - 7 = -5.6 (left: -5.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on."
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on. -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 ->  -> It appears that you did not provide an input for the calculation. Please enter a set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed."
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed. -> There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 + 14 = 28"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28 -> 14 / 14 = 1 (left: 28 1)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on."
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on. -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7) -> 5 - 2 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7) -> 5 - 2 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on."
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on. -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1 -> 7 / 8 = 0.875 (left: -1 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "It appears that you did not provide an input for the calculation. Please enter a set of numbers to continue finding possible next steps."
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 ->  -> It appears that you did not provide an input for the calculation. Please enter a set of numbers to continue finding possible next steps. -> Please provide a set of numbers for the calculation.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 10.5 + ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 10.5 +  -> 10.5 + 8 = 18.5 (left: )",
                "Pruning": "NA",
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "It appears that you did not provide an input for the calculation. Please enter a set of numbers to continue finding possible next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "-1 0.875"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1 -> 7 / 8 = 0.875 (left: -1 0.875) -> -1 - 0.875 = -1.875 (left: -1.875)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed."
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed. -> 11 + 3 = 14 (left: 6 9 14)",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "27 0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390) -> 3 * 9 = 27 (left: 27 0) -> 27 + 0 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "27 0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 / 13 = 0.6923 (left: 0.6923)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 15 -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 15 -> None - there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 15 -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 + 10 = 23 (left: 12 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 + 10 = 23 (left: 12 23) -> 12 - 23 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "27 0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390) -> 3 * 9 = 27 (left: 27 0) -> 27 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390) -> 3 * 9 = 27 (left: 27 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "27 0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390) -> 3 * 9 = 27 (left: 27 0) -> 27 - 0 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to calculate. -> 1.33 * 1 = 1.33 (left: 1.33)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7) -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 9 + 3 = 12 (left: 12 5)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 - 3.5 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 / 3.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 8 / 5.5 = 1.45454545455 (left: 1.45454545455)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Input: 12 4 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 3.5 + 7 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps as there are not enough numbers provided to perform any operations. -> Input more numbers to continue the operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 6 - 3",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Input: -3 5",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5 (left: 7.5)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 - 3.5 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "Input more numbers to continue the operations."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 - 3.5 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "68 68"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168) -> 68 / 1 = 68 (left: 68 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> Input: 10 5",
                "Pruning": null
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32) -> -32 * 8 = -256 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 + 8 = 26 (left: 26)\nAnswer: (3 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 12 - 3 = 9 (left: 9 6 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 12 - 3 = 9 (left: 9 6 18) -> 18 / 6 = 3 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 10 - 5 = 5 (left: 5) -> 5 + 8 = 13 (left: 8) ",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 5 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 7 = 13 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n10 * 8 = 80 (left: 80)\n80 / 10 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((6 + 7) - 3) * 8 =",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 4 8 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32  -> 4 + 32 = 36 (left: 32 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32  -> 4 + 32 = 36 (left: 32 36) -> 32 - 36 = -4 (left: -4)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 6 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All the possible solutions for the given inputs have been provided.",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 3"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left: -> 12 / 8 = 1.5 (left: 1.5) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11) -> 11 / 11 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 6 8) -> Input",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 6 8) -> Input -> There seems to be an error in the input provided. Please input a valid set of numbers for the next steps to be determined. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 6 / 3 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 6 / 3 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps for 36 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps with the input 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 146"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 13 + 60 = 73 (left: 73) -> 73 * 2 = 146 (left: 2 146) -> 2 * 146 = 292 (left: 146 292)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 146"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 13 + 60 = 73 (left: 73) -> 73 * 2 = 146 (left: 2 146) -> 146 - 2 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> Input: 6 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> Input: 6 6 -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 13 + 60 = 73 (left: 73)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 13 + 60 = 73 (left: 73) -> 73 * 2 = 146 (left: 2 146)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 - 61 = -49 (left: -49)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 - 61 = -49 (left: -49) -> -49 + 2 = -47 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12) -> 2.4 - 1 = 1.4 (left: 1.4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12) -> 2.4 - 1 = 1.4 (left: 1.4 12) -> 12 - 1.4 = 10.6 (left: 10.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11) -> 11 - 7 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11) -> 11 - 7 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 146"
                }
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> - 18 + 2 = 20",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 2 + 5 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 =  -> 6 + 1.2 = 7.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 - 3 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 - 3 = 5 (left: 5 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6.5 13"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 2 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 2 = 7 (left: 6 7) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 2 = 7 (left: 6 7) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> None, the input 18 does not have any possible next steps as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 5 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6.5 13"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11) -> 11 / 1.33 = 8.27 (left: 8.27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 6 = 1.33 (left: 1.33 8) -> 8 - 1.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 2 + 5 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 2 + 5 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 2 + 5 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 2 + 5 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6.5 13"
                }
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 * 2 = 40 (left: 20 20 40)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272 -> 14 / 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "84"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41) -> There is only one number given, so there are no possible next steps to perform. The number 41 is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1.3571428571428572"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 19 14) -> 19 / 14 = 1.3571428571428572 (left: 1.3571428571428572) -> 1.3571428571428572 - 2 = -0.6428571428571428",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 - 22 = -14 (left: -14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 - 22 = -14 (left: -14) -> -14 + 2 = -12 (left: 2)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform. The number 41 is already the final result."
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41) -> There is only one number given, so there are no possible next steps to perform. The number 41 is already the final result. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 19 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 19 14) -> 19 / 14 = 1.3571428571428572 (left: 1.3571428571428572)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272 -> 14 / 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 - 7 = 0 (left: 0 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 7 = 0 (left: 0 8 11) -> 11 / 8 = 1.375 (left: 0 1.375)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 7 = 0 (left: 0 8 11) -> 11 / 8 = 1.375 (left: 0 1.375) -> 0 - 1.375 = -1.375 (left: -1.375)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272 -> 14 / 2 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 * 2 = 40 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.75"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.75"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 22 / 8 = 2.75 (left: 2.75) -> 2.75 / 8 = 0.34375 (left: 0.34375)",
                "Pruning": "NA"
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) ",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> None, there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 8 = 29 (left: 8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 4.333333333"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input: 3 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input: 3 5 -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333 -> 3.333333333 - 1 = 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333 -> 3.333333333 - 1 = 2 -> 3.333333333 + 1 = 4.333333333 (left: 1 4.333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 3 = 10 (left: 1 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> There are no possible next steps with just the number 21.",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15) -> 3 + 15 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "243"
                }
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 - 3 = 9 (left: 9 27) -> 9 * 27 = 243 (left: 243) -> 2 + 4 = 6 (left: 6 3)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input of 9."
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the input of 9. -> 9 - 9 = 0",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 / 3 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 / 3 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 - 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 - 3 = 9 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15) -> 3 + 15 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input of 9."
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the input of 9. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 8 = 29 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "243"
                }
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 - 3 = 9 (left: 9 27) -> 9 * 27 = 243 (left: 243) -> 2 + 4 + 3 = 9",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 15 1065)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 + 15 = 1065 (left: 15 1065)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 15 70)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 - 30 = -5 (left: -5 30)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "-5 5"
                }
            },
            "Step 4": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 10 / -2 = -5 (left: -5 5) -> -5 + 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 15 70)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 / 7 = 1.43 (left: 1.43 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 / 7 = 1.43 (left: 1.43 15) -> 15 / 1.43 = 10.49 (left: 10.49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 - 15 = 1035 (left: 1035)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 5 = 12 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "5 - 7 = -2 (left: 3 -2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 10 / -2 = -5 (left: -5 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 3 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 3 * 7 = 21 (left: 21 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 3 * 7 = 21 (left: 21 5) -> 21 + 5 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 - 15 = 1035 (left: 15 1035)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1050 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 * 15 = 1050 (left: 1050 15) -> 1050 / 15 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0) ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 5 * 8 = 40 (left: 1",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 8 8 5 64.0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 9 - 10 = -1 (left: -1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 9 - 10 = -1 (left: -1 9) -> -1 + 9 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 9 - 10 = -1 (left: -1 9) -> -1 + 9 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 8 / 1 = 8 (left: 8 5 64 8.0)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 5 + 8 = 13 (left: 8 13 64.0)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input: -> There was no input provided. Please provide a set of numbers to continue with the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 8 * 8 = 64 (left: 5 64 64.0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16) -> 130 * 16 = 2080 (left: 2080)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 8 * 8 = 64 (left: 5 64.0 9 64)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 8 - 5 = 3 (left: 1 3 64.0",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42) -> There are no possible next steps for the input 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 5 * 8 = 40 (left: 64.0 40 7 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 10 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps: -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 8 - 1 = 7 (left: 5 64.0 8 7)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 13 / 12 = 1.08333 (left: 1.08333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 64.0 - 8 = 56.0 (left: 8 5 56.0)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 12 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 3.33 - 13 = -9.67 (left: -9.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 8 8 5 64.0"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 * 14.5 = 188.5 (left: 188.5) -> 8 * 8 = 64.0 (left: 1 8 8 5 64.0)  -> 64 / 1 = 64 (left: 8 5 64)",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 16 * 22 = 352 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 0.4166666666666667."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps for the input 0.4166666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 20 - 16 = 4 (left: 4 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 22 - 16 = 6 (left: 6 20)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 16 * 22 = 352 (left: 20 352)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 1 + 9 + 2 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 22 - 16 = 6 (left: 6 20)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 22 - 20 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 20 + 16 = 36 (left: 22 36)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 22 - 16 = 6 (left: 6 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 4 - 16 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 4 - 16 = -12 (left: -12) -> -12 - 8 = -20 (left: -20)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 16 + 22 = 38 (left: 20 38)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA",
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "16 22 20"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120 -> 120 / 6 = 20 (left: 16 22 20) -> 20 * 16 = ",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 / 2 = 3.75 (left: 3.75 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> There are no possible next steps as the equation has been solved and the result is 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the number 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the number 19."
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the number 19. -> There are no possible next steps with the number 19.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There is only one number, so no operations can be performed. The input is already complete."
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 / 6 = 1 (left: 1) -> There is only one number, so no operations can be performed. The input is already complete. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.75 8"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 / 2 = 3.75 (left: 3.75 8) -> 3.75 * 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the number 19."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 20"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 / 6 = 1 (left: 1) -> There is only one number, so no operations can be performed. The input is already complete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 20"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> 20 - 10 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps with just the number 3."
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There is only one number, so no operations can be performed. The input is already complete."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 36 / 0.6666666666666666 = 54 (left: 54)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the number 19."
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the number 19. -> There are no possible next steps with the number 19.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the number 19."
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the number 19. -> None",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "10 20"
                }
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5.33"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33) -> - 5.33 * 2 = 10.66",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 40."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with the input 40. -> There are no possible next steps with the input 40.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with the input 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 + 5 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 5 = 13 (left: 8 8 13) -> 8 / 8 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 5 = 13 (left: 8 8 13) -> 8 / 8 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 40."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with the input 40. -> There are no possible next steps with the input 40.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5.33"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33) -> There are no possible next steps with the input of 5.33 as it is a single number and not an equation with multiple numbers to operate on.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide a set of numbers to determine the possible next steps. -> It appears that you did not provide a set of numbers to determine the possible next steps. Please provide a set of numbers so that I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48) -> 48 / 20 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 + 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 40"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12) -> 6.67 * 12 = 80.04 (left: 80.04)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 40"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 40"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 * 12 = 96 (left: 2 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 * 12 = 96 (left: 2 96) -> 2 * 96 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 8 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 44"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> 44 / 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 40"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 44"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 4 44) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> Input: 5 10 15",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of 0.8333333333333334."
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334. -> There are no possible next steps with the input of 0.8333333333333334.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform any operations on.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of 0.8333333333333334."
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334. -> There are no possible next steps with the input of 0.8333333333333334.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> There are no possible next steps with just one number as input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222) -> 1.222 - 1 = 0.222 (left: 0.222)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps for the input 3.75."
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75. -> There are no possible next steps for the input 3.75.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2 -> 7 - 3 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 / 9 = 0.8888888888888888 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 - 9 = -7.67 (left: -7.67)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps for the input 3.75."
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75. -> There are no possible next steps for the input 3.75.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 / 9 = 0.8888888888888888 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 / 9 = 0.8888888888888888 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 2"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2 -> 7 - 3 = 4 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 0.8333333333333334."
                }
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "130"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 1 = 131 (left: 30)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "130"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 / 2 = 65 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 - 2 = 104 (left: 104)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "130"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 - 2 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 12 11) -> 7 / 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 12 11) -> 7 / 12 -> 7 / 12 = 0.58333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "14"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 18 - 4 = 14 (left: 14) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "130"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 / 2 = 65",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 18 - 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 / 7 = 1.571428571429"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 / 7 =  -> 11 / 7 = 1.571428571429 -> 11 * 7 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 6 11 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 + (7 + 11)) = 24",
                "Pruning": "NA",
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 / 7 = 1.571428571429"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 / 7 =  -> 11 / 7 = 1.571428571429 -> 11 + 7 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 6 9) -> 6 - 2 = 4 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 6 9) -> 6 - 2 = 4 (left: -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 / 7 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 / 7 =  -> 11 / 7 = 1.571428571429",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 2.5."
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5.",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1 (left: 1 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11) -> There are no possible next steps with the input -11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input of 60."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> 14 * 2 = 28",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no more possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no more possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no more possible next steps with just one number provided. -> No possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no more possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no more possible next steps with just one number provided. -> - Multiply the number by itself",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "12 + 12 = 24 (left: 5 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 *",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 * -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> No more possible next steps since there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35) -> 3 + 35 = 38 (left: 38)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 180."
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> There are no possible next steps with the input 180. -> There are no possible next steps with the input 180.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> There are no possible next steps with the input 180.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There are no possible next steps with the input 180."
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> There are no possible next steps with the input 180. -> This input does not have any possible next steps because all the numbers are already at their minimum values.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no more possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no more possible next steps with just one number provided. -> There are no more possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 12 / 1.8 = 6.67 (left: 6.67 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 12 / 1.8 = 6.67 (left: 6.67 12) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input -11."
                }
            },
            "Step 4": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11) -> There are no possible next steps with the input -11. -> There are no possible next steps with the input -11.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45) -> 24 - 45 = -21 (left: -21)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 * -> 5 * 2 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 10 / 5 = 2 (left: 2 15 20",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 3 = 9",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 + 3 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19) -> 19 - 3 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 13.5 27)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 2 = 9 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 2 = 9 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 - 8 = 19 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 2 * 19 = 38 (left: 1 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 2 * 19 = 38 (left: 1 38) -> 38 / 1 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 * 2 = 54 (left: 2 27 54)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 * 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 * 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "27"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27) -> 27 - 2 = 25 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 + 6 = 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 * 6 = 6 (left: 6 7)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: -> 2 + 20 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 + 8 = 14"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 -> 14 - 6 = 8 (left: 8 8 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15 -> 30 - 2 = 28 (left: 28)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: 10 20) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 20 6) -> 20 / 2 = 10 (left: 10 6) -> 10 * 6 = 60 (left: 60) -> 60 + 2 = 62",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: -> 2 + 20 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 + 6 = 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 7 / 1 = 7 (left: 6 7 7)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: 10 20) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 + 6 = 7"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 7 - 1 = 6 (left: 6 6)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 20 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 20 6) -> 20 / 2 = 10 (left: 10 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 2 20 6) -> 20 / 2 = 10 (left: 10 6) -> 10 * 6 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: 10 20) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: 10 20) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 20 6) -> 20 / 2 = 10 (left: 10 6) -> 10 * 6 = 60 (left: 60) -> There are no possible next steps for the number 60 as it is not an operation that can be combined with the numbers 2, 8, 8, and 14.",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left: -> 13 * 3 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left: -> 13 * 3 = 39 (left: 39) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 + 8 = 38 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 + 8 = 38 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 * 8 = 240 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 / 8 = 3.75 (left: 3.75 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps for the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 - 8 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 5 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 5 13 13) -> 5 / 13 = 0.38461538461538 (left: 0.384615",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 5 13 13) -> 5 / 13 = 0.38461538461538 (left: 0.384615 -> 0.384615 * 2 = 0.76923",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 / 8 = 3.75 (left: 3.75)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13) -> 80 / 13 \u2248 6.15 (left: 6.15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13) -> 80 / 13 \u2248 6.15 (left: 6.15) -> 15 * 6 = 90 (left: 90)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 - 8 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 + 5 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 + 13 = 14.25 (left: 14.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 8 * 30 = 240 (left: 30)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 - 8 = 22 (left: 22 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "30 8"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38) -> 38 - 8 = 30 (left: 30 8) -> 30 - 8 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                }
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8) -> 8 - 1.8 = 6.2 (left: 6.2 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "Input: 6 3 9"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> Input: 6 3 9 -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "12 16"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 4 8 12 16 -> 16 - 12 = 4 (left: 4 12 16) -> 16 - 4 = 12 (left: 12 16) -> 16 / 12 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10) -> 18 - 10 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.33"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 3 + 3 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> Input: 6 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 * 10 = 30"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 3 10) -> 3 * 10 =  -> 3 * 10 = 30 -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 / 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 / 3 = 1 (left: 1) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 4 8 12 16",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 4 8 12 16 -> 16 - 12 = 4 (left: 4 12 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 4 8 12 16 -> 16 - 12 = 4 (left: 4 12 16) -> 16 - 4 = 12 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 * 10 = 30"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 3 10) -> 3 * 10 =  -> 3 * 10 = 30 -> 10 * 3 = 30 (left: 3 30 30)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 3 10) -> 3 * 10 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 3 10) -> 3 * 10 =  -> 3 * 10 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8) -> 1.8 / 8 = 0.225 (left: 0.225)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 16"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 3 + 3 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 3 + 3 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "Input: 6 3 9"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> Input: 6 3 9 -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.33"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 3 + 3 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> 1.33 + 2 = 3.33",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given. -> None",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2) -> No possible next steps with just one number. -> - Multiply by a number",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps to perform any operations since only one number is provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 - 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 - 2 = 23",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 * 8 * 2 = 128 (left: 128)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 7 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 7 4) -> 7 * 4 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.875"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the above are correct.",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 ( -> 11 - 2 = 9 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1) -> No valid next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4 -> 9 * 2 = 18 (left: 18 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 2 4 17) -> 17 - 2 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 2 4 17) -> 17 - 2 = 15 (left: 4 15) -> 15 + 4 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 4 * 9 = 36 (left: 2 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 4 * 9 = 36 (left: 2 36) -> 2 + 36 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 4 * 9 = 36 (left: 2 36) -> 2 + 36 = 38 (left: 38) -> 3 * 8 = 24 (left: 24)",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 - 1 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 + 8 = 44 (left: 8) ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No valid next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 * 8 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20) -> 9 + 20 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined -> There are no possible next steps for the input 0 / 0 as division by zero is undefined in mathematics.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 - 32 = -23 (left: -23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 - 32 = -23 (left: -23) -> -23 / 8 = -2.875 (left: -2.875)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8) -> 8 * 9 = 72 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8) -> 8 * 9 = 72 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)  -> - 3 * 8 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30) -> 30 - 7 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3 -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 + 7 = 8.4 (left: 8.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 + 11 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 + 11 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 7 / 5 = 1.4 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 7 / 5 = 1.4 ( -> 7 * 5 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 7 + 1.4 = 8.4 (left: 8.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 7 + 1.4 = 8.4 (left: 8.4) -> There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 8.4 as it is a single number and not an expression with operators."
                }
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 * 2 = 2 (left: 0 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps: -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 4 * 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 * 2 = 20 (left: 20 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 * 2 = 20 (left: 20 24) -> 20 / 24 = 0.8333 (left: 0.8333)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 2 0)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15 -> 20 * 5 = 100 (left: 15 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15 -> 20 * 5 = 100 (left: 15 100) -> 15 - 100 = -85 (left: -85)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 5 3",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 1 * 4 * 3 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 2 0)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 + 3 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 + 3 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 11 / 3.33 = 3.303 (left: 3.303)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 0 2)",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points."
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> None",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "10.222222222222223 * 2 = 20.444444444444446 "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the current input."
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) ->  -> There are no possible next steps with the current input. -> There are no possible next steps with the current input. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10.222222222222223 * 2 = 20.444444444444446 "
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 12 - 1.7777777777777777 = 10.222222222222223 (left: 10.222222222222223  -> 10.222222222222223 * 2 = 20.444444444444446  -> 20.444444444444446 - 2 = 18.444444444444446 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12) -> -3 - 12 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "29"
                }
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 4 + 13 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 - 4 = 0 (left: 0 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 4 = 0 (left: 0 9 12) -> 12 - 0 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 4 = 0 (left: 0 9 12) -> 12 - 0 = 12 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the current input."
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) ->  -> There are no possible next steps with the current input. -> There are no possible next steps with the current input. -> There are no possible next steps with the current input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 4 + 13 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 4 + 13 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "29"
                }
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 4 + 13 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> 29 is a prime number, so there are no possible next steps using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) ->  -> There are no possible next steps with the current input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) ->  -> There are no possible next steps with the current input. -> There are no possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the current input."
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) ->  -> There are no possible next steps with the current input. -> There are no possible next steps with the current input. -> There are no possible next steps with the current input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points."
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 3 * 16",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 12 - 1.7777777777777777 = 10.222222222222223 (left: 10.222222222222223 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 12 - 1.7777777777777777 = 10.222222222222223 (left: 10.222222222222223  -> 10.222222222222223 * 2 = 20.444444444444446 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points."
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 / 3 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "10.222222222222223 * 2 = 20.444444444444446 "
                }
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps? -> Please provide the correct input so that I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 + 1.06666666667 = 8.56666666667 (left: 8.56666666667)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 + 1.06666666667 = 8.56666666667 (left: 8.56666666667)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 + 1.06666666667 = 8.56666666667 (left: 8.56666666667)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.06666666667 = 7.03448275862 (left: 7.034",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 - 1.06666666667 = 6.43333333333 (left: 6.43333333333)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 8 - 3 = 5 (left: 5)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 + 1.06666666667 = 8.56666666667 (left: 8.56666666667)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> 8 + 2 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 * 1.06666666667 = 8.01666666668 (left: 8.01666666668)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 * 1.06666666667 = 8.01666666667 (left: 1.066",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for 1.25 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left:  -> There are infinite possible next steps without knowing the target number or operation to be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 + 12 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 + 12 = 66 (left: 66) -> 66 / 2 = 33 (left: 33)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of just \"5\" as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 15) -> 15 / 0.6153846153846154 = 24.4 (left: 24.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 15) -> 15 / 0.6153846153846154 = 24.4 (left: 24.4) -> There are no possible next steps with the input of 24.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input 11.9091."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 24.4."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input 11.9091."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input 11.9091."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666 -> 0.916666666666666 + 2 = 2.916666666666666 (left: 2.916666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666 -> 0.916666666666666 + 2 = 2.916666666666666 (left: 2.916666666666666) -> 2.916666666666666 + 2 = 4.916666666666666 (left: 4.916666666666666)",
                "Pruning": "NA",
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 24.4."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 24.4."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input 11.9091."
                }
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> Possible next steps: -> There are no possible next steps with the current input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> 23 - 8 = 15 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6 -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> 6 + 3 = 9 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> Input: 4 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> 23 / 2 = 11.5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> There are no possible next steps with the input 23.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Input: 4 10"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> Input: 7 12 3 5",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> There are no possible next steps with just the number 23.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13) -> 2 - 13 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13) -> 2 - 13 = -11 (left: -11) -> There are no possible next steps for the input -11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "23"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: -> 13 + 10 = 23 (left: 23) -> 5 + 10 = 15 (left: 10)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input -11."
                }
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1014150,
        "output_tokens": 498313.61825396825,
        "total_cost": 1.2545454273809524
    }
}