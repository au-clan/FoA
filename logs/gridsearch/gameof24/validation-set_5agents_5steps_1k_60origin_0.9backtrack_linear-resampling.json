{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 0.875"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875) -> 8 - 0.875 = 7.125 (left: 7.125)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 0.875"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 8 0.875) -> 8 * 0.875 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "48"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.875"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input of 0.875.",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19) -> 5 + 11 = 16 (left: 16 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 24 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 9 + 11 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19) -> 11 - 5 = 6 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 24 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 30"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 24 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 24 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 44"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 24 = 6 (left: 6) -> Input: 14",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 + 9 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 44"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 24 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 11 + (5 + 2 * 4) = 24"
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: 1 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7.5"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: 1 7.5) -> 1 * 7.5 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 / 100 = 0.1 (left: 0.1 100)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 10 + 5 = 15 (left: 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-3"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> -3 + 14 = 11 (left: 8 8 11)",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.16667 (left: 2.16667 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.1666666666666665 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666666 (left: 15.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 15.166666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666665 (left: 7 15.166666666666665) -> 15.166666666666665 * 2 =",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 13 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.1666666666666665 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666665 (left: 7 15.166666666666665)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 15.166666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666665 (left: 7 15.166666666666665) -> 7 + 15.166666666666665 = 22.166666666666665 (left: 22.166666666666665)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 - 6 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.1666666666666665 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 15.166666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666665 (left: 7 15.166666666666665) -> 7 + 15.166666666666665 = 22.166666666666668 (left: 15.166666666666665 22.166666666666668)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 - 6 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.1666666666666665 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666666 (left: 15.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 15.166666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666665 (left: 7 15.166666666666665) -> 15.166666666666665 - 7 = 8.166666666666665 (left: 7 8.166666666666665)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 6 - 13 = -7 (left: -7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.1666666666666665 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666666 (left: 15.166666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 15.166666666666665"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 7) -> 2.1666666666666665 * 7 = 15.166666666666665 (left: 7 15.166666666666665) -> 7 + 15.166666666666665 = 22.166666666666668 (left: 15.166666666666665 22.166666666666668)",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3 + 6) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 "
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 6) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 6) = 24"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> Input: 1.14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "96 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 * 12 = 96 (left: 96 11) -> 96 + 11 = 107 (left: 107)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 8"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 12 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 * 12 = 96 (left: 96 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 1.14"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> Input: 1.14 -> 1 + 1 = 2.14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 8"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 - 8 = 3 (left: 3 11) -> 3 - 11 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 8"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 - 8 = 3 (left: 3 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 8"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 12 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 8"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 1 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 5 - 6 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 8 / 1 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 16 13"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.2"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> There are no possible next steps for the input \"1.2\" as it is already a single number and cannot be further manipulated using the operations provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.2"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 8 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> There is only one number, so no further operations can be performed.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7) + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7 + 10) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "77"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> 77 / 7 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "77"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> 7 + 7 = 14",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 - 7 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "77"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> There are no possible next steps for the input 77.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 - 11 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "77"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> 77 + 2 = 79",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "77"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77) -> There is only one number, so no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 8 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 * 9 = 63 (left: 63 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 9 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 / 8 = 1.125 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> Input: 24 128 8 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 9) = 24"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 - 6 = -2 (left: -2 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 8 =",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13) -> Input: 1 5 3",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = 9.75 (left: 9.75 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 + 2 = 14 (left: 2 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 2 * 12 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 * 11 = 99 (left: 4 12 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 12 = -1 (left: -1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 2 * 12 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12 13) -> 12 / 2 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": "NA"
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "0.875 9 13"
                }
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.125"
                }
            },
            "Step 4": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125) -> 3.125 / 2 = 1.5625",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 / 13 = 0.6923076923076923 (left: 0.692307692307692",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4.875"
                }
            },
            "Step 4": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 + 4 = 4.875 (left: 4.875) -> 4.875 - 2 = 2.875 (left: 2.875)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 + 4 = 4.875 (left: 4.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.125"
                }
            },
            "Step 4": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125) -> 3.125 - 3 = 0.125 (left: 3 0.125)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 + 4 = 4.875 (left: 4.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.125"
                }
            },
            "Step 4": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125) -> 3.125 * 3.125 = 9.765625 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "0.875 9 13"
                }
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 9 / 0.875 = 10.286 (left: 10.286 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 * 4 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.125"
                }
            },
            "Step 4": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125) -> 3.125 / 2 = 1.5625 (left: 2 1.5625 3.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 * 12 = 144 (left: 12 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 - 6 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 - 6 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 6 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 * 12 = 144 (left: 12 144)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 - 6 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 6 = 36 (left: 36) -> No possible next steps, 36 is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 - 6 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 - 6 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 * 6 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 * 3 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.3333333333 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 / 10.3333333333 ="
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 = -> 12 / 10.3333333333 = 1.1612903226",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.3333333333 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 22.3333333333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20 12) -> Input: -> There seems to be a duplicate input. Can you provide a different set of numbers for me to generate possible next steps for?",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 20 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20 12) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20 12) -> Input: -> There seems to be an error in the input provided. Please provide a valid set of numbers for the calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.3333333333 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 = 1.1612903226",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22.3333333333"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 22.3333333333) -> 22.3333333333 + 2 = 24.3333333333",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 12 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 + 12 = 24 (left: 16 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.3333333333 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 / 12 = 0.8611111111 (left: 0.8611111111 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "22.3333333333"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 22.3333333333) -> No possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 5) + (5 + 9)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 5) + (5 + 9)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 - 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just 5 as input."
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just 5 as input. -> There are no possible next steps with just 5 as input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just 5 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 - 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps with the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 (left: 25 50)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (9 - 6) * (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (9 - 6) * (9 / 3) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 6 * 2 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (9 - 6) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (9 - 6) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12) -> 8 + 9 = 17 (left: 17 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (9 - 6) * (9 / 3) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 + 13 = 19 (left: 9 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 19"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 + 13 = 19 (left: 9 19) -> 9 + 19 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 * 8 = 72 (left: 72)\nAnswer: 2 * ((3 + 6) - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n35 - 3 = 32 (left: 2 32)\n32 / 2 = 16 (left: 16)\nAnswer: (5 * 7) - (3 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) -",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\nAnswer: ((2 + (3 + 6)) * 4) - 4 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.375 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 / 8 = 1.375 (left: 1.375 15) -> 15 / 1.375 = 10.909 (left: 10.909 1.375)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 - 5 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.375 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 / 8 = 1.375 (left: 1.375 15) -> 1.375 + 15 = 16.375 (left: 16.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None. The input sequence is complete with only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.375 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 / 8 = 1.375 (left: 1.375 15) -> 5 * 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 * 11 = 99 (left: 99) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.375 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 / 8 = 1.375 (left: 1.375 15) -> 1.375 * 15 = 20.625 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 / 8 = 1.375 (left: 1.375 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Input: 3 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 3.33"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 / 3.33 = 0.90 (left: 0.90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 /"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> 6 / -> 6 / 3 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 3.33"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 - 3.33 = -0.33 (left: -0.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6.33"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 + 3.33 = 6.33 (left: 6.33) -> There are no possible next steps with the input 6.33 as it is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 9 11"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> 6 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.90"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 / 3.33 = 0.90 (left: 0.90) -> 0.90 * 2 = 1.80",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.90"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 / 3.33 = 0.90 (left: 0.90) -> 0 + 0.90 = 0.90 (left: 0 0.90)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 11"
                }
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 3.33"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 + 3.33 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6.33"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 + 3.33 = 6.33 (left: 6.33) -> There are no possible next steps with the input of 6.33 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.5 11 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4.33 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15) -> 4.33 * 15 = 64.95 (left: 64.95)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 + 13 = 16 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4.33 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15) -> 15 - 4.33 = 10.67 (left: 10.67)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 15 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4.33 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15) -> 4.33 + 15 = 19.33 (left: 19.33)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4.33 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15) -> 4.33 * 15 = 64.95 (left: 64.95)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "13 + 4 = 17 (left: 10 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 + 11 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 + 13 = 16 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4.33 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15) -> 7 + 3 = 10 (left: ",
                "Pruning": "NA"
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.666666666666666"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps for the input 0.666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.666666666666666 * 0.666666666666666 = 0.444444444444444 "
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> 0.666666666666666 * 0.666666666666666 = 0.444444444444444  -> 0.666666666666666 / 0.666666666666666 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 0.666666666666666."
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps for the input 0.666666666666666. -> There are no possible next steps for the input 0.666666666666666.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 6 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.666666666666666"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There doesn't seem to be a clear pattern in the input provided. Could you please provide more information or context so that I can assist you better?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 0.666666666666666."
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps for the input 0.666666666666666. -> There are no possible next steps for the input 0.666666666666666.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.666666666666666"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> 0.666666666666666 * 0.666666666666666 = 0.444444444444444 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.666666666666666"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps with the input \"0.666666666666666\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 0.666666666666666."
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps for the input 0.666666666666666. -> There are no possible next steps for the input 0.666666666666666.",
                "Pruning": null
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10.5714285714 12"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 12 / 10.5714285714 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 1.42857142857 * 22 = 31.42857142857 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.42857142857 22"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 22 - 1.428571428",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 1.42857142857 * 22 = 31.42857142857 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.42857142857 22"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 22 + 1.42857142857 = 23.42857142857 (left: 23.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 1.42857142857 * 22 = 31.42857142857 (left: 22) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 + 10 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10.5714285714 12"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 12 - 10.5714285714 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 1.42857142857 * 22 = 31.42857142857 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.42857142857 22"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 1.42857142857 * 22 = 31.42857142857 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "22"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 12 = 22 (left: 1.42857142857 22) -> 1.42857142857 * 22 = 31.42857142857 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 24"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 / 25 = 1",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 14"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 / 14 = 0.7857142857142857 (left: 0.7857142857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "22 12"
                }
            },
            "Step 3": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 2 * 11 = 22 (left: 22 12) -> 22 * 12 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 5 = 12 (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 11 12"
                }
            },
            "Step 2": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 2 * 11 = 22 (left: 22 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 14"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 + 25 = 50 (left: )",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 11 12"
                }
            },
            "Step 2": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 11 / 2 = 5.5 (left: 5.5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "22 12"
                }
            },
            "Step 3": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 2 * 11 = 22 (left: 22 12) -> 22 * 12 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 * 2 = 50 (left: 50)",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4.8 24"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8 24) -> 24 - 4.8 = 19.2 (left: 19.2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4.8 24"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8 24) -> 4.8 * 24 = 115.2 (left: 24 115.2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4.8 24"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8 24) -> 24 / 4.8 = 5 (left: 5 24)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4.8 24"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8 24) -> Input",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4.8 24"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8 24) -> 4.8 / 24 = 0.2 (left: 0.2",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 9 16"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 16 - 6 = 10 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 16"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 16 - 6 = 10 (left: 6 10 16) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 9 16"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 16 - 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 16"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 16 - 6 = 10 (left: 6 10 16) -> 6 + 10 = 16 (left: 16 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 / 12 = 7.5 (left: 6 7.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 16"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 16 - 6 = 10 (left: 6 10 16) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 9 16"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 6 * 9 = 54 (left: 54 16)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "54 16"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 9 16) -> 6 * 9 = 54 (left: 54 16) -> 54 - 16 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 12 * 6 = 72 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "18 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19) -> 18 / 19 = 0.9473684210526315 (left: 0.9473684210526315)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 3 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 3 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 / 6 ="
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 4 / 6 = -> 4 / 6 = 0.6666666666666666",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> Input: 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 3 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 4 / 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 / 6 ="
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 / 3 = 4 (left: 6 4) -> 4 / 6 = -> 4 / 6 = 0.6666666666666666",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "30"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "30"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> 30 + 8 = 38 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> No possible next steps, input is complete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input must contain at least 3 numbers to perform mathematical operations."
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> Input must contain at least 3 numbers to perform mathematical operations. -> 3 * 5 = 15 (left: 7 15 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> Input must contain at least 3 numbers to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input must contain at least 3 numbers to perform mathematical operations."
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> Input must contain at least 3 numbers to perform mathematical operations. -> 5 * 10 = 50 (left: 50 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4  -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just one number provided. -> Please provide more numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.5 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10) -> 1.5 * 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10) -> 6 + 12 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.5 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10) -> 1.5 + 10 = 11.5 (left: 11.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 4 / 4 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> Input: 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 4 / 4 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Input: 6 6 8 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 4 / 4 = 1 (left: 1 12) -> 1 + 12 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 3 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 / 1.33 = 2.255639 (left: 2.255639 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 * 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> Input: 1 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as the only number given is 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None.",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8) -> There are no possible next steps with only one number input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 + 1 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 + 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 1 + 7 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "Input: 3 9"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 -> 3 + 9 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2.5"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 3 9 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12 -> 12 - 9 = 3 (left:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 7 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2.5"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 45"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 * 45 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "135"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 * 45 = 135 (left: 135) -> 1 + 3 + 5 = 9 (left: 9) ",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 45"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 + 45 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "42"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 45 - 3 = 42 (left: 42) -> There are no possible next steps with the number 42 as it is a prime number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 13 9"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 / 3 = 4.33 (left: 4.33 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 45"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 * 45 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "135"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 * 45 = 135 (left: 135) -> 13 + 5 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 45"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 45 - 3 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "135"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 * 45 = 135 (left: 135) -> 15 + 3 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "135"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45) -> 3 * 45 = 135 (left: 135) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 6 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 24 + 8 = 32 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "Input: 5 5 5"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> Input: 5 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "18 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "Input: 5 5 5"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> Input: 5 5 5 -> Input: 3 6 12",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 8 - 24 = -16 (left: -16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "18 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 10 + 20 = 30 (left: 5 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "18 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 6 * 8 = 48 (left: 18 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> Input: 5 5 5",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 + 6 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3.4999999999999996 "
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.4999999999999996 (left: 3.4999999999999996  -> 3.4999999999999996 + 8 = 11.5 (left: 11.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.2857142857142856 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 2.2857142857142856 / 8 = 0.2857142857142857 (left: 0.2857142857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3.4999999999999996 "
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.4999999999999996 (left: 3.4999999999999996  -> 3.4999999999999996 * 3.4999999999999996 = 12.250000000000002",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left: ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.2857142857142856 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3.4999999999999996 "
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.4999999999999996 (left: 3.4999999999999996  -> 3.4999999999999996 / 2 = 1.7499999999999998",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.2857142857142856 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.4999999999999996 (left: 3.4999999999999996 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3.4999999999999996 "
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.4999999999999996 (left: 3.4999999999999996  -> 3.4999999999999996 - 2 = 1.4999999999999996 (left: 2 1.4999999999999996)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3.4999999999999996 "
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8) -> 8 / 2.2857142857142856 = 3.4999999999999996 (left: 3.4999999999999996  -> 3.4999999999999996 * 2 = 6.999999999999999",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "17.33"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 + 11 = 26 (left: 12 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 * 12 = 63.96 (left: 63.96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "63.96"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 * 12 = 63.96 (left: 63.96) -> 63 + 96 = 159",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "17.33"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33 as it is a single number and cannot be combined with any other numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 20 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Input: 20 5"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 20 5 -> 20 / 5 = 4 (left: 4 5)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 + 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "63.96"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 * 12 = 63.96 (left: 63.96) -> 63 - 9 = 54.96 (left: 54.96)",
                "Pruning": "NA"
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6.5"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 6.5) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 14 * 6 =",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 * 2 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 + 8 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "14"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 4 + 10 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 - 5 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "40 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 12 + 40 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.33"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 1.665)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 12 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "40 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.33"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> There are no possible next steps with the input 3.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "40 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "52"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 + 12 = 52 (left: 52) -> 52 / 2 = 26",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "40 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 + 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.33"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> There are no possible next steps for the input 3.33 as it is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 + 40 = 41 (left: 13 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "40 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 + 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.33"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 / 12 = 3.33 (left: 3.33) -> 3.33 * 2 = 6.66 (left: 6.66)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "117"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "117 + 2 = 119"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 119 / 2 = 59.5 (left: ",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "31"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "81 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 - 13 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.333333 -> Possible next steps: -> There seems to be an error in the input. Please provide a valid input for the next steps calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 / 3 = 1.333333"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.333333 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "117 + 2 = 119"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 117 / 2 = 58.5 (left: 58.5 2 119)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.333333 -> Possible next steps: -> There are no possible next steps as the input is already at its simplest form.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 * 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "140"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 2 70)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 2 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 2 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.4"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.4"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 + 8 = 9.4 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "Cost": {
        "input_tokens": 382397,
        "output_tokens": 168214.76666666652,
        "total_cost": 0.4435206499999998
    }
}