{
    "900": {
        "puzzle": "4 5 6 10",
        "Step 0": {
            "steps": [
                "6 + 10 = 16 (left: ",
                "5 * 6 = 30 (left: 4 30 ",
                "4 * 5 = 20 (left: 6 20 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "5 + 6 = 11 (left: 4 11 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "5 + 6 = 11 (left: 4 11 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "6 * 4 = 24 (left: 5 10 24)",
                "6 + 4 = 10 (left: 5 6 10)"
            ],
            "Evaluation": [
                0.0,
                21.001,
                3.0,
                3.0,
                3.0,
                2.0,
                2.001,
                3.0,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.1",
                "5 <- INIT",
                "6 <- 0.1",
                "7 <- 0.1",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 * 6 = 30 (left: 4 30  || 3 + 9 = 12 (left: 12 27)",
                "4 + 5 = 9 (left: 6 9 10)",
                "6 - 4 = 2 (left: 2 5 10)",
                "10 / 5 = 2 (left: 4 6 ",
                "5 * 6 = 30 (left: 4 30  || 10 + 3 = 13 (left: 5 13)",
                "6 + 10 = 16 (left: 4 5 16)",
                "5 * 6 = 30 (left: 4 30  || 4 * 30 = 120 (left: 120)",
                "5 * 6 = 30 (left: 4 30  || 4 * 30 = 120 (left: 120)",
                "4 + 5 = 9 (left: 6 9 10)",
                "6 - 4 = 2 (left: 2 5 10)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                60.0,
                0.002,
                60.0,
                0.003,
                0.0,
                3.0,
                2.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.1",
                "2 <- 0.1",
                "3 <- 1.3",
                "4 <- 1.8",
                "5 <- 1.3",
                "6 <- 1.3",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 + 6 = 10 (left: 10)",
                "5 * 6 = 30 (left: 4 30  || Input: 5 25",
                "5 * 6 = 30 (left: 4 30  || 2 + 3 = 5 (left: 5 5)",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 9 10) || 10 / 6 = 1.6666666666666667 (left: 1.666",
                "10 / 5 = 2 (left: 4 6  || Input: 3 5 7",
                "10 / 5 = 2 (left: 4 6  || 6 - 4 = 2 (left: 2)",
                "6 + 10 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "6 + 10 = 16 (left: 4 5 16) || 16 / 4 = 4 (left: 5 4)",
                "10 / 5 = 2 (left: 4 6  || Input: 3 9 "
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                60.0,
                0.003,
                0.003,
                0.003,
                0.002,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.5",
                "2 <- 0.1",
                "3 <- 0.3",
                "4 <- 1.5",
                "5 <- 1.3",
                "6 <- 2.3",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 6 - 4 = 2 (left: 2)",
                "6 + 10 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "5 * 6 = 30 (left: 4 30  || 30 - 4 = 26 (left: 26)",
                "4 * 5 = 20 (left: 6 10 20) || 20 - 10 = 10 (left: 6 10 10)",
                "6 + 10 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "10 / 5 = 2 (left: 4 6  || Input: 3 9 ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "4 + 6 = 10 (left: 5 10 10)",
                "6 + 10 = 16 (left: 4 5 16) || 4 + 5 = 9 (left: 9 16)",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                0.003,
                0.003,
                60.0,
                1.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 0.5",
                "2 <- 1.5",
                "3 <- 0.1",
                "4 <- 3.9",
                "5 <- 3.9",
                "6 <- 1.5",
                "7 <- 3.9",
                "8 <- 1.5",
                "9 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n8 - 3 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nAnswer: (3 + 5) * (3 + 5) = 24",
                "4 + 5 = 9 (left: 6 9 10) || 6 + 9 = 15 (left: 10 15)",
                "6 + 10 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "5 * 6 = 30 (left: 4 30  || 4 * 30 = 120 (left: 120)",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * 3 * 2 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 4\nSteps:\n3 + 8 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((3 + 8) * 4) - 11 = 24",
                "6 + 10 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 8\nSteps:\n3 * 8 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 * 8) - (8 - 3) = 24",
                "6 + 10 = 16 (left: 4 5 16) || 4 + 5 = 9 (left: 9 16)",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                60.0,
                0.002,
                60.0,
                3.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 3.9",
                "2 <- 4.7",
                "3 <- 4.7",
                "4 <- 4.7",
                "5 <- 3.9",
                "6 <- 4.5",
                "7 <- 4.5",
                "8 <- INIT",
                "9 <- 4.9"
            ]
        },
        "Step 5": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 + 10 + 6 = 24 (left: 24)\nAnswer: ((2 * (3 + 6)) - 4) + 10 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\nAnswer: 3 * (3 * 8) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 3) * 5 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                3.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 5.4",
                "2 <- 3.9",
                "3 <- 5.4",
                "4 <- 3.6",
                "5 <- 5.1",
                "6 <- 3.9",
                "7 <- 5.9",
                "8 <- 5.0",
                "9 <- 5.1"
            ]
        },
        "Step 6": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * (3 * 2) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 8\nSteps:\n3 + 3 = 6 (left: 4 6 8)\n6 * 4 = 24 (left: 24 8)\n24 / 8 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 216 (left: 216)\nAnswer: ((3 + 3) * 4) / ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * 3 + 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 2 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 9) - 8) * (3 * 4) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 6 8\n\n6 * 3 = 18 (left: 3 8 18)\n18 - 8 = 10 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\n\nAnswer: ((6 * 3) - 8) * 10 - 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\nAnswer: (3 * 5) - (6 - (3 * 3)) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 6.7",
                "2 <- 6.6",
                "3 <- 6.9",
                "4 <- 5.2",
                "5 <- 3.6",
                "6 <- 6.7",
                "7 <- 6.0",
                "8 <- 6.2",
                "9 <- 6.1"
            ]
        },
        "Step 7": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((3 * 3) - 6) * 9 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 / 3 = 2 (left: 2 9 24)\n2 * 9 = 18 (left: 18 24)\n18 + 24 = 42 (left: 42)\nAnswer: (3 * 8) + (6 / 3) * 9 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n4 - 3 = 1 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 7) + (4 - 3)) + 2 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 4 6 7\nSteps:\n3 * 7 = 21 (left: 4 6 21)\n21 - 6 = 15 (left: 4 15)\n15 + 4 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 4 + 5 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 5 8\nSteps:\n3 * 5 = 15 (left: 3 8 15)\n8 - 3 = 5 (left: 5 15)\n5 * 15 = 75 (left: 75)\n75 / 3 = 25 (left: 25)\n25 - 8 = 17 (left: 17)\n17 + 5 = 22 (left: 22)\n22 + ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 5 5 7\nSteps:\n5 + 5 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 2 = 20 (left: 20)\n20 - 10 = 10 (left: 10)\n10 - 7 = 3 (left: 3)\n3 * ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 4 5 6\n\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * ((5 + 6) * 2) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n7 + 8 = 15 (left: 15 18)\n15 + 18 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 8)) - 9 = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.5",
                "1 <- 3.6",
                "2 <- 6.7",
                "3 <- 6.2",
                "4 <- 1.3",
                "5 <- 7.0",
                "6 <- 6.4",
                "7 <- 6.3",
                "8 <- 4.5",
                "9 <- 3.9"
            ]
        },
        "Step 8": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 15 / 10 = 1.5 (left: 1.5 20",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 3 4\nSteps:\n3 + 4 = 7 (left: 3 3 7)\n3 * 3 = 9 (left: 9 7)\n9 / 7 = 1.2857 (left: 1.2857)\nAnswer: (3 * 3) / (4 - 7) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) + 3 / 3",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) / 6) * 4 =",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 14 7)\n14 - 7 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 4) + 7) * (7 +"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.3",
                "1 <- 8.8",
                "2 <- 7.0",
                "3 <- 7.6",
                "4 <- 8.6",
                "5 <- 6.1",
                "6 <- 6.2",
                "7 <- 7.4",
                "8 <- 5.1",
                "9 <- 1.5"
            ]
        },
        "Step 9": {
            "steps": [
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 4 6 8\nSteps:\n3 * 8 = 24 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 24 = 24 (left: 24)\nAnswer: ((3 * 8) + 4) + 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 6 = 19 (left: 19)\n19 + ",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 3 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n20 / 3 = 6.666666666666667 (left: 6.666666666666667)\nAnswer: (4 * 5) / (6 - 3) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 8) + 3) + 3 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) + (9 - 3) = 24",
                "10 / 5 = 2 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 / 5) * 6 = 24 || Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) - (9 - 3) = 24",
                "6 + 10 = 16 (left: 4 5 16) || 16 / 4 = 4 (left: 5 4)"
            ]
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Step 0": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "4 * 2 = 8 (left: 1 8 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "7 - 4 = 3 (left: 1 2 3)",
                "7 - 1 = 6 (left: 2 4 6)",
                "4 + 7 = 11 (left: 1 2 11)",
                "2 * 4 = 8 (left: 1 8 7)",
                "7 - 1 = 6 (left: 2 4 6)",
                "4 - 2 = 2 (left: 1 2 7)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                3.0,
                3.0,
                1.0,
                0.003,
                0.002,
                3.0,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.7",
                "3 <- 0.2",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.3",
                "8 <- 0.2",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "7 - 4 = 3 (left: 1 2 3)",
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7) || 7 + 1 = 8 (left: 8)",
                "2 * 4 = 8 (left: 1 8 7) || 7 + 1 = 8 (left: 8 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "1 + 2 = 3 (left: 3 4 7) || 7 / 3 = 2.333 (left: 2.333)",
                "2 * 4 = 8 (left: 1 8 7) || 1 + 8 = 9 (left: 7 9)",
                "4 - 2 = 2 (left: 1 2 7) || 7 / 2 = 3.5 (left: 1 3.5)"
            ],
            "Evaluation": [
                1.002,
                2.0,
                0.002,
                1.002,
                1.001,
                2.0,
                2.0,
                0.002,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.1",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.2",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 4 = 3 (left: 1 2 3) || 1 * 2 = 2 (left: 2 3)",
                "1 + 2 = 3 (left: 3 4 7) || 7 - 3 = 4 (left: 4)",
                "2 * 4 = 8 (left: 1 8 7) || 7 + 1 = 8 (left: 8 7) || 8 * 7 = 56 (left: 56)",
                "7 - 2 = 5 (left: 1 4 5)",
                "4 + 7 = 11 (left: 1 2 11)",
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7) || 1 + 8 = 9 (left: 7 9)",
                "2 * 4 = 8 (left: 1 8 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "4 + 7 = 11 (left: 1 2 11)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.002,
                21.0,
                2.001,
                2.0,
                0.003,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 0.2",
                "2 <- 0.7",
                "3 <- 2.4",
                "4 <- 0.3",
                "5 <- 2.5",
                "6 <- 2.5",
                "7 <- 2.3",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7) || 7 - 3 = 4 (left: 4 7)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1 7)",
                "2 * 4 = 8 (left: 1 8 7) || 8 + 7 = 15 (left: 15)",
                "4 + 7 = 11 (left: 1 2 11) || 1 + 11 = ",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 + 7 = 11 (left: 3 11)",
                "1 + 2 = 3 (left: 3 4 7) || 3 + 4 = 7 (left: 7 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left:",
                "1 + 2 = 3 (left: 3 4 7)",
                "7 - 2 = 5 (left: 1 4 5)"
            ],
            "Evaluation": [
                0.002,
                21.0,
                0.003,
                0.003,
                60.0,
                1.002,
                0.002,
                0.001,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 2.5",
                "2 <- 2.3",
                "3 <- 3.4",
                "4 <- 3.8",
                "5 <- 3.1",
                "6 <- 0.2",
                "7 <- 3.4",
                "8 <- 3.4",
                "9 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1 7) || 1 * 7 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7) || 7 / 3 = ",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 1 = 4 (left: 4 5)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 * 7 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7) || 7 - 3 = 4 (left: 4 7)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                2.001,
                0.002,
                1.001,
                0.003,
                2.001,
                0.0,
                0.001,
                40.0
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 3.4",
                "4 <- 0.7",
                "5 <- 4.6",
                "6 <- 2.3",
                "7 <- 2.8",
                "8 <- 2.3",
                "9 <- 4.9"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 * 7 = 56 (left: 56)",
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)",
                "1 * 2 = 2 (left: 2 4 7) || 4 - 2 = 2 (left: 2 7)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 3 + 4 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.003,
                0.002,
                0.003,
                0.001,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 4.9",
                "2 <- 3.4",
                "3 <- 2.3",
                "4 <- INIT",
                "5 <- 2.3",
                "6 <- 5.8",
                "7 <- 3.1",
                "8 <- 2.3",
                "9 <- 4.9"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 3 - 4 = -1 (left: -1)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 * 7 = 7 (left: 7)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 4)",
                "1 + 2 = 3 (left: 3 4 7)",
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 4 + 5 = 9 (left: 9)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 3 + 4 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.001,
                1.002,
                3.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 5.8",
                "1 <- 1.1",
                "2 <- 3.4",
                "3 <- 1.1",
                "4 <- 3.1",
                "5 <- 5.8",
                "6 <- 5.8",
                "7 <- 3.4",
                "8 <- 3.4",
                "9 <- 1.5"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 4 + 5 = 9 (left: 9)",
                "1 + 2 = 3 (left: 3 4 7) || 7 - 3 = 4 (left: 4 4)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 4 7) || 7 - 4 = 3 (left: 3 7)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || Possible next steps:",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 4 / 5 = 0.8 (left: 0.8)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 * 7 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 4 7) || 3 * 4 = 12 (left: 12 7)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.002,
                0.001,
                0.001,
                0.003,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 5.8",
                "2 <- 2.5",
                "3 <- 3.4",
                "4 <- 4.9",
                "5 <- 2.3",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 5.8",
                "9 <- 4.6"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 4) || 4 + 4 = 8 (left: 8)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 5 - 4 = 1 (left: 1)",
                "1 + 2 = 3 (left: 3 4 7) || 3 * 4 = 12 (left: 12 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 5 + 5 = 10 (left: 10)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 * 7 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 4 + 5 = 9 (left: 9)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 + 7 = 15 (left: 15)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.001,
                0.001,
                1.002,
                0.003,
                0.0,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 5.8",
                "2 <- 6.4",
                "3 <- 4.9",
                "4 <- 3.4",
                "5 <- 4.9",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 3.4",
                "9 <- 3.1"
            ]
        },
        "Step 9": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || Possible next steps:",
                "1 + 2 = 3 (left: 3 4 7) || 7 / 3 = 2.33 (left: 2.33 4)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "7 - 2 = 5 (left: 1 4 5) || 4 - 1 = 3 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "1 + 2 = 3 (left: 3 4 7) || 4 - 3 = 1 (left: 1 7) || 7 + 1 = 8 (left: 8)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)"
            ]
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Step 0": {
            "steps": [
                "8 / 2 = 4 (left: 4 5 ",
                "11 - 2 = 9 (left: 5 8 9)",
                "5 * 2 = 10 (left: 10 8 11)",
                "5 * 8 = 40 (left: 2 40 11)",
                "2 + 5 = 7 (left: 7 8 11)",
                "5 * 2 = 10 (left: 10 8 11)",
                "2 + 5 = 7 (left: 7 8 11)",
                "5 * 8 = 40 (left: 2 40 11)",
                "5 + 8 = 13 (left: 2 13 11)",
                "11 - 8 = 3 (left: 2 3 11)"
            ],
            "Evaluation": [
                2.0,
                3.0,
                0.003,
                2.001,
                2.0,
                1.002,
                3.0,
                1.002,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11) || 11 + 2 = 13 (left: 40 13)",
                "11 - 2 = 9 (left: 5 8 9)",
                "11 - 2 = 9 (left: 5 8 9) || 5 * 8 = 40 (left: 9 40)",
                "5 + 8 = 13 (left: 2 13 11)",
                "8 + 11 = 19 (left: 2 5 19)",
                "11 - 2 = 9 (left: 2 8 9)",
                "2 + 5 = 7 (left: 7 8 11)",
                "2 * 5 = 10 (left: 10 8 11)",
                "11 - 2 = 9 (left: 2 5 9)",
                "8 / 2 = 4 (left: 4 5  || 5 - 4 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.002,
                3.0,
                0.003,
                0.003,
                1.002,
                2.001,
                3.0,
                2.001,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.6",
                "5 <- 1.6",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- 0.8"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11)",
                "11 - 5 = 6 (left: 2 6 8)",
                "5 + 8 = 13 (left: 2 13 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 / 7 = 1.14285714286 (left: 1.14285714286 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8)",
                "11 - 2 = 9 (left: 2 5 9) || 9 / 2 = 4.5 (",
                "5 + 8 = 13 (left: 2 13 11)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9)",
                "5 + 8 = 13 (left: 2 13 11) || 13 - 2 = 11 (left: 11 11)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                2.001,
                0.003,
                1.001,
                60.0,
                0.003,
                1.002,
                20.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.5",
                "1 <- 2.5",
                "2 <- 2.8",
                "3 <- 2.5",
                "4 <- INIT",
                "5 <- 2.5",
                "6 <- 2.5",
                "7 <- 0.6",
                "8 <- 2.5",
                "9 <- 2.5"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 6 - 4 = ",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 6 / 3 = 2 (left: 2 9)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "8 * 11 = 88 (left: 2 5 ",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 7 = 4 (left: 7 4)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 2.5",
                "2 <- 2.5",
                "3 <- 2.5",
                "4 <- 0.4",
                "5 <- 3.9",
                "6 <- 2.5",
                "7 <- 3.9",
                "8 <- 2.2",
                "9 <- 3.9"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.6667 (left: 2.6667)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5 8)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "11 - 5 = 6 (left: 2 6 8) || 2 + 6 = 8 (left: 8 8)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                60.0,
                1.001,
                1.002,
                3.0,
                40.0,
                3.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 2.5",
                "2 <- 2.8",
                "3 <- 4.7",
                "4 <- 4.7",
                "5 <- 4.3",
                "6 <- 4.9",
                "7 <- 4.9",
                "8 <- 1.5",
                "9 <- 2.7"
            ]
        },
        "Step 5": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5 9)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 7 - 3 = 4 (left: 4 2)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9)",
                "5 + 8 = 13 (left: 2 13 11) || 11 / 2 = 5.5 ("
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.001,
                60.0,
                0.003,
                60.0,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 5.5",
                "1 <- INIT",
                "2 <- 5.7",
                "3 <- 5.5",
                "4 <- 4.7",
                "5 <- 5.9",
                "6 <- 2.8",
                "7 <- 4.9",
                "8 <- 4.3",
                "9 <- 3.9"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 9 * ",
                "5 * 2 = 10 (left: 10 8 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 4 - 9 = -5 (left: -5 9)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5 9)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 7 / 2 = 3.",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5 9)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.002,
                0.002,
                0.003,
                0.003,
                1.002,
                0.002,
                40.0,
                1.002
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 5.7",
                "2 <- 4.3",
                "3 <- 5.5",
                "4 <- 3.9",
                "5 <- 3.9",
                "6 <- 4.9",
                "7 <- 6.1",
                "8 <- 1.8",
                "9 <- 5.9"
            ]
        },
        "Step 7": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 ^ 8 = 6561 (left: 6561)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 4 * 9 = 36 (left: 9 36)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "5 * 2 = 10 (left: 10 8 11) || 10 - 8 = 2 (left: 2 11)",
                "11 - 2 = 9 (left: 2 5 9) || 9 - 2 = 7 (left: 5 7)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 5 * 10 = 50"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.001,
                0.002,
                0.002,
                0.003,
                0.003,
                40.001,
                20.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.7",
                "1 <- 4.3",
                "2 <- 2.5",
                "3 <- 7.7",
                "4 <- 4.3",
                "5 <- 5.9",
                "6 <- 6.8",
                "7 <- 5.9",
                "8 <- 4.3",
                "9 <- 4.7"
            ]
        },
        "Step 8": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5 8)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5 8)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 + 11 = 12",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 4 - 9 = -5 (left: -5)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.001,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 7.7",
                "1 <- 6.8",
                "2 <- 5.5",
                "3 <- 7.7",
                "4 <- 5.9",
                "5 <- 7.9",
                "6 <- 5.5",
                "7 <- 5.7",
                "8 <- 7.7",
                "9 <- 5.7"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || Possible next steps:",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "11 - 2 = 9 (left: 2 8 9) || 8 / 2 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 + 11 = 12",
                "2 + 5 = 7 (left: 7 8 11) || 8 - 7 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)"
            ]
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Step 0": {
            "steps": [
                "13 - 4 = 9 (left: ",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 - 4 = 9 (left: ",
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 4 = 9 (left: ",
                "13 - 4 = 9 (left: ",
                "13 + 3 = 16 (left: 4 4 16)",
                "3 + 4 = 7 (left: 4 4 13)",
                "4 - 3 = 1 (left: 1 4 13)",
                "4 / 3 = 1.33 (left: 1.33 4 13)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.0,
                1.002,
                0.0,
                0.0,
                20.002,
                60.0,
                0.002,
                3.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 0.6",
                "2 <- 0.7",
                "3 <- INIT",
                "4 <- 0.7",
                "5 <- 0.6",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 0.7",
                "9 <- 0.7"
            ]
        },
        "Step 1": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16) || Possible next steps:",
                "13 + 3 = 16 (left: 4 4 16) || 4 - 4 = 0 (left: 0 16)",
                "3 + 4 = 7 (left: 4 4 13) || 4 / 4 = 1 (left: 1 4 13)",
                "4 / 3 = 1.33 (left: 1.33 4 13)",
                "3 + 4 = 7 (left: 4 4 13) || 4 * 4 = 16 (left: 16 13)",
                "13 + 3 = 16 (left: 4 4 16) || Input: 1 1 8",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 + 3 = 16 (left: 4 4 16)",
                "3 + 4 = 7 (left: 4 4 13) || 4 / 4 = 1 (left: 1 4 13)",
                "3 + 4 = 7 (left: 4 4 13) || Input: 6 2 9"
            ],
            "Evaluation": [
                0.003,
                0.002,
                2.0,
                3.0,
                0.003,
                0.003,
                2.001,
                1.002,
                3.0,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.6",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.3",
                "5 <- 0.6",
                "6 <- INIT",
                "7 <- 0.7",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 4 = 12 (left: 4 12 13)",
                "13 + 3 = 16 (left: 4 4 16) || 16 - 4 = 12 (left: 4 12)",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 - 4 = 9 (left: ",
                "4 / 3 = 1.33 (left: 1.33 4 13) || 13 / 4 = 3.25 (left: 1.33 3.25)",
                "13 + 3 = 16 (left: 4 4 16) || 4 - 4 = 0 (left: 0 16)",
                "13 - 4 = 9 (left: ",
                "3 + 4 = 7 (left: 4 4 13) || 4 * 4 = 16 (left: 16 13)",
                "4 - 3 = 1 (left: 1 4 13)",
                "4 - 3 = 1 (left: 1 4 13)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                2.0,
                0.0,
                1.001,
                20.002,
                0.0,
                0.003,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.0",
                "2 <- 0.7",
                "3 <- 0.7",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.6",
                "7 <- 0.7",
                "8 <- 0.7",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16)",
                "3 * 4 = 12 (left: 4 12 13) || 4 * 3 = 12 (left: 12 13)",
                "3 + 4 = 7 (left: 4 4 13) || 4 - 4 = 0 (left:",
                "3 + 4 = 7 (left: 4 4 13) || 4 + 13 = 17 (left: 4 17)",
                "13 - 4 = 9 (left: ",
                "4 - 3 = 1 (left: 1 4 13)",
                "13 + 3 = 16 (left: 4 4 16) || 4 * 4 = 16 (left: 16 16)",
                "3 + 4 = 7 (left: 4 4 13) || 13 - 4 = 9 (left: 4 9)",
                "3 + 4 = 7 (left: 4 4 13) || 4 / 4 = 1 (left: 1 13)",
                "13 - 3 = 10 (left: 4 4 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                1.0,
                0.003,
                0.0,
                1.002,
                0.003,
                20.002,
                0.001,
                40.0
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 3.9",
                "4 <- 0.6",
                "5 <- 2.5",
                "6 <- 3.5",
                "7 <- 3.7",
                "8 <- 3.9",
                "9 <- 3.7"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10) || Input: 3 5",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)",
                "13 + 3 = 16 (left: 4 4 16) || 16 - 4 = 12 (left: 4 12)",
                "13 + 3 = 16 (left: 4 4 16) || 4 - 4 = 0 (left: 0 16) || Input: 5 7",
                "4 - 3 = 1 (left: 1 4 13) || 13 / 1 = 13 (left: 4 13)",
                "3 + 4 = 7 (left: 4 4 13) || 13 - 4 = 9 (left: 4 9) || 3 + 6 = 9 (left: 2 9)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "3 + 4 = 7 (left: 4 4 13) || 13 - 4 = 9 (left: 4 9) || 4 * 9 = 36 (left: 9 36)"
            ],
            "Evaluation": [
                21.001,
                0.003,
                20.001,
                60.0,
                0.003,
                0.003,
                0.003,
                0.001,
                20.001,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.8",
                "2 <- 2.2",
                "3 <- 4.2",
                "4 <- 4.3",
                "5 <- 0.6",
                "6 <- 0.7",
                "7 <- 4.0",
                "8 <- 3.9",
                "9 <- 4.2"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 - 10 = -2 (left: -2)",
                "3 * 4 = 12 (left: 4 12 13) || 13 - 4 = 9 (left:",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 / 10 = 0.8 (left: 0.8)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "13 + 3 = 16 (left: 4 4 16) || 4 * 4 = 16 (left: 16 16)",
                "3 + 4 = 7 (left: 4 4 13) || 4 + 4 = 8 (left: 8 13)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4) || 4 / 2.5 = 1.6 (left: 1.6)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 / 10 = 0.8 (left: 0.8)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                1.0,
                0.001,
                0.001,
                0.003,
                0.002,
                0.002,
                21.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.8",
                "1 <- 2.9",
                "2 <- 4.2",
                "3 <- 4.2",
                "4 <- 4.3",
                "5 <- 3.7",
                "6 <- 2.5",
                "7 <- 4.3",
                "8 <- 3.9",
                "9 <- 3.9"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 / 10 = 0.8 (left: 0.8)",
                "4 - 3 = 1 (left: 1 4 13) || 13 / 1 = 13 (left: 4 13)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 * 10 = 80 (left: 80)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "3 + 4 = 7 (left: 4 4 13) || 13 - 4 = 9 (left: 4 9) || 7 - 1 = 6 (left: 3",
                "13 + 3 = 16 (left: 4 4 16) || 4 - 4 = 0 (left: 0 16) || 16 - 16 = 0 (left: 0)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                60.0,
                0.002,
                0.0,
                0.003,
                0.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 2.2",
                "2 <- 6.3",
                "3 <- 0.7",
                "4 <- 4.2",
                "5 <- 6.9",
                "6 <- 4.3",
                "7 <- 3.7",
                "8 <- 6.8",
                "9 <- 4.0"
            ]
        },
        "Step 7": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16) || 4 * 4 = 16 (left:",
                "3 * 4 = 12 (left: 4 12 13) || 13 - 12 = 1 (left: 4 1)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "3 + 4 = 7 (left: 4 4 13) || 13 - 4 = ",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 10 / 8 = 1.25 (left: 1.25)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 - 10 =",
                "3 + 4 = 7 (left: 4 4 13) || 13 - 4 = 9 (left: 4 9) || 9 / 4 = 2.25 (left: 2.25 9)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4) || 4 - 2.5 = 1.5 (left: 1.5)"
            ],
            "Evaluation": [
                40.0,
                21.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.0,
                0.001
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 7.1",
                "2 <- 5.8",
                "3 <- 4.3",
                "4 <- 6.3",
                "5 <- 4.0",
                "6 <- 6.9",
                "7 <- 7.1",
                "8 <- 3.9",
                "9 <- 4.3"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "3 * 4 = 12 (left: 4 12 13) || 13 - 12 = 1 (left: 4 1) || 4 / 1 = 4 (left: 4)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4) || 2.5 + 4 = 6.5 (left: 6.5)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "3 * 4 = 12 (left: 4 12 13) || 13 - 12 = 1 (left: 4 1) || 4 - 1 = 3 (left: 3)",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                40.0,
                0.001,
                0.003,
                0.001,
                0.001,
                0.002,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 3.9",
                "2 <- 6.3",
                "3 <- 5.8",
                "4 <- 4.3",
                "5 <- 6.3",
                "6 <- 6.3",
                "7 <- 6.9",
                "8 <- 6.8",
                "9 <- 7.1"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18) || 18 + 8 = 26 (left: 8 26)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 - 10 = -2 (left: -2)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18) || No possible next steps.",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18) || 18 + 8 = 26 (left: 8 26)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "3 * 4 = 12 (left: 4 12 13) || 13 - 12 = 1 (left: 4 1) || 4 - 1 = 3 (left: 3 1)"
            ]
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Step 0": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13)",
                "6 + 7 = 13 (left: 8 9 13)",
                "6 + 7 = 13 (left: 8 9 13)",
                "7 * 8 = 56 (left: 6 9 56)",
                "7 + 8 = 15 (left: 6 9 15)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "9 / 6 = 1.5 (left: 1.",
                "7 * 8 = 56 (left: 6 9 56)",
                "9 - 6 = 3 (left: 3 7 8)",
                "8 + 9 = 17 (left: 6 7 17)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                1.002,
                2.001,
                3.0,
                2.001,
                0.0,
                1.002,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 0.3",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 7 = 2 (left: 2 6 ",
                "8 * 9 = 72 (left: 6 7 ",
                "7 * 9 = 63 (left: 6 8 ",
                "8 * 9 = 72 (left: 6 7 ",
                "8 / 9 = 0",
                "7 * 8 = 56 (left: 6 9 56)",
                "9 / 7 = 1.286 (left",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 * 8 = 56 (left: 6 9 56) || 6 + 9 = 15 (left: 15 56)",
                "6 + 7 = 13 (left: 8 9 13)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                1.002,
                0.002,
                0.003,
                3.0,
                2.0,
                2.001,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 0.7",
                "5 <- INIT",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- 1.7"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 7 = 42 (left: 8 9 42)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 9 = 6 (left: 6 9)",
                "7 * 9 = 63 (left: 6 8  || 6 * 8 = 48 (left: 48)",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 * 8 = 56 (left: 6 9 56) || 9 + 6 = 15 (left: 15 56)",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56)",
                "9 - 6 = 3 (left: 3 7 8)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 9 = 6 (left: 6 9)"
            ],
            "Evaluation": [
                2.0,
                0.003,
                0.003,
                21.001,
                0.003,
                0.003,
                1.002,
                1.002,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 1.7",
                "2 <- 0.4",
                "3 <- 0.1",
                "4 <- 2.0",
                "5 <- INIT",
                "6 <- 2.0",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 0.5"
            ]
        },
        "Step 3": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9) || 0.857 * 8 = 6.856 (left: 6.856 9)",
                "7 + 8 = 15 (left: 6 9 15) || 6 * 9 = 54 (left: 54 15)",
                "7 + 8 = 15 (left: 6 9 15) || 15 / 3 = 5 (left: 5 9)",
                "6 + 7 = 13 (left: 8 9 13) || 9 / 8 = 1.125 (left: 1.125 13)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67)",
                "8 * 9 = 72 (left: 6 7 ",
                "6 * 7 = 42 (left: 8 9 42) || 42 - 8 = 34 (left: 9 34)",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 * 8 = 56 (left: 6 9 56)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 8 - 0.857 = 7.143 (left: 7.143 9)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                0.003,
                0.002,
                1.002,
                1.002,
                0.002,
                2.001,
                1.001,
                1.001
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 1.9",
                "2 <- 2.3",
                "3 <- 3.7",
                "4 <- 2.3",
                "5 <- 1.9",
                "6 <- INIT",
                "7 <- 2.3",
                "8 <- 2.3",
                "9 <- 2.6"
            ]
        },
        "Step 4": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15) || 9 / 6 = 1.5 (left: 1.5)",
                "6 + 7 = 13 (left: 8 9 13) || 9 + 13 = 22 (left: 8 22)",
                "7 + 8 = 15 (left: 6 9 15) || Input: 3 3",
                "7 + 8 = 15 (left: 6 9 15) || Input: 3 5 7 9",
                "7 + 8 = 15 (left: 6 9 15) || 3 + ",
                "6 + 7 = 13 (left: 8 9 13) || 9 - 8 = 1 (left: 1 13)",
                "6 * 7 = 42 (left: 8 9 42)",
                "7 + 8 = 15 (left: 6 9 15) || Input: 3 7 21",
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || -10 + 5 = -5 (left: -5 3)"
            ],
            "Evaluation": [
                0.001,
                1.002,
                0.003,
                0.003,
                0.003,
                1.002,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 2.3",
                "2 <- 1.0",
                "3 <- 2.3",
                "4 <- 0.5",
                "5 <- 2.3",
                "6 <- 1.1",
                "7 <- 1.1",
                "8 <- 0.5",
                "9 <- 2.7"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13) || 9 - 8 = 1 (left: 1 13) || 5 * 3 =",
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "9 - 7 = 2 (left: 2 6  || 2 + 6 = 8 (left: 8)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15 15)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 9 - 0.857 = 8.143 (left: 8 8.143)",
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "8 * 9 = 72 (left: 6 7  || 6 - 7 = -1 (left: -1)",
                "8 * 9 = 72 (left: 6 7  || 7 / 6 = 1.16666666667 (left: 1.16666666667)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 0.857 + 8 = 8.857 (left: 8 9)",
                "9 - 6 = 3 (left: 3 7 8) || 7 + 8 = 15 (left: 3 15)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                2.001,
                0.003,
                0.0,
                0.001,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 5.4",
                "2 <- 2.3",
                "3 <- 1.0",
                "4 <- 2.3",
                "5 <- 3.4",
                "6 <- 2.3",
                "7 <- 3.7",
                "8 <- 0.1",
                "9 <- 2.3"
            ]
        },
        "Step 6": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15) || 9",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 9 - 0.857 = 8.143 (left: 8 8.143) || 8 - 8.143 = -0.143 (left: -0.143)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15)",
                "9 - 7 = 2 (left: 2 6  || 2 * 6 = 12 (left: 12)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 - 4.67 = 3.33 (left: 3.33)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15 15)",
                "7 + 8 = 15 (left: 6 9 15) || 9 / 3 = 3 (left: 3)",
                "6 + 7 = 13 (left: 8 9 13) || 8 + 9 = 17 (left: 13 17)",
                "7 + 8 = 15 (left: 6 9 15) || Possible next steps:"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.1",
                "2 <- 5.4",
                "3 <- 3.7",
                "4 <- 2.3",
                "5 <- 2.3",
                "6 <- 0.4",
                "7 <- 4.5",
                "8 <- 2.6",
                "9 <- 1.5"
            ]
        },
        "Step 7": {
            "steps": [
                "6 * 7 = 42 (left: 8 9 42)",
                "6 + 7 = 13 (left: 8 9 13) || 9 / 8 = 1.125 (left: 1.125 13)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 9 - 0.857 = 8.143 (left: 8 8.143) || 8 * 8.143 = 65.144 (left: 65.144)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 9 = 6 (left: 6 9)",
                "7 + 8 = 15 (left: 6 9 15) || 9",
                "7 + 8 = 15 (left: 6 9 15) || 15 / 3 = 5 (left: 5 15)",
                "6 + 7 = 13 (left: 8 9 13) || 9 - 8 = 1 (left: 1 13) || 13 - 1 = 12 (left: 12)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024)",
                "7 * 8 = 56 (left: 6 9 56) || 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 9 56)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 7.8",
                "2 <- 7.8",
                "3 <- 7.8",
                "4 <- 7.8",
                "5 <- 7.8",
                "6 <- 7.8",
                "7 <- 7.0",
                "8 <- 7.8",
                "9 <- 7.8"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 6 = 3 (left: 3 7 8)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 + 2 = 5 (left: 5 0 24)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 + 0 = 3 (left: 2 3 4)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 * 0 = 0 (left:",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 302 - 4 = 298 (left: 298)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 6 + 8 = 14 (left: 14)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 * 0 = 0 (left: 0 2 4)",
                "6 * 7 = 42 (left: 8 9 42) || 9 * 8 = 72 (left: 72 42)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 30 + 24 = 54 (left: 54)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 2 * 4 = 8 (left: 8 3)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                40.0,
                0.003,
                0.003,
                60.0,
                40.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.2",
                "1 <- 8.2",
                "2 <- 7.8",
                "3 <- 8.3",
                "4 <- 8.6",
                "5 <- 2.3",
                "6 <- 8.1",
                "7 <- 8.6",
                "8 <- 8.9",
                "9 <- 8.3"
            ]
        },
        "Step 9": {
            "steps": [
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 + 0 = 3 (left: 2 3 4) || 2 * 3 = 6 (left: 4 6)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 + 0 = 3 (left: 2 3 4) || 4 / 2 = 2 (left: 2 2)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 + 4 = 7 (left: 0 2 ",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 * 0 = 0 (left: || 3 / 0 = undefined",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 2 * 4 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15 15)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 + 2 = 5 (left: 5 0 24) || Possible next steps:",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 2 * 4 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 30 + 24 = 54 (left: 54 2 4)",
                "7 * 8 = 56 (left: 6 9 56) || 9 * 6 = 54 (left: 54 56) || 54 * 56 = 3024 (left: 3024) || 3 * 0 = 0 (left: || 3 / 0 = undefined"
            ]
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Step 0": {
            "steps": [
                "11 / 1 = 11 (left: 11 11 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 * 1 = 11 (left: 11 11 13)",
                "11 + 1 = 12 (left: 11 12 13)",
                "13 - 11 = 2 (left: 1 11 2)",
                "1 + 11 = 12 (left: 11 12 13)",
                "11 / 1 = 11 (left: 11 11 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "13 - 1 = 12 (left: 11 11 12)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                3.0,
                60.0,
                2.001,
                21.001,
                0.003,
                21.001,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.8",
                "4 <- 0.5",
                "5 <- 0.3",
                "6 <- 0.3",
                "7 <- 0.7",
                "8 <- 0.3",
                "9 <- 0.7"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 ",
                "11 + 1 = 12 (left: 11 12 13) || 11 - 12 = -1 (left: 13)",
                "11 + 1 = 12 (left: 11 12 13) || 13 / 11 = 1.181818181",
                "1 + 11 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 12 = 1 (left: 11 1)",
                "11 + 1 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 / 11 = 1.181818181818182",
                "11 + 1 = 12 (left: 11 12 13) || Input: 3 4",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                1.001,
                0.003,
                0.001,
                1.002,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.7",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- 0.7",
                "5 <- 0.7",
                "6 <- 0.7",
                "7 <- 0.3",
                "8 <- 0.3",
                "9 <- 0.7"
            ]
        },
        "Step 2": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "13 - 1 = 12 (left: 11 11 12)",
                "1 + 11 = 12 (left: 11 12 13) || 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13)",
                "11 + 1 = 12 (left: 11 12 13) || 12 + 13 = 25 (left: 11 25)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                0.003,
                1.0,
                20.001,
                41.0,
                0.003,
                0.002,
                20.001
            ],
            "Resampling": [
                "0 <- 2.6",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- 2.6",
                "4 <- 2.6",
                "5 <- 2.9",
                "6 <- 2.5",
                "7 <- 2.1",
                "8 <- 0.2",
                "9 <- 2.6"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || Input: 6.5",
                "11 + 11 = 22 (left: 11 13 ",
                "11 + 1 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 12 / 2 = 6 (left: 6 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 12 - 2 = 10 (left: 10 13)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 / 132 = 0.09848 (left: 0.09848)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 132 - 13 = 119 (left: 119)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "11 * 1 = 11 (left: 11 11 13) || 11 / 11 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 2 + 12 = 14 (left: 14 13)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.6",
                "2 <- 0.7",
                "3 <- 0.8",
                "4 <- 0.7",
                "5 <- 2.1",
                "6 <- 2.1",
                "7 <- 2.9",
                "8 <- 0.3",
                "9 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 2 * 12 = 24 (left: 13 24)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 12 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 12 + 13 = 25 (left: 11 25)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 12 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)",
                "11 + 1 = 12 (left: 11 12 13) || 12 * 13 = 156 (left: 11)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.003,
                0.002,
                0.0,
                0.003,
                0.003,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 4.9",
                "2 <- 2.1",
                "3 <- 0.3",
                "4 <- 2.5",
                "5 <- 0.5",
                "6 <- 3.1",
                "7 <- 2.9",
                "8 <- 2.6",
                "9 <- 2.6"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "11 + 1 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "11 + 11 = 22 (left: 11 13  || 11 / 13 = 0.846 (left: 0.846)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 * 132 = 1716 (left: 1716)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 12 / 2 = 6 (left:",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 12 / 2 = 6 (left: 6 13)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                60.0,
                0.001,
                0.003,
                1.0,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.9",
                "2 <- 5.4",
                "3 <- 5.9",
                "4 <- 2.1",
                "5 <- 5.9",
                "6 <- 3.1",
                "7 <- 5.4",
                "8 <- 4.9",
                "9 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 12 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "11 + 11 = 22 (left: 11 13  || 11 * 13 = 143 (left: 143)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14"
            ],
            "Evaluation": [
                0.001,
                0.003,
                20.001,
                2.001,
                20.002,
                60.0,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 2.1",
                "2 <- 6.4",
                "3 <- 6.2",
                "4 <- 6.9",
                "5 <- 5.9",
                "6 <- 3.1",
                "7 <- 2.1",
                "8 <- 6.5",
                "9 <- 4.9"
            ]
        },
        "Step 7": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10) || 10 * 8 = 80 (left: 8)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12) || 12 / 6 = 2 (left: 2 12) ",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10) || 10 + 10 = 20 (left: 10 20)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13)",
                "11 + 11 = 22 (left: 11 13  || 11 + 13 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 11) * (11 - 13) = 24"
            ],
            "Evaluation": [
                0.001,
                60.0,
                0.003,
                0.003,
                0.003,
                60.0,
                0.001,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.9",
                "1 <- 6.9",
                "2 <- 7.8",
                "3 <- 2.5",
                "4 <- 7.9",
                "5 <- 4.9",
                "6 <- 7.8",
                "7 <- 6.5",
                "8 <- 7.8",
                "9 <- 7.5"
            ]
        },
        "Step 8": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 - 132 = -119 (left: -119)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 11) * (11 - 13) = 24",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "11 + 11 = 22 (left: 11 13  || 11 + 13 = 24 (left: 24) || Answer: (11 + 11) + 13 = 24"
            ],
            "Evaluation": [
                0.002,
                0.003,
                40.0,
                0.001,
                0.002,
                60.0,
                0.003,
                20.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 7.7",
                "2 <- 8.7",
                "3 <- 2.5",
                "4 <- 2.6",
                "5 <- 7.1",
                "6 <- 8.8",
                "7 <- 7.7",
                "8 <- 7.1",
                "9 <- 6.4"
            ]
        },
        "Step 9": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12) || 12 / 6 = 2 (left: 2 12)  || 12 / 2 = 6 (left: 6)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (11 + 1) * (13 - 11) = 24",
                "11 + 11 = 22 (left: 11 13  || 11 + 13 = 24 (left: 24) || Answer: (11 + 11) + 13 = 24 || Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: 3 * 8 = 24",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12 13) || 13 - 2 = 11 (left: 11)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12) || 12 / 6 = 2 (left: 2 12)  || 12 * 2 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 11) * (11 - 13) = 24",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (11 + 1) * (13 - 11) = 24",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12) || 12 / 6 = 2 (left: 2 12)  || 2 + 12 = 14",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12) || 12 - 6 = 6 (left: 6)"
            ]
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Step 0": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11)",
                "8 / 1 = 8 (left: 8 10 ",
                "8 / 1 = 8 (left: 8 10 ",
                "8 + 1 = 9 (left: 9 10 11)",
                "10 - 1 = 9 (left: 8 9 11)",
                "10 - 1 = 9 (left: 8 9 11)",
                "1 + 8 = 9 (left: 9 10 11)",
                "8 - 1 = 7 (left: 7 8 ",
                "10 - 1 = 9 (left: 8 9 11)",
                "11 - 10 = 1 (left: 1 8 "
            ],
            "Evaluation": [
                1.001,
                2.001,
                1.001,
                0.003,
                3.0,
                2.001,
                2.001,
                0.003,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.6",
                "8 <- INIT",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11)",
                "10 - 1 = 9 (left: 1 9 11)",
                "8 / 1 = 8 (left: 8 10  || 8 * 10 = 80 (left: 80)",
                "1 + 8 = 9 (left: 9 10 11)",
                "8 / 1 = 8 (left: 8 10 ",
                "11 - 1 = 10 (left: 8 10 10)",
                "8 / 1 = 8 (left: 8 10 ",
                "1 + 8 = 9 (left: 9 10 11) || 9 * 10 = 90 (left: 11 90)",
                "1 + 8 = 9 (left: 9 10 11)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 10 11)"
            ],
            "Evaluation": [
                3.0,
                2.001,
                0.002,
                3.0,
                0.0,
                1.002,
                20.0,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.0",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.6"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 8 = 2 (left: 1 2 ",
                "1 + 8 = 9 (left: 9 10 11) || 10 + 11 = 21 (left: 9 21)",
                "10 + 1 = 11 (left: 8 11 11)",
                "10 + 1 = 11 (left: 8 11)",
                "1 + 8 = 9 (left: 9 10 11) || 10 + 11 = 21 (left: 9 21)",
                "8 / 1 = 8 (left: 8 10  || 10 - 8 = 2 (left: 2)",
                "11 - 10 = 1 (left: 1 8 1)",
                "11 - 10 = 1 (left: 1 8 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                2.001,
                1.001,
                0.003,
                0.002,
                1.001,
                2.001,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.9",
                "1 <- INIT",
                "2 <- 2.9",
                "3 <- 2.9",
                "4 <- 2.9",
                "5 <- 0.2",
                "6 <- 2.9",
                "7 <- 1.6",
                "8 <- 1.6",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "1 * 8 = 8 (left: 8 10 11)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps as there are no other numbers provided to perform operations with.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the given input of 18.",
                "8 / 1 = 8 (left: 8 10  || 8 / 10 = 0.8 (left: 0.8)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 - 8 = 10 (left: 8 10)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18)",
                "8 / 1 = 8 (left: 8 10  || Input: 4 8",
                "8 / 1 = 8 (left: 8 10 11)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                0.003,
                0.003,
                0.002,
                1.002,
                60.0,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 0.8",
                "2 <- 2.9",
                "3 <- 1.3",
                "4 <- 2.9",
                "5 <- 2.9",
                "6 <- 1.6",
                "7 <- 2.9",
                "8 <- 2.9",
                "9 <- 2.7"
            ]
        },
        "Step 4": {
            "steps": [
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "10 - 1 = 9 (left: 8 9 11) || 8 / 9 = 0.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 * 8 = 144 (left: 8)",
                "1 + 8 = 9 (left: 9 10 11) || 11 - 9 = 2 (left: 2 10)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There is only one possible next step: 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps as there are no other numbers to operate with. The final result is 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || None, as there is only one number left.",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                3.0,
                0.003,
                0.003,
                20.0,
                0.003,
                0.003,
                1.0
            ],
            "Resampling": [
                "0 <- 2.9",
                "1 <- 2.7",
                "2 <- 2.9",
                "3 <- 3.7",
                "4 <- 1.6",
                "5 <- 3.7",
                "6 <- 2.9",
                "7 <- 1.3",
                "8 <- 2.9",
                "9 <- 3.7"
            ]
        },
        "Step 5": {
            "steps": [
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "11 - 10 = 1 (left: 1 8 11) || 8 - 1 = 7 (left: 7 11)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps as there are no other numbers to operate with.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps for the number 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 - 2 = 16 (left: 16)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "1 + 8 = 9 (left: 9 10 11) || 11 / 9 = 1.22 (left: 1.22 10)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 / 2 = 9 (left: 9)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18."
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                0.003,
                40.0,
                0.002,
                0.003,
                0.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.6",
                "1 <- 2.9",
                "2 <- 1.8",
                "3 <- 2.7",
                "4 <- 3.7",
                "5 <- 2.9",
                "6 <- 5.4",
                "7 <- 3.7",
                "8 <- INIT",
                "9 <- 2.9"
            ]
        },
        "Step 6": {
            "steps": [
                "8 / 1 = 8 (left: 8 10  || 10 - 8 = 2 (left: 2) ",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 / 8 = 2.25 (left: 2.25)",
                "1 + 8 = 9 (left: 9 10 11) || Input: 5 5",
                "11 - 10 = 1 (left: 1 8 11) || 8 - 1 = 7 (left: 7 11)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || No possible next steps with the number 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || None, since there is only one number left.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "1 * 8 = 8 (left: 8 10 11)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 / 2 = 9"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 3.7",
                "2 <- 3.7",
                "3 <- 3.7",
                "4 <- 1.3",
                "5 <- 5.4",
                "6 <- 4.9",
                "7 <- 2.9",
                "8 <- 2.9",
                "9 <- 4.6"
            ]
        },
        "Step 7": {
            "steps": [
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 / 8 = 2.25 (left: 8)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || No possible next steps with the given input.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "1 + 8 = 9 (left: 9 10 11) || 10 + 11 = 21 (left: 9 21)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps as there are no more numbers to operate on. The final result is 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There is only one possible next step:",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 / 2 = 9"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                40.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 1.3",
                "2 <- 5.4",
                "3 <- 3.7",
                "4 <- 0.5",
                "5 <- 7.6",
                "6 <- 7.6",
                "7 <- 2.9",
                "8 <- 7.6",
                "9 <- 7.6"
            ]
        },
        "Step 8": {
            "steps": [
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || None, as there are no more numbers left to operate on.",
                "1 + 8 = 9 (left: 9 10 11) || Input: 3 4 5",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 + 8 = 26 (left: 8 26)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || None, as there is only one number left.",
                "10 - 1 = 9 (left: 8 9 11) || 8 * 9 = 72 (left: 11 72)",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || 18 + 8 = 26 (left: 8)",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || 18 - 2 = 16 (left: 16)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 + 8 = 26 (left: 8 26)",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || There is only one possible next step:"
            ],
            "Evaluation": [
                0.0,
                0.003,
                1.002,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                20.0,
                20.0
            ],
            "Resampling": [
                "0 <- 8.9",
                "1 <- 3.9",
                "2 <- 8.9",
                "3 <- 8.8",
                "4 <- 2.9",
                "5 <- 8.9",
                "6 <- 3.7",
                "7 <- 7.4",
                "8 <- 7.6",
                "9 <- 5.4"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "8 / 1 = 8 (left: 8 10 11) || 8 + 10 = 18 (left: 11 18)",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || No possible next steps as there is only one number left.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || 18 / 2 = 9",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || There is only one possible next step:",
                "1 + 8 = 9 (left: 9 10 11) || 10 + 11 = 21 (left: 9 21) || 9 * 21 = 189 (left: 189)",
                "11 - 10 = 1 (left: 1 8 11) || 11 - 1 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || 18 - 8 = 10 (left: 8)",
                "8 / 1 = 8 (left: 8 10  || 8 + 10 = 18 (left: 18) || None, as there is only one number provided."
            ]
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Step 0": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "6 - 3 = 3 (left: 2 3 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "9 - 6 = 3 (left: 2 3 9)",
                "9 / 3 = 3 (left: 2 3 6)",
                "9 - 3 = 6 (left: 2 6 6)",
                "2 + 3 = 5 (left: 5 6 9)",
                "9 - 3 = 6 (left: 2 6 6)"
            ],
            "Evaluation": [
                1.001,
                3.0,
                3.0,
                0.003,
                22.0,
                1.002,
                22.0,
                60.0,
                3.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.4",
                "2 <- 0.8",
                "3 <- 0.7",
                "4 <- 0.6",
                "5 <- 0.7",
                "6 <- INIT",
                "7 <- 0.7",
                "8 <- 0.6",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 6) || Input: 3 6",
                "2 + 3 = 5 (left: 5 6 9) || Input: 3 4 7 10",
                "2 + 3 = 5 (left: 5 6 9) || 6 * 9 = ",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "6 / 2 = 3 (left: 3 3 9)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6) || 2 + 3 = 5 (left: 5 6)",
                "6 / 2 = 3 (left: 3 3 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                20.002,
                3.0,
                0.003,
                1.0,
                1.001,
                41.0,
                0.003,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 0.8",
                "3 <- 1.3",
                "4 <- 0.9",
                "5 <- 0.7",
                "6 <- 0.7",
                "7 <- INIT",
                "8 <- 1.2",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "2 + 3 = 5 (left: 5 6 9) || 9 / 5 = 1.8 (left: 1.8)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 * 2 = 12 (left: 6 12)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "6 + 3 = 9 (left: 2 6 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 * 9 =  || 6 * 9 = 54",
                "3 * 2 = 6 (left: 6 6 9)"
            ],
            "Evaluation": [
                2.0,
                20.001,
                0.001,
                40.0,
                40.0,
                0.003,
                40.0,
                1.002,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.3",
                "2 <- 0.9",
                "3 <- 2.6",
                "4 <- 2.6",
                "5 <- 2.3",
                "6 <- 2.3",
                "7 <- 2.1",
                "8 <- 0.7",
                "9 <- 0.9"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3) || 3 / 3 = 1 (left: 2 1)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 8 = 10 (left: 10)",
                "9 - 3 = 6 (left: 2 6 6) || 2 + 6 = 8 (left: 6 8)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || No possible next steps with the input 18.",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 3 - 2 = 1 (left: 1 8)",
                "9 - 3 = 6 (left: 2 6 6) || Input: 3 4 6",
                "9 - 3 = 6 (left: 2 6 6) || 2 * 6 = 12 (left: 6 12)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                0.002,
                0.0,
                0.003,
                0.003,
                40.0,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.7",
                "2 <- 3.9",
                "3 <- 3.9",
                "4 <- 2.6",
                "5 <- 0.7",
                "6 <- 3.9",
                "7 <- 3.9",
                "8 <- 3.9",
                "9 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 + 6 = 9 (left: 9)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 - 6 = -2 (left: -2)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 * 4 = 24 (left:",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 - 6 = -2 (left: -2)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 8 = 10 (left: 8)"
            ],
            "Evaluation": [
                60.0,
                0.0,
                0.002,
                2.0,
                0.0,
                20.0,
                60.0,
                0.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 3.6",
                "2 <- 1.7",
                "3 <- 4.9",
                "4 <- 2.3",
                "5 <- 0.9",
                "6 <- 2.4",
                "7 <- 3.6",
                "8 <- 4.0",
                "9 <- 2.6"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 3 - 2 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 + 6 = 9 (left: 9)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps for the input 18.",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 3 * 9 = 27 (left: 27)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 3 - 2 = 1 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (9 - 3) * (6 - 2) = 24",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)"
            ]
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Step 0": {
            "steps": [
                "3 * 5 = 15 (left: 1 15 9)",
                "5 + 9 = 14 (left: 1 3 14)",
                "9 - 1 = 8 (left: 3 5 8)",
                "9 - 1 = 8 (left: 3 5 ",
                "3 - 1 = 2 (left: 2 5 9)",
                "1 + 3 = 4 (left: 4 5 9)",
                "3 + 5 = 8 (left: 1 8 9)",
                "5 * 9 = 45 (left: 1 3 ",
                "5 * 9 = 45 (left: 1 3 ",
                "1 + 3 = 4 (left: 4 5 9)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                3.0,
                1.001,
                0.003,
                2.001,
                1.002,
                0.0,
                0.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.9",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.9",
                "7 <- 0.2",
                "8 <- 0.5",
                "9 <- 0.5"
            ]
        },
        "Step 1": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 ",
                "1 + 3 = 4 (left: 4 5 9) || 9 - 4 = 5 (left: 5 9)",
                "1 * 3 = 3 (left: 3 5 9)",
                "1 + 3 = 4 (left: 4 5 9) || 4 * 5 = 20 (left: 20 9)",
                "1 * 3 = 3 (left: 3 5 9)",
                "5 * 9 = 45 (left: 1 3 ",
                "1 + 3 = 4 (left: 4 5 9) || 9 + 4 = 13 (left: 13)",
                "9 - 1 = 8 (left: 3 5 8) || 5 - 3 = 2 (left: 2 8)",
                "1 + 3 = 4 (left: 4 5 9) || 5 * 4 = 20 (left: 20 9)",
                "1 + 3 = 4 (left: 4 5 9) || 4 + 5 = 9 (left: 9 9)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                60.0,
                0.003,
                60.0,
                0.001,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- 1.2",
                "7 <- 1.4",
                "8 <- 1.2",
                "9 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 5 3)",
                "1 + 3 = 4 (left: 4 5 9)",
                "1 * 3 = 3 (left: 3 5 9) || Input: 4 6 10",
                "1 * 3 = 3 (left: 3 5 9) || 5 / 3 = 1.67 (left: 1.67 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 5 + 9 = 14 (left: 3 14)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 3 5)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 3 9)"
            ],
            "Evaluation": [
                60.0,
                1.002,
                2.001,
                0.003,
                0.0,
                20.002,
                0.003,
                0.002,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 2.8",
                "4 <- 1.2",
                "5 <- INIT",
                "6 <- 1.2",
                "7 <- 1.2",
                "8 <- INIT",
                "9 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 5 / 3 = 1.67 (left: 1.67 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 4 + 6 = 10 (left: 10)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || Input: 4 6",
                "5 * 3 = 15 (left: 1 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 3 = 6 (left: 5 6)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left:",
                "1 + 3 = 4 (left: 4 5 9)",
                "1 * 3 = 3 (left: 3 5 9) || 5 - 3 = 2 (left: 2 9)"
            ],
            "Evaluation": [
                2.001,
                22.0,
                0.002,
                0.003,
                0.003,
                0.003,
                1.001,
                0.0,
                2.0,
                0.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 2.8",
                "2 <- 2.0",
                "3 <- 3.1",
                "4 <- 1.4",
                "5 <- 2.0",
                "6 <- 3.1",
                "7 <- 1.2",
                "8 <- 2.0",
                "9 <- 2.8"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 - 9 = 6 (left: 6)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 3 + 5 = 8 (left: 8 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 * 15 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 * 4 = 12 (left: 12)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                40.001,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 1.4",
                "2 <- 2.2",
                "3 <- 1.2",
                "4 <- 3.1",
                "5 <- 1.2",
                "6 <- 2.8",
                "7 <- 3.0",
                "8 <- 1.4",
                "9 <- 1.4"
            ]
        },
        "Step 5": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 5 / 3 = 1.67 (left: 1.67 9) || 1.67 / 9 = 0.1856 (left: 0.1856)",
                "1 * 3 = 3 (left: 3 5 9) || 3 + 5 = 8 (left: 8 9)",
                "1 + 3 = 4 (left: 4 5 9) || 9 / 4 = 2.25 (not an integer)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 5 + 3 = 8 (left: 8 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || Input: 5 5",
                "1 * 3 = 3 (left: 3 5 9) || 5 / 3 = 1.67 (left: 1.67 9) || 1.67 + 9 = 10.67 (left: 10.67)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 3 5)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 5 3)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                22.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002,
                20.001
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 5.3",
                "2 <- INIT",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 5.3",
                "6 <- 2.0",
                "7 <- 1.2",
                "8 <- 1.4",
                "9 <- 0.3"
            ]
        },
        "Step 6": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 5 3) || 5 - 3 = 2 (left: 2)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "5 + 9 = 14 (left: 1 3 14)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 - 9 = 6 (left: 6)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 3 + 5 = 8 (left: 8 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 3 5)",
                "9 - 1 = 8 (left: 3 5  || 5 - 3 = 2 (left: 2)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                20.002,
                0.001,
                0.001,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 4.7",
                "2 <- 2.8",
                "3 <- 1.2",
                "4 <- 1.4",
                "5 <- 2.8",
                "6 <- 5.3",
                "7 <- 2.0",
                "8 <- 5.3",
                "9 <- 1.4"
            ]
        },
        "Step 7": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 3 5)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1) ",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 - 9 = 6 (left: 6)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 5 + 9 = 14 (left: 3 14)"
            ],
            "Evaluation": [
                0.0,
                0.001,
                20.001,
                1.001,
                60.0,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 3.1",
                "2 <- 6.2",
                "3 <- 7.4",
                "4 <- 2.0",
                "5 <- 7.4",
                "6 <- 7.2",
                "7 <- 7.4",
                "8 <- 6.2",
                "9 <- 5.9"
            ]
        },
        "Step 8": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 5 3) || 5 + 3 = 8 (left: 8)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "5 + 9 = 14 (left: 1 3 14) || 14 / 3 = 4.666666666666667 (left: 1 4.666666666666",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75) || 0.75 + 2 = 2.75",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24)",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 1 = 13 (left: 3 13)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 5 3) || 3 - 5 = -2 (left: -2)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                1.001,
                60.0,
                0.003,
                0.003,
                0.003,
                60.0,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 8.7",
                "1 <- 5.3",
                "2 <- 1.2",
                "3 <- 8.3",
                "4 <- 8.2",
                "5 <- INIT",
                "6 <- 7.2",
                "7 <- 2.5",
                "8 <- 8.7",
                "9 <- 2.8"
            ]
        },
        "Step 9": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "1 * 3 = 3 (left: 3 5 9) || 5 * 9 = 45 (left: 3 45)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "5 + 9 = 14 (left: 1 3 14) || 14 / 3 = 4.666666666666667 (left: 1 4.666666666666 || 1 + 4.666666666666 = 5.666666666666 (left: 5.666666666666)",
                "3 * 5 = 15 (left: 1 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75) || 0.75 * 2 = 1.5",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || ",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)"
            ]
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Step 0": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 ",
                "12 - 7 = 5 (left: 3 5 12)",
                "12 - 7 = 5 (left: 3 5 ",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "12 - 3 = 9 (left: 3 7 9)",
                "3 * 3 = 9 (left: 9 7 12)",
                "3 * 7 = 21 (left: 21 12)",
                "3 + 3 = 6 (left: 6 7 12)"
            ],
            "Evaluation": [
                22.0,
                2.001,
                0.001,
                22.0,
                20.002,
                41.0,
                2.001,
                2.001,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.5",
                "2 <- 0.4",
                "3 <- 0.5",
                "4 <- 0.0",
                "5 <- 0.9",
                "6 <- 0.9",
                "7 <- 0.3",
                "8 <- 0.3",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "3 + 3 = 6 (left: 6 7 12) || 7 / 6 = 1.17 (left: 1.17 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 + 3 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 - 3 = 1 (left: 1 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 4  || 3 * 4 = 12 (left: 12)",
                "3 + 3 = 6 (left: 6 7 12) || 12 / 6 = 2 (left: 7 2)",
                "3 + 3 = 6 (left: 6 7 12) || 12 - 6 = 6 (left: 6 6)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12)",
                "7 - 3 = 4 (left: 3 4 12) || 3 + 4 = 7 (left: 7 12)",
                "3 + 3 = 6 (left: 6 7 12) || 6 + 7 = 13 (left: 13 12)"
            ],
            "Evaluation": [
                0.003,
                1.001,
                0.002,
                1.002,
                0.003,
                1.001,
                20.002,
                40.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- 1.6",
                "2 <- 0.0",
                "3 <- 0.9",
                "4 <- 1.6",
                "5 <- 1.7",
                "6 <- 1.7",
                "7 <- INIT",
                "8 <- 0.9",
                "9 <- 1.7"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 / 3 = 4 (left: 8 4)",
                "3 + 3 = 6 (left: 6 7 12) || 12 - 6 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4  || 4 / 3 = 1.33 (left: 1.33)",
                "3 + 3 = 6 (left: 6 7 12) || 6 + 7 = 13 (left: 13 12)",
                "3 + 3 = 6 (left: 6 7 12) || 12 - 6 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2.67 (left: 2.67 12)",
                "3 * 7 = 21 (left: 3 12 21)",
                "3 + 3 = 6 (left: 6 7 12) || 6 + 7 = 13 (left: 13 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 / 3 = 4 (left: "
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                41.0,
                0.003,
                2.001,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 2.5",
                "1 <- 2.5",
                "2 <- 0.0",
                "3 <- 0.9",
                "4 <- 2.5",
                "5 <- 0.3",
                "6 <- 1.7",
                "7 <- 0.5",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "3 + 3 = 6 (left: 6 7 12) || 7 + 12 = 19 (left: 6 19)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 3 = 9 (left: 8 9)",
                "7 - 3 = 4 (left: 3 4 12) || 3 * 4 = 12 (left:",
                "12 - 3 = 9 (left: 3 7 9)",
                "12 - 3 = 9 (left: 3 7 9)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                0.0,
                0.003,
                40.001,
                0.003,
                0.002,
                0.001,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 0.9",
                "5 <- 2.5",
                "6 <- 3.0",
                "7 <- 3.4",
                "8 <- 3.4",
                "9 <- 3.4"
            ]
        },
        "Step 4": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 12 = ",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12)",
                "3 / 3 = 1 (left: 1 7 12)",
                "3 + 3 = 6 (left: 6 7 12) || Input: 1 2 5 19",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                2.001,
                0.003,
                20.002,
                0.003,
                0.003,
                3.0,
                22.0
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 3.4",
                "2 <- 4.2",
                "3 <- 0.5",
                "4 <- 4.2",
                "5 <- 2.5",
                "6 <- 1.7",
                "7 <- 4.5",
                "8 <- 4.9",
                "9 <- 4.2"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 4 + 3 = 7 (left:",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 4 + 3 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 + 8 = 11 (left: 11 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 + 9 = 13 (left: 9 13)",
                "3 + 3 = 6 (left: 6 7 12) || 7 + 12 = 19 (left: 6 19)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)"
            ],
            "Evaluation": [
                0.0,
                60.0,
                0.003,
                0.003,
                1.002,
                0.003,
                60.0,
                60.0,
                60.0,
                20.002
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 4.2",
                "2 <- 5.8",
                "3 <- 2.5",
                "4 <- 4.2",
                "5 <- 0.5",
                "6 <- 1.6",
                "7 <- 2.5",
                "8 <- 2.5",
                "9 <- 5.9"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 9 36)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "3 + 3 = 6 (left: 6 7 12) || 12 - 6 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1) ",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 + 4 = 16 (left: 16",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 4 + 3 = 7 (left: 7 12)",
                "3 + 3 = 6 (left: 6 7 12) || 12 - 6 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.003,
                40.001,
                0.003,
                60.0,
                0.002,
                0.003,
                0.002,
                41.0,
                41.0,
                21.001
            ],
            "Resampling": [
                "0 <- 5.8",
                "1 <- 6.3",
                "2 <- 6.3",
                "3 <- 6.1",
                "4 <- 3.4",
                "5 <- 6.8",
                "6 <- 6.8",
                "7 <- 1.7",
                "8 <- 3.0",
                "9 <- 5.1"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2.67 (left: 2.67 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12) || 24 / 12 = 2 (left: 2)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                40.001,
                0.001,
                0.003,
                0.003,
                60.0,
                41.0
            ],
            "Resampling": [
                "0 <- 7.8",
                "1 <- 6.1",
                "2 <- 6.8",
                "3 <- 7.8",
                "4 <- 5.6",
                "5 <- 5.7",
                "6 <- 4.2",
                "7 <- 5.1",
                "8 <- 5.8",
                "9 <- 7.4"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12) || 24 - 12 = 12 (left: 12)",
                "7 - 3 = 4 (left: 3 4 12) || 3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 - 3 = 5 (left: 5 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                1.002,
                60.0,
                20.002,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 8.6",
                "2 <- 3.4",
                "3 <- 8.8",
                "4 <- 5.8",
                "5 <- 8.4",
                "6 <- 8.1",
                "7 <- 8.1",
                "8 <- 7.9",
                "9 <- 5.6"
            ]
        },
        "Step 9": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 - 8 = -5 (",
                "7 - 3 = 4 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 + 2 = 14 (left: 14)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (7 - 3) * (3 * 3) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 + 12 = ",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 - 3 = 5 (left: 5 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 / 3 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10 12)"
            ]
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Step 0": {
            "steps": [
                "4 * 5 = 20 (left: 7 9)",
                "5 * 7 = 35 (left: 4 9 35)",
                "5 * 7 = 35 (left: 4 9 35)",
                "4 -",
                "4 / 5 = 0.8 (left: 0.8 7 9)",
                "4 + 5 = 9 (left: 7 9)",
                "7 * 9 = 63 (left: 4 5 63)",
                "4 * 5 = 20 (left: 7 9 20)",
                "5 + 7 = 12 (left: 4 9)",
                "7 + 9 = 16 (left: 4 5 16)"
            ],
            "Evaluation": [
                0.002,
                1.001,
                0.003,
                0.003,
                3.0,
                1.002,
                1.001,
                1.002,
                40.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 0.8",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.8",
                "5 <- 0.8",
                "6 <- INIT",
                "7 <- 0.8",
                "8 <- 0.8",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 + 7 = 12 (left: 4 9) || 5 + 7 = 12 (left: 12)",
                "5 + 7 = 12 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "5 + 7 = 12 (left: 4 12 9)",
                "4 * 5 = 20 (left: 7 9)",
                "5 + 7 = 12 (left: 4 9) || 9 / 4 = 2.25 (left: 2.25)",
                "5 + 7 = 12 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "4 * 5 = 20 (left: 7 9 20)",
                "5 + 7 = 12 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "5 + 7 = 12 (left: 4 9) || Input: 7 3 5",
                "4 * 5 = 20 (left: 7 9 20)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                2.001,
                1.002,
                0.002,
                0.002,
                1.002,
                0.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 1.9",
                "2 <- 0.8",
                "3 <- INIT",
                "4 <- 1.2",
                "5 <- 0.8",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 0.8"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 7 = 12 (left: 4 9) || 4 - 9 = -5 (left: -5 9)",
                "4 * 5 = 20 (left: 7 9 20) || 20 / 9 = 2.22 (left: 2.22 9)",
                "5 + 7 = 12 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "4 * 5 = 20 (left: 7 9 20)",
                "5 + 7 = 12 (left: 4 12 9) || 12 - 4 = 8 (left: 8 9)",
                "5 + 7 = 12 (left: 4 9) || 4 + 9 = 13 (left: 9)",
                "5 * 7 = 35 (left: 4 35 9)",
                "5 * 7 = 35 (left: 4 9 35)",
                "5 * 7 = 35 (left: 4 9)",
                "5 + 7 = 12 (left: 4 9) || 3 + 11 = 14 (left: 11 14)"
            ],
            "Evaluation": [
                0.001,
                1.002,
                0.002,
                2.001,
                0.003,
                0.002,
                1.002,
                2.001,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.8",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 0.8",
                "4 <- 0.8",
                "5 <- 2.8",
                "6 <- 0.8",
                "7 <- 0.7",
                "8 <- 2.8",
                "9 <- 2.8"
            ]
        },
        "Step 3": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9)",
                "5 * 7 = 35 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "5 * 7 = 35 (left: 4 9) || Possible next steps:",
                "5 + 7 = 12 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36)",
                "5 + 7 = 12 (left: 4 9) || Possible next steps:",
                "4 * 5 = 20 (left: 7 9 20) || 9 - 7 = 2 (left: 2 9 20)",
                "5 * 7 = 35 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.002,
                20.002,
                60.0,
                0.003,
                1.002,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 2.8",
                "1 <- 3.4",
                "2 <- 0.8",
                "3 <- 3.5",
                "4 <- 3.9",
                "5 <- 3.5",
                "6 <- 2.8",
                "7 <- 3.4",
                "8 <- 3.4",
                "9 <- 2.8"
            ]
        },
        "Step 4": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || Input: 3 7 10",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 + 36 = 45 (left: 45)",
                "5 + 7 = 12 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible operations to perform on the number 36.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 + 36 = 45 (left: 45)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 18 = 2 (left: 2)",
                "5 * 7 = 35 (left: 4 9) || 5 + 10 = 15 (left: 15 15)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 + 36 = 45 (left: 45)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27)",
                "5 * 7 = 35 (left: 4 9) || 4 + 9 = 13 (left: 9 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.5",
                "1 <- 3.5",
                "2 <- 3.5",
                "3 <- 2.8",
                "4 <- 3.4",
                "5 <- 2.8",
                "6 <- 0.8",
                "7 <- 2.3",
                "8 <- 1.2",
                "9 <- 3.5"
            ]
        },
        "Step 5": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 - 2 = 34 (left: 34)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9) || 3 * 6 = 18",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 + 36 = 45 (left: 45)",
                "5 * 7 = 35 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36)",
                "4 * 5 = 20 (left: 7 9 20) || 7 + 9 = 16 (left: 16 20)",
                "5 + 7 = 12 (left: 4 12 9) || 9 - 4 = 5 (left: 4 5)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                0.003,
                0.002,
                0.003,
                60.0,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.5",
                "1 <- 5.6",
                "2 <- 3.4",
                "3 <- 3.5",
                "4 <- 5.6",
                "5 <- 3.9",
                "6 <- 3.5",
                "7 <- 2.7",
                "8 <- 1.6",
                "9 <- 5.6"
            ]
        },
        "Step 6": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps with the input 36.",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 / 36 = 0.25 (left: 0.25 9)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 3 = 12 (left: 12)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 cannot be broken down further as it is already a single number.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 * 4 = 36 (left: 36)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9 35) || 35 / 4 = ",
                "4 * 5 = 20 (left: 7 9 20) || Input: 2 3",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps with only one number provided."
            ],
            "Evaluation": [
                0.003,
                0.003,
                2.001,
                0.002,
                0.003,
                40.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 0.8",
                "2 <- 5.6",
                "3 <- 3.9",
                "4 <- 5.6",
                "5 <- 5.6",
                "6 <- 3.4",
                "7 <- 5.6",
                "8 <- 2.8",
                "9 <- 3.5"
            ]
        },
        "Step 7": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27)",
                "5 + 7 = 12 (left: 4 9) || 4 - 9 = -5 (left: -5) ",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || None, as there is only one number provided.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || None, as there is only one number provided.",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27 36)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps for the number 36 as it is already a single number.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 - 2 = 34 (left: 34)"
            ],
            "Evaluation": [
                0.0,
                0.0,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                20.0,
                0.002
            ],
            "Resampling": [
                "0 <- 6.5",
                "1 <- 5.6",
                "2 <- 3.5",
                "3 <- 5.6",
                "4 <- 3.4",
                "5 <- 5.6",
                "6 <- 3.4",
                "7 <- 6.5",
                "8 <- 5.6",
                "9 <- 2.8"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 * 4 = 36 (left: 36) || 36 * 8 = 288 (left: 8)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 12 = 3 (left: 3)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 + 2 = 38",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 / 9 = 4 (left: 4)",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || No possible next steps as there is only one number.",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 7 * 3 = 21 (left: 5 21)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 * 4 = 36 (left: 36) || No further steps can be taken with the input of 36.",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps for the number 36 as it is already the final result.",
                "5 * 7 = 35 (left: 4 9) || 4 + 9 = 13 (left: 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 3.5",
                "1 <- 3.5",
                "2 <- 8.9",
                "3 <- 7.8",
                "4 <- 8.9",
                "5 <- 3.5",
                "6 <- 5.6",
                "7 <- 8.9",
                "8 <- 3.4",
                "9 <- 8.9"
            ]
        },
        "Step 9": {
            "steps": [
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || None. This is the final result.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || There is only one number, so there are no possible next steps.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || No possible next steps as there is only one number.",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps with only one number given.",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "5 + 7 = 12 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 9 * 36 = 324 (left: 324)",
                "5 * 7 = 35 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 - 4 = 32 (left: 32)"
            ]
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Step 0": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "13 - 1 = 12 (left: 2 8 ",
                "2 * 8 = 16 (left: 1 16 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "2 + 8 = 10 (left: 1 10 ",
                "13 + 1 = 14 (left: 2 8 14)",
                "2 * 8 = 16 (left: 1 16 13)",
                "2 * 8 = 16 (left: 1 16 13)",
                "8 - 2 = 6 (left: 1 6 13)"
            ],
            "Evaluation": [
                60.0,
                1.001,
                2.001,
                3.0,
                60.0,
                60.0,
                0.003,
                1.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.5",
                "5 <- 0.5",
                "6 <- 0.4",
                "7 <- 0.4",
                "8 <- 0.4",
                "9 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 8 = 10 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13)",
                "2 + 8 = 10 (left: 1 10  || 1 * 10 = 10 (left: 10)",
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9)",
                "1 + 2 = 3 (left: 3 8 13) || 8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13) || 8 - 3 = 5 (left: 5 8)",
                "1 + 2 = 3 (left: 3 8 13) || 8 / 3 = 2.66667 (left: 2.66667 13)"
            ],
            "Evaluation": [
                0.001,
                20.0,
                0.003,
                0.003,
                0.002,
                20.001,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- 0.5",
                "3 <- 0.0",
                "4 <- 0.0",
                "5 <- 0.0",
                "6 <- 1.5",
                "7 <- 0.0",
                "8 <- 0.5",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "13 + 1 = 14 (left: 2 8 14)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 8 11)",
                "2 + 8 = 10 (left: 1 10  || Possible next steps:",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: ",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10)",
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9) || There are no possible next steps with the given input.",
                "1 + 2 = 3 (left: 3 8 13) || 13 / 3 = ",
                "2 + 8 = 10 (left: 1 10  || 1 + 10 = 11 (left: 10)",
                "8 + 2 = 10 (left: 1 10 13)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                0.0,
                20.002,
                21.001,
                0.003,
                0.003,
                0.001,
                1.002
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 0.5",
                "2 <- 1.5",
                "3 <- 0.0",
                "4 <- 0.0",
                "5 <- 0.5",
                "6 <- 1.5",
                "7 <- 0.4",
                "8 <- 1.5",
                "9 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9) || There are no valid operations that can be performed with the given input to reach the target numbers.",
                "2 + 8 = 10 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9) || There are no possible next steps for the input -9.",
                "1 + 2 = 3 (left: 3 8 13) || 8 / 3 = 2.67 (left: 2.67 13)",
                "1 + 2 = 3 (left: 3 8 13) || 13 / 3 = ",
                "2 + 8 = 10 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9) || There are no possible next steps with the input of -9.",
                "1 + 2 = 3 (left: 3 8 13) || 8 / 3 = 2.67 (left: 2.67 13)",
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9) || There are no possible next steps with the input of -9.",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 * 10 = 80 (left: 80)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 0.0",
                "2 <- 0.2",
                "3 <- 2.4",
                "4 <- 1.1",
                "5 <- 0.0",
                "6 <- 0.4",
                "7 <- 1.1",
                "8 <- 0.4",
                "9 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 8 = 10 (left: 1 10  || 1 - 10 = -9 (left: -9) || There are no possible next steps with the input of -9.",
                "1 + 2 = 3 (left: 3 8 13) || 8 - 3 = 5 (left: 5 13)",
                "13 - 1 = 12 (left: 2 8  || 2 + 8 = 10 (left: 10)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13) || 13 - 24 = -11 (left: -11)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 / 10 = 0.8 (left: 0.8)",
                "1 + 2 = 3 (left: 3 8 13) || 13 / 3 = ",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 8 11 13)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13) || 24 / 13 = 1.8461538461538463 (left: 1.8461538461538463)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.0,
                0.001,
                0.003,
                60.0,
                20.0,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 4.6",
                "2 <- 4.6",
                "3 <- 4.7",
                "4 <- 2.5",
                "5 <- 4.6",
                "6 <- 2.5",
                "7 <- 4.6",
                "8 <- 4.7",
                "9 <- 2.5"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 / 10 = 0.8 (left: 0.8)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps as there are no other numbers given in the input.",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 10 / 8 = 1.25 (left: 1.25)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 - 10 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || 18 / 2 = 9",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 * 10 = 80 (left: 80)"
            ],
            "Evaluation": [
                0.001,
                60.0,
                0.001,
                0.003,
                0.002,
                60.0,
                0.0,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 5.5",
                "1 <- 5.5",
                "2 <- 4.7",
                "3 <- 0.5",
                "4 <- 5.1",
                "5 <- 0.5",
                "6 <- 4.6",
                "7 <- 0.5",
                "8 <- 5.7",
                "9 <- 5.7"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10) || 8 + 10 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "2 + 8 = 10 (left: 1 10  || 10 + 1 = 11 (left: 11)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24",
                "2 + 8 = 10 (left: 1 10  || 1 + 10 = 11 (left: 11)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "2 + 8 = 10 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24"
            ]
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 6 6 9)",
                "6 - 4 = 2 (left: 2 6 9)",
                "4 + 6 = 10 (left: 6 6 9)",
                "9 - 6 = 3 (left: ",
                "4 * 6 = 24 (left: 6 6 24)",
                "9 - 6 = 3 (left: ",
                "9 - 6 = 3 (left: 4 6 3)",
                "4 + 6 = 10 (left: 6 6 9)",
                "4 + 6 = 10 (left: 6 6 9 10)",
                "9 - 6 = 3"
            ],
            "Evaluation": [
                3.0,
                0.003,
                2.001,
                0.0,
                0.002,
                0.0,
                60.0,
                3.0,
                2.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.6",
                "2 <- 0.6",
                "3 <- 0.6",
                "4 <- 0.6",
                "5 <- 0.0",
                "6 <- 0.6",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3) || 6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 3 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3)",
                "9 - 6 = 3 (left: 4 6 3) || 6 - 4 = 2 (left: 2 3)",
                "4 + 6 = 10 (left: 6 6 9) || Input: 4 5",
                "9 - 6 = 3 (left: 4 6 3) || 4 - 3 = 1 (left: 1)",
                "6 / 4 = 1.5 (left: 4 1.5 9)",
                "9 - 4 = 5",
                "9 - 6 = 3 (left: 4 6 3) || 4 + 6 = 10 (left: 3 10)"
            ],
            "Evaluation": [
                2.001,
                0.002,
                0.001,
                60.0,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.6",
                "2 <- 1.7",
                "3 <- 1.3",
                "4 <- 0.6",
                "5 <- 0.6",
                "6 <- 1.3",
                "7 <- 1.3",
                "8 <- 1.3",
                "9 <- 0.6"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3) || Possible",
                "6 / 4 = 1.5 (left: 4 1.5 9) || 9 + 4 = 13 (left: 1.5 13)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 + 6 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 3 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 + 3 = 27 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.0,
                40.0,
                0.003,
                0.002,
                60.0,
                0.003,
                0.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 2.6",
                "2 <- 2.3",
                "3 <- 2.6",
                "4 <- 2.9",
                "5 <- 1.3",
                "6 <- 2.6",
                "7 <- 2.3",
                "8 <- INIT",
                "9 <- 0.6"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 6 / 3 = 2 (left: 4 2)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.66667 (left: 2.66667)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 21)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 21)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3) || 3 + 4 = 7 (left: 6 7)"
            ],
            "Evaluation": [
                0.001,
                20.0,
                0.001,
                2.001,
                0.002,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 2.9",
                "2 <- 0.6",
                "3 <- 2.3",
                "4 <- 3.6",
                "5 <- 3.7",
                "6 <- 3.7",
                "7 <- 0.6",
                "8 <- 3.6",
                "9 <- 3.9"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 3 + 4 = 7 (left: 6 7)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                60.0,
                3.0,
                60.0,
                40.001,
                40.001,
                41.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 2.9",
                "2 <- 3.7",
                "3 <- 4.5",
                "4 <- 1.3",
                "5 <- 3.6",
                "6 <- 4.8",
                "7 <- 4.3",
                "8 <- 3.9",
                "9 <- 3.6"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 / 24 = 0.125",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                40.001,
                60.0,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 3.9",
                "2 <- 0.2",
                "3 <- 4.6",
                "4 <- 4.7",
                "5 <- 4.3",
                "6 <- 5.3",
                "7 <- 2.6",
                "8 <- 0.6",
                "9 <- 3.9"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 21) || 21 - 2 = 19 (left: 19)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "4 + 6 = 10 (left: 6 6 9) || 9 / 6 = 1.5 (left: 1.5 9)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || Possible",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                60.0,
                41.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 5.3",
                "2 <- 6.4",
                "3 <- 4.6",
                "4 <- 6.3",
                "5 <- 5.2",
                "6 <- 6.9",
                "7 <- 2.9",
                "8 <- 3.5",
                "9 <- 5.2"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                20.0,
                60.0,
                60.0,
                40.001,
                60.0
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 7.3",
                "2 <- 7.3",
                "3 <- 5.7",
                "4 <- 7.4",
                "5 <- 4.9",
                "6 <- 5.9",
                "7 <- 5.5",
                "8 <- 6.6",
                "9 <- 6.7"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 21)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 + 3 = 27 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                40.0,
                41.0,
                60.0,
                60.0,
                60.0,
                40.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.7",
                "1 <- 8.4",
                "2 <- 7.3",
                "3 <- 4.8",
                "4 <- 5.6",
                "5 <- 3.8",
                "6 <- 7.6",
                "7 <- 2.6",
                "8 <- 8.7",
                "9 <- 8.5"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 - 3 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 + 3 = 11 (left: 11)"
            ]
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Step 0": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)",
                "1 + 4 = 5 (left: 4 5 8)",
                "4 - 1 = 3 (left: 3 4 ",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 / 4 = 1 (left: 1 4 ",
                "4 / 1 = 4 (left: 4 4 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 / 1 = 4 (left: 4 4 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                60.0,
                22.0,
                0.001,
                3.0,
                21.001,
                60.0,
                2.001,
                22.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.2",
                "2 <- 0.9",
                "3 <- INIT",
                "4 <- 0.7",
                "5 <- 0.9",
                "6 <- INIT",
                "7 <- 0.6",
                "8 <- INIT",
                "9 <- 0.5"
            ]
        },
        "Step 1": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "4 - 1 = 3 (left: 3 4  || 4 / 3 = 1.33 (left: 1.33)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "1 + 4 = 5 (left: 4 5 8)",
                "8 - 4 = 4 (left: 1 4 4) || 4 / 1 = 4 (left: 4 4)",
                "1 + 4 = 5 (left: 4 5 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 + 4 = 8 (left: 8 8)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                2.001,
                3.0,
                40.001,
                41.0,
                3.0,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.2",
                "2 <- 1.5",
                "3 <- 0.2",
                "4 <- 0.7",
                "5 <- 0.5",
                "6 <- 0.7",
                "7 <- 1.4",
                "8 <- 0.2",
                "9 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "4 - 1 = 3 (left: 3 4  || 3 * 4 = 12 (left: 12)",
                "4 - 1 = 3 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 - 1 = 3 (left: 3 4  || 4 / 3 = 1.33 (left: 1.33)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8)",
                "4 / 1 = 4 (left: 4 4 8) || 8 / 4 = 2 (left: 2 8)",
                "4 / 1 = 4 (left: 4 4 8) || 8 / 4 = 2 (left: 4 2)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 - 8 = 8 (left: 8)",
                "4 - 1 = 3 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "4 - 1 = 3 (left: 3 4  || 3 * 4 = 12 (left: 4)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                20.001,
                0.003,
                0.003,
                0.001,
                0.0,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.8",
                "2 <- 1.5",
                "3 <- 0.7",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.4",
                "7 <- 0.2",
                "8 <- 1.2",
                "9 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 4 = 2 (left: 2 4 ",
                "1 + 4 = 5 (left: 4 5 8) || 4 * 5 = 20 (left: 20 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "4 / 1 = 4 (left: 4 4 8) || 8 / 4 = 2 (left: 4 2)",
                "4 + 1 = 5 (left: 4 5 8)",
                "1 + 4 = 5 (left: 4 5 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 / 8 = 2 (left: 2)",
                "4 - 1 = 3 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 / 8 = 2 (left: 2 8)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.002,
                2.0,
                3.0,
                0.002,
                0.003,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 0.2",
                "2 <- 3.8",
                "3 <- 0.9",
                "4 <- 1.5",
                "5 <- 3.8",
                "6 <- 0.7",
                "7 <- 1.5",
                "8 <- 0.7",
                "9 <- 3.8"
            ]
        },
        "Step 4": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 - 1 = 3 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 0 + 12 = 12 (left: 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 0 + 12 = 12 (left: 12)",
                "4 / 1 = 4 (left: 4 4 8) || 8 / 4 = 2 (left: 2 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 12 / 0 is undefined"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                1.002,
                0.001,
                60.0,
                21.001,
                0.003,
                60.0,
                21.0
            ],
            "Resampling": [
                "0 <- 4.8",
                "1 <- 4.6",
                "2 <- 4.5",
                "3 <- 1.4",
                "4 <- 2.4",
                "5 <- 3.8",
                "6 <- 4.8",
                "7 <- 3.8",
                "8 <- 4.5",
                "9 <- 4.5"
            ]
        },
        "Step 5": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 / 8 = 2 (left: 2)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 + 8 = 24 (left: 8 24)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 12 - 0 = 12 (left: 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 12 * 0 = 0 (left: 0)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                1.002,
                0.002,
                40.001,
                2.0,
                60.0,
                60.0,
                60.0,
                41.0
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 5.8",
                "2 <- 4.5",
                "3 <- 0.6",
                "4 <- 4.5",
                "5 <- 5.6",
                "6 <- 4.6",
                "7 <- 4.8",
                "8 <- 3.8",
                "9 <- 1.5"
            ]
        },
        "Step 6": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 0 + 12 = 12",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "8 - 4 = 4 (left: 1 4 4) || 4 / 1 = 4 (left: 4 4)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 12 * 0 = 0 (left: 0)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)"
            ],
            "Evaluation": [
                40.001,
                0.003,
                1.001,
                0.003,
                1.001,
                0.003,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 5.8",
                "1 <- 6.9",
                "2 <- 6.9",
                "3 <- 0.2",
                "4 <- 5.6",
                "5 <- 0.7",
                "6 <- 0.9",
                "7 <- 5.9",
                "8 <- 4.6",
                "9 <- 6.9"
            ]
        },
        "Step 7": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 12 * 0 = 0 (left: 0)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 - 1 = 3 (left: 3 4  || 3 * 4 = 12 (left: 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 / 1 = 4 (left: 4 4 8) || Input: 3 3 9",
                "4 + 4 = 8 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                20.002,
                0.002,
                0.001,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 7.5",
                "1 <- 6.9",
                "2 <- 5.7",
                "3 <- 1.5",
                "4 <- 5.9",
                "5 <- 5.8",
                "6 <- 6.9",
                "7 <- 7.5",
                "8 <- 1.5",
                "9 <- 6.9"
            ]
        },
        "Step 8": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 / 8 = 4 (left: 4)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || Input: 3 7",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                1.001,
                21.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 8.3",
                "2 <- 6.9",
                "3 <- 5.7",
                "4 <- 8.9",
                "5 <- 7.9",
                "6 <- 8.9",
                "7 <- 5.7",
                "8 <- 8.9",
                "9 <- 6.9"
            ]
        },
        "Step 9": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8 8) || 2 + 8 = 10 (left: 8 10)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8 8)",
                "4 + 4 = 8 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12) || 12 / 0 = undefined - division by zero is not possible",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "4 + 4 = 8 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)"
            ]
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Step 0": {
            "steps": [
                "10 / 1 = 10 (left: 5 10 ",
                "1 + 5 = 6 (left: 6 10 11)",
                "11 - 10 = 1 (left: 1 5 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "5 * 1 = 5 (left: 5 10 11)",
                "1 * 5 = 5 (left: 5 10 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "1 * 5 = 5 (left: 5 10 11)",
                "1 * 5 = 5 (left: 5 10 11)",
                "1 * 5 = 5 (left: 5 10 11)"
            ],
            "Evaluation": [
                1.001,
                3.0,
                1.002,
                21.001,
                2.001,
                3.0,
                3.0,
                3.0,
                3.0,
                3.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.6",
                "4 <- INIT",
                "5 <- 0.3",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- 0.3",
                "9 <- 0.8"
            ]
        },
        "Step 1": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11)",
                "5 * 10 = 50 (left: 1 50 11)",
                "10 + 1 = 11 (left: 5 11)",
                "10 + 1 = 11 (left: 5 11 11) || 5 + 11 = 16 (left: 11 16)",
                "1 + 5 = 6 (left: 6 10 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11)",
                "1 + 5 = 6 (left: 6 10 11)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11)",
                "10 + 1 = 11 (left: 5 11 11) || 5 + 11 = 16 (left: 11 11 16)",
                "1 * 5 = 5 (left: 5 10 11) || 10 / 5 = 2 (left: 2 11)"
            ],
            "Evaluation": [
                1.001,
                3.0,
                0.002,
                0.003,
                2.001,
                21.0,
                2.001,
                40.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 0.9",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- 1.5",
                "7 <- 0.3",
                "8 <- 1.7",
                "9 <- 0.5"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 5 10 11)",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || Possible next steps:",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 11 / 2.2 = 5 (left: 5)",
                "10 + 1 = 11 (left: 5 11 11) || Possible next steps:",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 1 + 11 = 12",
                "1 * 5 = 5 (left: 5 10 11) || 5 + 10 = 15 (left: 11 15)"
            ],
            "Evaluation": [
                0.001,
                3.0,
                20.001,
                2.001,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- 0.8",
                "3 <- 1.4",
                "4 <- 2.2",
                "5 <- 1.5",
                "6 <- 1.7",
                "7 <- 0.3",
                "8 <- 0.6",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11) || 6 / 10 = 0.6 (left: 0.6 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "1 * 5 = 5 (left: 5 10 11) || 11 / 5 = 2.2 (left: 2.2 10)",
                "1 + 5 = 6 (left: 6 10 11) || 6 + 10 = 16 (left: 16 11)",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || 11 / 5 = 2.2 (left: 2.2)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 2.2 + 11 = 13.2 (left: 13.2)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "10 + 1 = 11 (left: 5 11 11) || 5 + 11 = 16 (left: 11 16)",
                "10 + 1 = 11 (left: 5 11 11) || 5 + 11 = 16 (left: 11 11 16)",
                "1 + 5 = 6 (left: 6 10 11)"
            ],
            "Evaluation": [
                1.002,
                21.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- 1.7",
                "3 <- 2.2",
                "4 <- 2.3",
                "5 <- 3.1",
                "6 <- 3.1",
                "7 <- 1.7",
                "8 <- 1.7",
                "9 <- 2.2"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 11 / 2.2 = 5 (left: 5 11)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || 5 + 11 = 16 (left: 16)",
                "10 + 1 = 11 (left: 5 11 11) || 11 * 5 = 55 (left: 11 55)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 11 = 0 (left: 5 0 11)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 55)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || Possible next steps:",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || Input: 3 9 27"
            ],
            "Evaluation": [
                2.001,
                0.003,
                0.003,
                0.002,
                0.002,
                3.0,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 4.5",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 4.5",
                "5 <- 1.5",
                "6 <- 3.9",
                "7 <- 1.0",
                "8 <- 2.2",
                "9 <- 1.7"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11) || 10 - 6 = 4 (left: 4 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 11 = 0 (left: 5 0 11) || 5 * 0 = 0 (left: 0 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 11 = 0 (left: 5 0 11) || 0 - 11 = -11 (left: -11",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 2.2 * 11 = 24.2 (left: 24.2)",
                "1 + 5 = 6 (left: 6 10 11) || 11 - 6 = 5 (left: 5 10)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || ",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || Input: 3 9 15",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)"
            ],
            "Evaluation": [
                1.001,
                0.001,
                1.001,
                2.0,
                0.001,
                0.003,
                0.002,
                20.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 1.5",
                "2 <- 1.5",
                "3 <- 5.7",
                "4 <- 5.7",
                "5 <- 1.4",
                "6 <- 1.5",
                "7 <- 1.7",
                "8 <- 3.1",
                "9 <- 1.6"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11) || 6 * 10 = 60 (left: 11 60)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 11 + 2.2 = 13.2 (left: 13.2)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 11 - 2.2 = 8.8 (left: 8.8)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) ||  || There are no more possible next steps for the given input.",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) ||  || There are no possible next steps as there are no more operations that can be performed on the numbers given.",
                "1 + 5 = 6 (left: 6 10 11) || 6 + 10 = 16 (left: 16 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || 2.2 + 11 = 13.2 (left: 13.2)",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "10 + 1 = 11 (left: 5 11 11) || Possible next steps:",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.002,
                0.001,
                0.002,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 2.2",
                "2 <- 6.9",
                "3 <- 2.2",
                "4 <- 6.9",
                "5 <- 5.7",
                "6 <- 2.2",
                "7 <- 6.9",
                "8 <- 0.3",
                "9 <- 2.2"
            ]
        },
        "Step 7": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11)",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || 9 * ",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 + 110 = 116 (left: 110)",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || 5 + 11 = 16 (left: 16)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 * 110 = 660 (left: 660)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) ||  || It seems like you didn't provide an input for the next calculation. Could you please provide the numbers you would like to work with?",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || 5 * 11 = 55 (left: 55)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 * 2 = 12 (left: 12 110)",
                "10 + 1 = 11 (left: 5 11 11) || 9 - 7 = 2 (",
                "1 * 5 = 5 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11) || Input: 3 9 4"
            ],
            "Evaluation": [
                2.0,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 6.9",
                "2 <- 6.9",
                "3 <- 1.5",
                "4 <- 5.7",
                "5 <- 1.7",
                "6 <- INIT",
                "7 <- 5.7",
                "8 <- 6.9",
                "9 <- 6.9"
            ]
        },
        "Step 8": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 * 110 = 660 (left: 660)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 - 6 = 104 (left: 6 104)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) || Possible next steps:",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) ||  || It seems like you did not provide an input. Please enter a set of numbers to continue.",
                "1 * 5 = 5 (left: 5 10 11) || 11 - 10 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "10 + 1 = 11 (left: 5 11 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 / 5 = 2.2 (left: 2.2 11) ||  || It seems like you didn't provide an input for the next step. Could you please provide the numbers you would like to use for the next calculation?",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 + 110 = 116 (left: 116)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 + 110 = 116 (left: 116)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                20.001,
                0.003,
                0.002,
                0.002,
                1.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 6.9",
                "1 <- 6.9",
                "2 <- 8.2",
                "3 <- 6.9",
                "4 <- 3.1",
                "5 <- 6.9",
                "6 <- 1.1",
                "7 <- 6.9",
                "8 <- 6.9",
                "9 <- 6.9"
            ]
        },
        "Step 9": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 / 6 = 18.333333333333332 (left: 6 18.333333333333332)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 6 * 110 = 660 (left: 660)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 - 6 = 104 (left: 6 104) || 6 + 104 = 110 (left: 110)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 / 6 = 18.3333 (left: 18.3333)",
                "10 + 1 = 11 (left: 5 11 11) || 7 - 3 = 4 (",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 - 6 = 104 (left: 104)",
                "5 * 10 = 50 (left: 1 50 11) || 50 - 11 = 39 (left: 1 39)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 / 6 = 18.333333333333332 (left: 6 18.333333333333332)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 - 6 = 104 (left: 104)",
                "1 + 5 = 6 (left: 6 10 11) || 10 * 11 = 110 (left: 6 110) || 110 / 6 = 18.33333 (left: 18.33333)"
            ]
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 3 10 11)",
                "3 + 4 = 7 (left: 6 7 11)",
                "3 * 4 = 12 (left: 6 12 11)",
                "6 + 4 = 10 (left: 3 10 ",
                "3 * 4 = 12 (left: 6 12 11)",
                "3 + 4 = 7 (left: 6 7 11)",
                "4 + 6 = 10 (left: 3 10 11)",
                "6 + 4 = 10 (left: 3 10 11)",
                "6 + 4 = 10 (left: 3 10 ",
                "11 - 6 = 5 (left: 3 4 5)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                2.001,
                0.003,
                2.001,
                22.0,
                0.003,
                0.003,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- INIT",
                "2 <- 0.5",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 0.5",
                "6 <- INIT",
                "7 <- 0.5",
                "8 <- 0.5",
                "9 <- 0.5"
            ]
        },
        "Step 1": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11) || 6 * 7 = 42 (left: 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18)",
                "3 * 4 = 12 (left: 6 11 12)",
                "6 + 3 = 9 (left: 4 9 ",
                "3 + 4 = 7 (left: 6 7 11) || 6 * 7 = 42 (left: 11 42)",
                "11 - 4 = 7 (left: 3 6 7)",
                "3 + 4 = 7 (left: 6 7 11) || 6 * 7 = 42 (left: 11 42)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13)",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11)"
            ],
            "Evaluation": [
                0.003,
                40.001,
                40.001,
                2.001,
                60.0,
                0.001,
                2.001,
                0.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.9",
                "3 <- 1.2",
                "4 <- 1.8",
                "5 <- 1.4",
                "6 <- 1.2",
                "7 <- 1.1",
                "8 <- 0.9",
                "9 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "4 * 6 = 24 (left: 3 11 24)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18)",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11) || 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 / 13 = 0.84615384615 (left: 0.84615384615)",
                "6 + 3 = 9 (left: 4 9  || 9 - 4 = 5 (left: 5 9)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18)",
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 6)",
                "11 - 6 = 5 (left: 3 4 5) || 4 * 5 = 20 (left: 3 20)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 18 - 6 = 12 (left: 12)"
            ],
            "Evaluation": [
                3.0,
                20.0,
                0.003,
                0.002,
                0.002,
                1.002,
                0.0,
                41.0,
                20.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 2.0",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 2.7",
                "5 <- 1.4",
                "6 <- 1.9",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 13 - 11 = 2 (left: 2)",
                "4 * 6 = 24 (left: 3 11 24) || 3 + 11 = 14 (left: 14 24)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 18 / 6 = 3 (left: 3)",
                "11 - 4 = 7 (left: 3 6 7) || 6 / 3 = 2 (left: 2 7)",
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "6 + 3 = 9 (left: 4 9  || 9 - 4 = 5 (left: 5 9)",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11) || 13 * 11 = 143 (left: 143)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 13 - 11 = 2 (left: 2)",
                "6 / 3 = 2 (left: 2 4 ",
                "11 - 4 = 7 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.001,
                0.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 1.1",
                "2 <- 2.0",
                "3 <- 1.1",
                "4 <- 1.4",
                "5 <- 1.4",
                "6 <- 2.1",
                "7 <- 1.9",
                "8 <- 1.4",
                "9 <- INIT"
            ]
        },
        "Step 4": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "11 - 4 = 7 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)",
                "4 * 6 = 24 (left: 3 11 24) || 24 - 11 = 13 (left: 3 13)",
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4)",
                "6 + 3 = 9 (left: 4 9  || 9 / 4 = 2.25 (left: 2.25 9)",
                "6 + 3 = 9 (left: 4 9  || 9 / 4 = 2.25 (left: 2.25 9)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || No possible next steps with the input 18.",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11) || 13 - 11 = 2 (left: 2)",
                "6 + 3 = 9 (left: 4 9  || 9 / 4 = 2.25 (left: 2.25 9)",
                "4 * 6 = 24 (left: 3 11 "
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.002,
                1.001,
                2.001,
                0.003,
                0.001,
                3.0,
                20.001
            ],
            "Resampling": [
                "0 <- 2.7",
                "1 <- 1.4",
                "2 <- 4.9",
                "3 <- 1.3",
                "4 <- 4.4",
                "5 <- 0.5",
                "6 <- 1.9",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- 1.8"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "6 + 3 = 9 (left: 4 9  || Input: 6 3",
                "4 * 6 = 24 (left: 3 11  || 25 - 5 = 20 (left: 20)",
                "3 * 4 = 12 (left: 6 11 12) || 6 + 11 = 17 (left: 12 17)",
                "6 + 3 = 9 (left: 4 9  || 9 / 4 = 2.25 (left: 2.25 9) || 5 + 5.5 = 10.5 (left",
                "3 + 4 = 7 (left: 6 7 11) || 6 * 7 = 42 (left: 11 42)",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11) || 11 / 13 =",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.003,
                1.001,
                0.001,
                0.003,
                0.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.2",
                "2 <- 4.9",
                "3 <- 2.7",
                "4 <- 2.1",
                "5 <- 1.8",
                "6 <- 4.9",
                "7 <- 1.9",
                "8 <- 1.1",
                "9 <- 1.8"
            ]
        },
        "Step 6": {
            "steps": [
                "6 + 3 = 9 (left: 4 9  || 9 / 4 = 2.25 (left: 2.25 9)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 + 12 = 18 (left: 18)",
                "4 * 6 = 24 (left: 3 11  || 11 / 3 = 3.67 (left: 3.67)",
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps, as there are no other numbers given to perform operations with.",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "4 * 6 = 24 (left: 3 11  || 3 * 11 = 33 (left: 33)",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11) || 13 - 11 = 2 (left: 2)",
                "11 - 4 = 7 (left: 3 6 7) || 6 + 7 = 13 (left: 3 13)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)"
            ],
            "Evaluation": [
                3.0,
                20.0,
                0.001,
                0.002,
                0.003,
                60.0,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 0.9",
                "2 <- 6.1",
                "3 <- 6.1",
                "4 <- 6.5",
                "5 <- 2.3",
                "6 <- 4.9",
                "7 <- 1.8",
                "8 <- 0.5",
                "9 <- 1.9"
            ]
        },
        "Step 7": {
            "steps": [
                "6 + 3 = 9 (left: 4 9  || 9 / 4 = 2.25 (left: 2.25 9) || 9 - 2.25 = 6.75 (left: 6.75)",
                "11 - 6 = 5 (left: 3 4 5) || 4 - 3 = 1 (left: 1 5)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 + 12 = 18 (left: 18) || No possible next steps with the input 18.",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 + 12 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((3 + 4) + 6) + 11 = 24",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 11 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 / 2 = 9 (left: 9 18)",
                "4 * 6 = 24 (left: 3 11  || 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665)",
                "3 + 4 = 7 (left: 6 7 11) || 7 + 6 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "3 + 4 = 7 (left: 6 7 11) || 11 - 7 = 4 (left: 4 11)",
                "3 + 4 = 7 (left: 6 7 11) || 6 + 7 = 13 (left: 13 11) || 11 + 13 = 24 (left: 24)"
            ]
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Step 0": {
            "steps": [
                "2 + 4 = 6 (left: 6 8 9)",
                "9 - 4 = 5 (left: 2 5 8)",
                "8 / 2 = 4 (left: 4 8 9)",
                "9 - 4 = 5 (left: 2 4 5)",
                "4 * 2 = 8 (left: 8 8 9)",
                "9 - 8 = 1 (left: 2 8 1)",
                "9 - 8 = 1 (left: 2 8 1)",
                "4 * 2 = 8 (left: 8 8 9)",
                "9 - 2 = 7 (left: 4 8 7)",
                "8 - 4 = 4 (left: 2 4 9)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                3.0,
                2.001,
                2.001,
                21.001,
                22.0,
                0.003,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.0",
                "7 <- 0.6",
                "8 <- 0.6",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1) || 1 * 2 = ",
                "2 * 4 = 8 (left: 8 8 ",
                "8 + 4 = 12 (left: 2 12 9)",
                "9 - 8 = 1 (left: 2 4 1)",
                "4 + 2 = 6 (left: 6 8 ",
                "4 * 2 = 8 (left: 8 8 9)",
                "2 + 4 = 6 (left: 6 8 9) || 8 / 6 = 1.33 (left: 1.33 9)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                20.002,
                0.003,
                0.003,
                1.002,
                2.001,
                20.0,
                20.001,
                60.0
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 1.9",
                "2 <- 0.5",
                "3 <- 0.6",
                "4 <- 1.8",
                "5 <- 1.8",
                "6 <- 0.6",
                "7 <- 1.2",
                "8 <- 0.6",
                "9 <- 1.5"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1) || 4 - 1 = 3 (left: 3)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left:",
                "9 - 8 = 1 (left: 2 8 1) || 2 / 8 = 0.25 (left: 0.25)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1) || 6 - 9 = -3 (left: -3)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1) || 4 * 1 = 4 (left: 4)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10)",
                "8 + 4 = 12 (left: 2 12 9) || 12 - 2 = 10 (left: 10 9)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5)",
                "4 * 2 = 8 (left: 8 8 9) || 8 * 8 = 64 (left: 64 9)"
            ],
            "Evaluation": [
                0.0,
                0.002,
                0.001,
                0.003,
                0.002,
                0.002,
                60.0,
                0.003,
                40.0,
                0.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.6",
                "2 <- 2.6",
                "3 <- 2.6",
                "4 <- 2.6",
                "5 <- 2.6",
                "6 <- 1.8",
                "7 <- 1.2",
                "8 <- 2.8",
                "9 <- 2.6"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 2 = 4 (left: 4 8 9) || 4 + 8 = 12 (left: 9 12)",
                "9 - 8 = 1 (left: 2 8 1) || 1 * 2 = 2 (left: 8 2)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 3 + 5 = 8 (left: 8 9)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1) || 4 - 1 = 3 (left: 3)",
                "8 + 4 = 12 (left: 2 12 9) || 12 / 2 = 6 (left: 6 9)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 + 0.5 = 8.5",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.002,
                0.003,
                0.001,
                0.001,
                0.001,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.9",
                "2 <- 2.6",
                "3 <- 1.9",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- 1.9",
                "9 <- 1.7"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 2 = 7 (left: 2 7 8)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 - 1 = 15 (left: 1 15)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 2.6",
                "1 <- 2.6",
                "2 <- 1.9",
                "3 <- 0.5",
                "4 <- 1.7",
                "5 <- 2.8",
                "6 <- 2.8",
                "7 <- INIT",
                "8 <- 1.8",
                "9 <- 1.2"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "9 - 8 = 1 (left: 2 8 1) || 1 * 2 = 2 (left: 8 2)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 / 1 = 16 (left: 16)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 + 0.5 = 8.5 (left: 8.5)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 - 0.5 = 7.5 (left: 7.5)",
                "9 - 2 = 7 (left: 2 8 7)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1) || 4 - 1 = 3 (left: 3)",
                "8 + 4 = 12 (left: 2 12 9) || 12 / 2 = 6 (left: 6 9)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.001,
                0.003,
                0.002,
                0.002,
                0.0,
                3.0,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 2.6",
                "2 <- 2.6",
                "3 <- 1.9",
                "4 <- 2.6",
                "5 <- 2.8",
                "6 <- 1.9",
                "7 <- 0.2",
                "8 <- 2.8",
                "9 <- 2.6"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 3 * 6 = 18 (left: 18)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 + 0.5 = 8.5 (left: 8.5)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "8 / 2 = 4 (left: 4 8 9) || 4 + 8 = 12 (left: 8 9 12)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 * 0.5 = 4 (left: 4)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.0,
                0.002,
                0.003,
                0.002,
                0.001,
                0.003,
                0.001,
                3.0,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.5",
                "2 <- 1.7",
                "3 <- 0.6",
                "4 <- 0.5",
                "5 <- 2.6",
                "6 <- 1.2",
                "7 <- 1.2",
                "8 <- 2.8",
                "9 <- 0.2"
            ]
        },
        "Step 7": {
            "steps": [
                "8 + 4 = 12 (left: 2 12 9) || 2 * 12 = 24 (left: 9 24)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 + 1 = 17 (left: 17)",
                "9 - 8 = 1 (left: 2 8 1) || 8 - 1 = 7 (left: 7)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "8 + 4 = 12 (left: 2 12 9) || 7",
                "8 + 4 = 12 (left: 2 12 9) || 12 / 2 = 6 (left: 6 9)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 / 0.5 = 16 (left: 16)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1)"
            ],
            "Evaluation": [
                0.002,
                20.001,
                0.003,
                0.001,
                60.0,
                0.0,
                0.003,
                0.003,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 7.9",
                "2 <- 7.9",
                "3 <- 7.9",
                "4 <- 7.4",
                "5 <- 2.6",
                "6 <- 1.7",
                "7 <- 7.1",
                "8 <- 7.4",
                "9 <- 7.1"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 / 1 = 16 (left: 1 16)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 * 1 = 4 (left: 4 1)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 / 1 = 4 (left: 4)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 + 1 = 5 (left: 5)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || Possible next steps:",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 * 1 = 16 (left: 1 16)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 / 1 = 16 (left: 16)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "9 - 8 = 1 (left: 2 8 1) || 2 * 8 = 16 (left: 16 1) || 16 + 1 = 17 (left: 1 17)"
            ],
            "Evaluation": [
                0.002,
                40.001,
                0.001,
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.8",
                "1 <- 7.9",
                "2 <- 1.8",
                "3 <- 7.9",
                "4 <- 2.8",
                "5 <- 8.1",
                "6 <- 7.9",
                "7 <- 2.8",
                "8 <- 7.4",
                "9 <- 7.9"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 + 0.5 = 8.5 (left: 8.5)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 * 1 = 4 (left: 4)",
                "9 - 8 = 1 (left: 2 8 1) || 8 / 2 = 4 (left: 4 1) || 4 + 1 = 5 (left: 5)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 - 1 = 3 (left: 3)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 - 0.5 = 7.5 (left: 7.5)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 * 1 = 4 (left: 4 1) || 4 * 1 = 4 (left: 4)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 + 1 = 5 (left: 5)",
                "9 - 8 = 1 (left: 2 8 1) || 1 / 2 = 0.5 (left: 8 0.5) || 8 + 0.5 = 8.5 (left: 8.5)",
                "9 - 8 = 1 (left: 2 8 1) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "8 / 2 = 4 (left: 4 8 9) || 9 - 8 = 1 (left: 4 1) || 4 * 1 = 4 (left: 4)"
            ]
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Step 0": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "4 + 5 = 9 (left: 1 9 13)",
                "13 - 1 = 12 (left: 4 5 12)",
                "1 * 4 = 4 (left: 4 5 13)",
                "13 - 1 = 12 (left: 4 5 12)",
                "13 - 1 = 12 (left: 4 5 12)",
                "13 - 5 = 8 (left: 1 4 ",
                "13 - 4 = 9 (left: 1 5 9)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 1 = 12 (left: 4 5 12)"
            ],
            "Evaluation": [
                21.001,
                1.002,
                2.001,
                1.002,
                20.002,
                0.003,
                0.003,
                1.002,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.0",
                "5 <- 0.4",
                "6 <- INIT",
                "7 <- 0.8",
                "8 <- 0.0",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 + 13 = 18 (left: 5 18)",
                "13 - 4 = 9 (left: 1 4 ",
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13) || 13 - 5 = 8 (left: 5 8)",
                "13 - 1 = 12 (left: 4 5 12) || 12 / 4 = 3 (left: 3 5)",
                "5 * 4 = 20 (left: 1 20 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 + 5 = 10 (left: 10 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "5 * 1 = 5 (left: 5 5 13)"
            ],
            "Evaluation": [
                2.001,
                0.0,
                1.001,
                1.002,
                0.002,
                1.001,
                0.003,
                0.001,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.0",
                "5 <- 1.0",
                "6 <- 0.4",
                "7 <- 0.0",
                "8 <- 0.0",
                "9 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 1 = 12 (left: 4 5 12) || 5 + 4 = 9 (left: 9 12)",
                "1 + 4 = 5 (left: 5 5 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "5 * 4 = 20 (left: 1 5 20)",
                "5 + 1 = 6 (left: 4 6 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 + 5 = 10 (left: 10 13)",
                "13 - 1 = 12 (left: 4 5 12) || 5 * 4 = 20 (left: 20 12)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                21.001,
                60.0,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.2",
                "2 <- 0.9",
                "3 <- 2.2",
                "4 <- 2.2",
                "5 <- INIT",
                "6 <- 2.3",
                "7 <- 2.2",
                "8 <- 2.3",
                "9 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "5 + 1 = 6 (left: 4 6 13) || 6 / 4 = 1.5 (left: 1.5 13)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20)",
                "13 - 1 = 12 (left: 4 5 12) || 12 - 4 = 8 (left: 8 5)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4)",
                "1 + 4 = 5 (left: 5 5 13)",
                "5 + 1 = 6 (left: 4 6 13) || 4 + 6 = 10 (left: 10 13)",
                "5 * 4 = 20 (left: 1 5 20) || 1 + 5 = 6 (left: 6 20)",
                "5 + 1 = 6 (left: 4 6 13) || 6 * 13 = 78 (left: 4 78)",
                "13 - 1 = 12 (left: 4 5 12) || 5 + 4 = 9 (left: 9 12)"
            ],
            "Evaluation": [
                1.001,
                41.0,
                0.002,
                60.0,
                40.0,
                21.001,
                0.001,
                1.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.4",
                "2 <- 1.9",
                "3 <- 2.2",
                "4 <- 2.2",
                "5 <- 2.3",
                "6 <- 1.5",
                "7 <- 3.3",
                "8 <- INIT",
                "9 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "5 * 1 = 5 (left: 5 5 13) || 5 - 5 = 0 (left: 0 13)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20)",
                "5 + 1 = 6 (left: 4 6 13) || 13 / 6 = 2.166666",
                "13 - 1 = 12 (left: 4 5 12) || 12 / 4 = 3 (left: 3 5) || Possible next steps:",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "4 + 5 = 9 (left: 1 9 13)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 + 4 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.002,
                60.0,
                60.0,
                0.003,
                0.003,
                0.002,
                2.001,
                0.001
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 3.3",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 3.5",
                "5 <- 4.3",
                "6 <- 2.3",
                "7 <- 4.3",
                "8 <- 3.4",
                "9 <- 4.8"
            ]
        },
        "Step 5": {
            "steps": [
                "5 + 1 = 6 (left: 4 6 13) || 4 + 6 = 10 (left: 10 13)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || Possible next steps:",
                "1 + 4 = 5 (left: 5 5 13) || 13 - 5 = 8 (left: 5 8)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "5 + 1 = 6 (left: 4 6 13) || 4 + 6 = 10 (left: 10 13)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "4 + 5 = 9 (left: 1 9 13) || 9 / 1 = 9 (left: 9 13)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.003,
                2.001,
                0.003,
                0.001,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 2.2",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 3.3",
                "5 <- 0.0",
                "6 <- 3.4",
                "7 <- 3.1",
                "8 <- 4.4",
                "9 <- 3.1"
            ]
        },
        "Step 6": {
            "steps": [
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 * 20 = 80 (left: 20 80)",
                "5 * 4 = 20 (left: 1 5 20) || 20 - 5 = 15 (left: 1 15)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "1 + 4 = 5 (left: 5 5 13) || 5 / 5 = 1 (left: 1 13)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 5 * 20 = 100 (left: 100)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 * 5 = 20 (left: 20)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4 20)"
            ],
            "Evaluation": [
                41.0,
                0.001,
                0.001,
                0.002,
                0.002,
                0.003,
                0.001,
                0.003,
                0.001,
                21.0
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 3.4",
                "2 <- 2.2",
                "3 <- 4.4",
                "4 <- 2.3",
                "5 <- 4.3",
                "6 <- 1.0",
                "7 <- 3.5",
                "8 <- 3.3",
                "9 <- 3.5"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 1 = 12 (left: 4 5 12) || 12 / 4 = 3 (left: 3 5) || 3 * 5 = 15 (left: 15)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 20 - 5 = 15 (left: 1 15)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5)",
                "5 + 1 = 6 (left: 4 6 13) || 6 + 13 = 19 (left: 4 19)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "1 + 4 = 5 (left: 5 5 13) || 5 - 5 = 0 (left: 0 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "1 + 4 = 5 (left: 5 5 13) || 5 + 5 = 10 (left: 10 13)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.002,
                0.002,
                0.001,
                0.001,
                0.002,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 6.9",
                "3 <- 4.4",
                "4 <- 3.1",
                "5 <- 3.1",
                "6 <- 3.4",
                "7 <- 2.3",
                "8 <- 3.5",
                "9 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "5 + 1 = 6 (left: 4 6 13) || 4 / 6 = 0.666666",
                "5 + 1 = 6 (left: 4 6 13) || 6 + 13 = 19 (left: 4 19)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4 20) || 3 * 6 = 18 (left: 18 18)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 + 20 = 24 (left: 24)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 20 - 5 = 15 (left: 15)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || Input: 3 9 27",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 + 4 = 5 (left: 4)",
                "5 + 1 = 6 (left: 4 6 13) || 4 * 6 = 24 (left: 24 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 - 5 = 0 (left: 0 13)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 * 20 = 80 (left: 20 80) || 20 + 80 = 100 (left: 100)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003,
                0.001,
                0.003,
                0.0,
                20.0
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 8.3",
                "2 <- 4.3",
                "3 <- 6.9",
                "4 <- 4.3",
                "5 <- 8.3",
                "6 <- 4.3",
                "7 <- 3.1",
                "8 <- 0.4",
                "9 <- 8.9"
            ]
        },
        "Step 9": {
            "steps": [
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 + 20 = 24 (left: 24)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 + 20 = 24 (left: 24) || Answer: (5 * 4) + (5 - 1) = 24",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4 20) || 3 + 9 = 12 (left: 12 27)",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 + 20 = 24 (left: 24) || Answer: ((5 * 4) + 5) + 13 = 24",
                "5 * 4 = 20 (left: 1 5 20) || 20 / 5 = 4 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "5 * 4 = 20 (left: 1 5 20) || 5 * 1 = 5 (left: 5 20) || 20 - 5 = 15 (left: 15)",
                "13 - 1 = 12 (left: 4 5 12) || 4 * 5 = 20 (left: 20 12)",
                "5 * 4 = 20 (left: 1 5 20) || 5 - 1 = 4 (left: 4 20) || 4 * 20 = 80 (left: 80)"
            ]
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Step 0": {
            "steps": [
                "7 / 2 = 3.5 (left: 2 ",
                "12 - 2 = 10 (left: ",
                "2 * 2 = 4 (left: 4 7 12)",
                "2 + 7 = 9 (left: 9 2 ",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 7 = 5 (left: 2 5 5)",
                "2 * 2 = 4 (left: 4 7 12)",
                "7 - 2 = 5 (left: 2 5 12)",
                "2 * 2 = 4 (left: 4 7 12)",
                "2 * 7 = 14 (left: 14 12)"
            ],
            "Evaluation": [
                0.0,
                0.0,
                2.0,
                0.001,
                60.0,
                1.002,
                2.001,
                3.0,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.4",
                "5 <- INIT",
                "6 <- 0.4",
                "7 <- INIT",
                "8 <- 0.4",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10) || 2 - 7 = -5 (left: -5 10)",
                "2 + 2 = 4 (left: 4 7 12)",
                "7 - 2 = 5 (left: 2 5 12)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10)",
                "2 + 2 = 4 (left: 4 7 12)",
                "12 - 2 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "2 + 2 = 4 (left: 4 7 12)",
                "12 - 2 = 10 (left: 2 7 10) || 7 + 2 = 9 (left: 9 10)",
                "7 - 2 = 5 (left: 2 5 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                1.002,
                40.001,
                3.0,
                0.002,
                2.0,
                1.001,
                2.001
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- 0.4",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4",
                "5 <- 0.4",
                "6 <- 0.4",
                "7 <- INIT",
                "8 <- 0.4",
                "9 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 2 = 4 (left: 4 7 12) || 12 - 4 = 8 (left: 8 7)",
                "12 - 2 = 10 (left: 2 7 10) || 10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10) || 10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "",
                "12 - 2 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)"
            ],
            "Evaluation": [
                20.002,
                0.002,
                0.003,
                0.002,
                0.001,
                0.003,
                0.001,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 2.0",
                "5 <- 1.2",
                "6 <- 0.4",
                "7 <- 2.0",
                "8 <- 0.4",
                "9 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10)",
                "12 - 2 = 10 (left: 2 7 10) || 7 / 2 = 3.5 (left: 3.5 10)",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10)",
                "2 / 2 = 1 (left: 1 7 12)",
                "2 + 2 = 4 (left: 4 7 12) || 12 - 4 = 8 (left: 8 7) || 8 / 7 = 1.14 (left: 1.14)",
                "2 + 2 = 4 (left: 4 7 12) || 7 * 4 = 28 (left: 28 12)",
                "12 - 2 = 10 (left: 2 7 10) || 7 / 2 = 3.5 (left: 3.5 10)",
                "2 + 2 = 4 (left: 4 7 12) || 12 - 4 = 8 (left: 8 7) || 8 - 7 = 1 (left: 1)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 10 = 70 (left: 2 70)",
                "12 - 2 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 7 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                2.001,
                0.002,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 2.0",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 2.0",
                "5 <- 1.4",
                "6 <- 3.2",
                "7 <- 0.4",
                "8 <- 0.4",
                "9 <- 1.4"
            ]
        },
        "Step 4": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10) || 7 + 2 = 9 (left: 9 10)",
                "2 + 2 = 4 (left: 4 7 12) || 12 - 4 = 8 (left: 8 7) || 8 / 7 \u2248 1.14 (left: 1.14)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)",
                "2 + 2 = 4 (left: 4 7 12) || 12 - 4 = 8 (left: 8 7) || 8 / 7 = 1.14 (left: 1.14)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 - 10 = 4 (left: 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.0,
                60.0,
                0.003,
                0.003,
                0.0,
                60.0,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.9",
                "2 <- 4.7",
                "3 <- 4.7",
                "4 <- 4.3",
                "5 <- 4.3",
                "6 <- 3.2",
                "7 <- 1.7",
                "8 <- 3.2",
                "9 <- 4.7"
            ]
        },
        "Step 5": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)",
                "7 - 2 = 5 (left: 2 5 12) || 2 * 5 = 10 (left: 10 12)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24) || Answer: (12 - 2) + (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24) || Answer: (12 - 2) * (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)",
                "2 + 2 = 4 (left: 4 7 12) || 4 * 7 = 28 (left: 28 12)",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)"
            ]
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Step 0": {
            "steps": [
                "3 * 3 = 9 (left: 9 6 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "3 - 3 = 0 (left: 0 3 7)",
                "3 * 3 = 9 (left: 6 9 7)",
                "6 + 3 = 9 (left: 3 9 7)",
                "7 - 3 = 4 (left: 3 6 4)",
                "6 + 3 = 9 (left: 3 6 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "3 * 3 = 9 (left: 6 9 7)",
                "3 * 3 = 9 (left: 9 6 7)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                1.002,
                3.0,
                1.002,
                3.0,
                40.001,
                3.0,
                3.0,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.6",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- INIT",
                "5 <- 0.0",
                "6 <- 0.7",
                "7 <- 0.7",
                "8 <- INIT",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 3 = 18 (left: 18 7)",
                "6 + 3 = 9 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)",
                "7 + 3 = 10 (left: 3 6 10)",
                "3 * 3 = 9 (left: 6 9 7) || 9 - 7 = 2 (left: 2)",
                "6 + 3 = 9 (left: 3 6 7)",
                "3 * 3 = 9 (left: 9 6 7) || 9 + 6 = 15 (left: 7 15)",
                "3 * 3 = 9 (left: 9 6 7) || 9 - 6 = 3 (left: 3 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 + 7 = 13 (left: 9 13)",
                "3 + 3 = 6 (left: 6 6 7)",
                "6 + 3 = 9 (left: 3 6 7) || 3 + 6 = 9 (left: 7 9)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                1.002,
                0.001,
                22.0,
                0.003,
                0.0,
                0.002,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.7",
                "4 <- 0.6",
                "5 <- 0.6",
                "6 <- 0.9",
                "7 <- 0.1",
                "8 <- 0.9",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "3 / 3 = 1 (left: 1 3 ",
                "7 - 6 = 1 (left: 3 6 ",
                "7 - 3 = 4 (left: 3 6 4)",
                "3 * 3 = 9 (left: 9 6 7) || 9 / 6 = 1.5 (left: 1.5 7)",
                "6 + 3 = 9 (left: 3 6 7) || 6 + 7 = 13 (left: 3 13)",
                "6 + 3 = 9 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)",
                "3 * 3 = 9 (left: 9 6 7) || 9 - 6 = 3 (left: 3 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 * 7 = 42 (left: 9 42)",
                "3 * 3 = 9 (left: 9 6 7) || 9 / 6 = 1.5 (left: 1.5 7)",
                "3 + 3 = 6 (left: 6 6 7)"
            ],
            "Evaluation": [
                0.0,
                41.0,
                2.0,
                0.002,
                0.003,
                0.003,
                1.001,
                0.001,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 2.9",
                "1 <- 0.6",
                "2 <- 2.1",
                "3 <- 1.8",
                "4 <- 0.5",
                "5 <- 0.6",
                "6 <- 0.6",
                "7 <- 1.4",
                "8 <- 2.1",
                "9 <- 0.8"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7)",
                "6 + 3 = 9 (left: 3 6 7) || 6 / 3 = 2 (left: 2 7)",
                "7 - 6 = 1 (left: 3 6  || 6 / 3 = 2 (left: 2)",
                "3 + 3 = 6 (left: 6 6 7) || 6 + 6 = 12 (left: 7 12)",
                "7 - 3 = 4 (left: 3 6 4) || 6 / 3 = 2 (left: 2 4)",
                "6 + 3 = 9 (left: 3 6 7) || 3 + 6 = 9 (left: 7 9)",
                "6 + 3 = 9 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)",
                "6 + 3 = 9 (left: 3 6 7) || 6 / 3 = 2 (left: 2 7)",
                "7 - 6 = 1 (left: 3 6  || 6 - 3 = 3 (left: 3)",
                "3 * 3 = 9 (left: 6 9 7) || Possible next steps:"
            ],
            "Evaluation": [
                20.0,
                0.002,
                0.0,
                0.003,
                0.003,
                1.002,
                0.002,
                0.002,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 2.1",
                "2 <- 0.6",
                "3 <- 3.0",
                "4 <- 0.6",
                "5 <- 3.0",
                "6 <- 2.1",
                "7 <- 0.6",
                "8 <- 3.0",
                "9 <- 0.6"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 6 / 3 = 2 (left:",
                "7 - 6 = 1 (left: 3 6  || 6 - 3 = 3 (left: 3)",
                "6 + 3 = 9 (left: 3 6 7) || 6 + 7 = 13 (left: 3 13)",
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 1 * 7 = 7 (left: 7)",
                "6 + 3 = 9 (left: 3 6 7) || 7 / 3 = 2.33 (left: 2.33 6)",
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "7 - 6 = 1 (left: 3 6  || 6 / 3 = 2 (left: 2)",
                "6 + 3 = 9 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)",
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                1.002,
                0.001,
                2.001,
                0.001,
                0.001,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.6",
                "2 <- 2.1",
                "3 <- 0.9",
                "4 <- 2.1",
                "5 <- 1.4",
                "6 <- 2.1",
                "7 <- 0.6",
                "8 <- 1.8",
                "9 <- 3.0"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 7 / 3 = 2.33 (left: 2.33)",
                "6 + 3 = 9 (left: 3 6 7) || 7 - 3 = 4 (left: 4 7)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18)",
                "3 * 3 = 9 (left: 9 6 7) || 6 + 7 = 13 (left: 9 13)",
                "7 - 6 = 1 (left: 3 6  || 3 + 6 = 9 (left: 9)",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7)",
                "7 - 6 = 1 (left: 3 6  || 6 / 3 = 2 (left: 2)",
                "6 + 3 = 9 (left: 3 6 7) || 7 - 6 = 1 (left:",
                "3 + 3 = 6 (left: 6 6 7) || 7 + 6 = 13 (left: 6 13)",
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                20.0,
                0.002,
                0.002,
                20.0,
                0.001,
                0.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 5.2",
                "2 <- 0.6",
                "3 <- 0.6",
                "4 <- 2.1",
                "5 <- 2.8",
                "6 <- 2.9",
                "7 <- 3.0",
                "8 <- 5.5",
                "9 <- 2.6"
            ]
        },
        "Step 6": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 7 - 3 = 4 (left: 4 7)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18) || None - This is the final result.",
                "6 + 3 = 9 (left: 3 6 7) || 6 / 3 = 2 (left: 2 7)",
                "6 + 3 = 9 (left: 3 6 7) || 3 * 6 = 18 (left: 18 7)",
                "7 - 6 = 1 (left: 3 6  || 4 * ",
                "3 * 3 = 9 (left: 9 6 7) || 9 / 6 = 1.5 (left: 1.5 7) || 7 / 1.5 = 4.666666666666667 (left: 4.666666666666667)",
                "3 + 3 = 6 (left: 6 6 7) || 6 + 6 = 12 (left: 7 12)",
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || 7 / 3 = 2.33 (left: 2.33)",
                "3 * 3 = 9 (left: 9 6 7) || 9 - 6 = 3 (left: 3 7) || 7 / 3 = 2 (left: 2)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                1.002,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 1.8",
                "4 <- 5.2",
                "5 <- 5.2",
                "6 <- 2.1",
                "7 <- 5.2",
                "8 <- 5.5",
                "9 <- 2.1"
            ]
        },
        "Step 7": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || Input: 5",
                "7 - 6 = 1 (left: 3 6  || 6 / 3 = 2 (left: 2)",
                "7 - 6 = 1 (left: 3 6  || 3 + 6 = 9 (left: 9)",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18) || 18 / 2 = 9 (left: 9)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18) || 18 / 2 = 9 (left: 9)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || Possible next steps:",
                "7 - 6 = 1 (left: 3 6  || 3 + 6 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.0,
                40.001,
                0.002,
                0.002,
                0.0,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 5.5",
                "2 <- 5.5",
                "3 <- 6.2",
                "4 <- 5.5",
                "5 <- 7.3",
                "6 <- 7.3",
                "7 <- 7.3",
                "8 <- 2.1",
                "9 <- 2.1"
            ]
        },
        "Step 8": {
            "steps": [
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 1 + 7 = 8 (left: 8)",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || Input: 5 9",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || 3 * 10 =",
                "6 + 3 = 9 (left: 3 6 7) || 6 / 3 = 2 (left: 2 7) || 7 / 2 = 3.5 (left: 3.5)",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || Possible next steps:",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6) || 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "7 - 6 = 1 (left: 3 6  || 6 / 3 = 2 (left: 2)",
                "7 - 6 = 1 (left: 3 6  || 6 / 3 = 2 (left: 2)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.002,
                0.003,
                0.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 7.3",
                "2 <- 0.1",
                "3 <- 2.1",
                "4 <- 1.8",
                "5 <- 5.2",
                "6 <- 3.0",
                "7 <- 7.3",
                "8 <- 7.3",
                "9 <- 2.1"
            ]
        },
        "Step 9": {
            "steps": [
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18) || 18 / 2 = 9",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "3 * 3 = 9 (left: 9 6 7) || 9 + 6 = 15 (left: 15 7)",
                "7 - 6 = 1 (left: 3 6  || 3 + 6 = 9 (left: 9)",
                "3 + 3 = 6 (left: 6 6 7) || 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "7 - 6 = 1 (left: 3 6  || 3 * 6 = 18 (left: 18) || No possible next steps as there is only one number left.",
                "3 + 3 = 6 (left: 6 6 7) || 6 / 6 = 1 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "3 + 3 = 6 (left: 6 6 7) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "7 - 6 = 1 (left: 3 6  || 3 + 6 = 9 (left: 9)"
            ]
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Step 0": {
            "steps": [
                "1 * 5 = 5 (left: 5 9 13)",
                "1 * 5 = 5 (left: 5 9 13)",
                "13 - 5 = 8 (left: 1 9 8)",
                "5 + 9 = 14 (left: 1 14 13)",
                "9 - 1 = 8 (left: 8 5 13)",
                "13 - 5 = 8 (left: 1 8 9)",
                "9 - 1 = 8 (left: 5 8 ",
                "9 - 1 = 8 (left: 8 5 13)",
                "5 * 9 = 45 (left: 1 45 13)",
                "13 - 5 = 8 (left: 1 8 "
            ],
            "Evaluation": [
                2.001,
                2.001,
                0.003,
                0.003,
                2.0,
                2.0,
                1.002,
                1.001,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.9",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- 0.9",
                "5 <- 0.9",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- 0.9",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8)",
                "13 - 5 = 8 (left: 1 8  || 1 * 8 = 8 (left: 8 8)",
                "9 - 1 = 8 (left: 8 5 13)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7)",
                "13 - 5 = 8 (left: 1 8  || 1 * 8 = 8 (left: 8)",
                "13 - 5 = 8 (left: 1 8  || 1 * 8 = 8 (left: 8)",
                "9 - 1 = 8 (left: 5 8 13)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7)",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 8 9)"
            ],
            "Evaluation": [
                21.001,
                0.003,
                40.0,
                0.001,
                0.003,
                0.003,
                1.002,
                0.001,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- 0.9",
                "5 <- 1.0",
                "6 <- 0.9",
                "7 <- 0.9",
                "8 <- 0.9",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 7 + 8 = 15 (left: 15)",
                "9 - 1 = 8 (left: 8 5 13) || 8 + 5 = 13 (left: 13 13)",
                "5 * 9 = 45 (left: 1 45 13)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8 8)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 7 * 8 = 56 (left: 56)",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 9)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8 8)",
                "13 - 5 = 8 (left: 1 9 8)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                21.001,
                0.002,
                0.002,
                0.003,
                0.003,
                0.001,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.9",
                "2 <- 1.2",
                "3 <- 2.2",
                "4 <- 1.2",
                "5 <- 0.9",
                "6 <- 1.2",
                "7 <- 1.2",
                "8 <- 1.0",
                "9 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 ",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "9 - 1 = 8 (left: 8 5 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "5 * 9 = 45 (left: 1 45 13) || 45 - 1 = 44 (left: 44 13)",
                "9 - 1 = 8 (left: 8 5 13) || 8 / 5 = 1.6 (left: 1.6 13)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 7 / 8 = 0.875 (left: 0.875)",
                "9 - 1 = 8 (left: 8 5 13) || 13 / 5 = 2.6 (left: 2.6 13)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.002,
                2.001,
                0.002,
                20.001,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 0.9",
                "2 <- 0.0",
                "3 <- 1.0",
                "4 <- 0.9",
                "5 <- 3.6",
                "6 <- 1.0",
                "7 <- 0.9",
                "8 <- 1.2",
                "9 <- 2.2"
            ]
        },
        "Step 4": {
            "steps": [
                "5 * 9 = 45 (left: 1 45 13) || 13 - 1 = 12 (left: 12 13)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8 8)",
                "1 * 5 = 5 (left: 5 9 13) || 9 - 5 = 4 (left: 4 13)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 8 - 7 = 1 (left: 1)",
                "13 - 5 = 8 (left: 1 8  || 8 /  1 = 8 (left: 8 8)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 - 13 = 27 (left: 27)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 8 - 7 = 1 (left: 1)",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 8 9)",
                "9 - 1 = 8 (left: 8 5 13) || 13 - 5 = 8 (left: 8 8)",
                "5 * 9 = 45 (left: 1 45 13) || 1 + 45 = 46 (left: 13 46)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.002,
                0.001,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 3.6",
                "2 <- 0.9",
                "3 <- 1.2",
                "4 <- 0.9",
                "5 <- 0.9",
                "6 <- 0.9",
                "7 <- 0.9",
                "8 <- 0.9",
                "9 <- 1.2"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 7 * 8 = 56 (left: 56)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 - 13 = 27 (left: 27)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8)",
                "9 - 1 = 8 (left: 8 5 13) || 8 + 5 = 13 (left: 13 13)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8 8)",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 9)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8 8)",
                "13 - 5 = 8 (left: 1 8  || 5 + 10 = 15 (left: 10 15)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                20.0
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 1.2",
                "2 <- 3.6",
                "3 <- 5.9",
                "4 <- 3.6",
                "5 <- 3.6",
                "6 <- 3.6",
                "7 <- INIT",
                "8 <- 2.2",
                "9 <- 5.9"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 + 13 = 53 (left: 53)",
                "9 - 1 = 8 (left: 8 5 13) || 13 - 8 = 5 (left: 5 5)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 - 13 = 27 (left: 27)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65) || 8 * 65 = 520 (left: 520)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 + 13 = 53 (left: 53)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 + 13 = 53 (left: 53)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 - 13 = 27 (left: 27)",
                "13 - 5 = 8 (left: 1 9 8)",
                "5 * 9 = 45 (left: 1 45 13) || 13 + 1 = 14 (left: 45 14)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65) || 8 - 65 = -57 (left: -57)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.002,
                1.002,
                0.0,
                0.002
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 1.0",
                "2 <- 5.9",
                "3 <- INIT",
                "4 <- 3.6",
                "5 <- 3.6",
                "6 <- 3.4",
                "7 <- 3.6",
                "8 <- 0.9",
                "9 <- 0.9"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 * 13 = 520 (left: 520)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 8 / 7 = 1.14 (left: 1 1.14)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65) || 65 - 8 = 57 (left: 57)",
                "1 + 5 = 6 (left: 6 9 13)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 + 13 = 53 (left: 53)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 - 13 = 27 (left: 27)",
                "9 - 1 = 8 (left: 8 5 13) || 8 / 5 = 1.6 (left: 1.6 13) || 1.6 * 13 = 20.8 (left: 20.8)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 + 13 = 53 (left: 53)",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 8 9)",
                "13 - 5 = 8 (left: 1 8  || 1 * 8 = 8 (left: 8 8)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                1.002,
                0.002,
                0.002,
                0.001,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 5.9",
                "2 <- 2.2",
                "3 <- 7.8",
                "4 <- 1.2",
                "5 <- 0.9",
                "6 <- 3.6",
                "7 <- 2.2",
                "8 <- 5.9",
                "9 <- 3.6"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 9 = 45 (left: 1 45 13) || 45 - 1 = 44 (left: 44 13)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65) || 8 - 65 = -57 (left: -57)",
                "5 * 9 = 45 (left: 1 45 13) || 45 / 13 = 3 (left:",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 8 9) || 8 - 9 = -1 (left: -1)",
                "9 - 1 = 8 (left: 8 5 13) || 8 / 5 = 1.6 (left: 1.6 13) ",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 + 13 = 53 (left: 53)",
                "5 * 9 = 45 (left: 1 45 13) || 13 + 1 = 14 (left: 14 45)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65) || 65 / 8 = 8.125 (left: 8.125)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 / 13 = 3.07692307692 (left: 3.07692307692)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 5.9",
                "2 <- 1.2",
                "3 <- 3.6",
                "4 <- 1.2",
                "5 <- 0.9",
                "6 <- 0.9",
                "7 <- 0.9",
                "8 <- 1.0",
                "9 <- 1.0"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "9 - 1 = 8 (left: 8 5 13) || 5 * 13 = 65 (left: 8 65) || 8 + 65 = 73 (left: 73)",
                "9 - 1 = 8 (left: 8 5 13) || 5 - 13 = -8 (left: -8 13)",
                "9 - 1 = 8 (left: 8 5 13) || 8 * 5 = 40 (left: 40 13) || 40 * 13 = 520 (left: 520)",
                "9 - 1 = 8 (left: 8 5 13) || 13 - 5 = 8 (left: 8 8)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7)",
                "13 - 5 = 8 (left: 1 8  || 1 + 8 = 9 (left: 9)",
                "13 - 5 = 8 (left: 1 8  || 8 / 1 = 8 (left: 8)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 7 + 8 = 15 (left: 15)",
                "13 - 5 = 8 (left: 1 8  || 8 - 1 = 7 (left: 7 8) || 7 * 8 = 56 (left: 56)"
            ]
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Step 0": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)",
                "6 + 7 = 13 (left: 5 13 13)",
                "13 - 7 = 6 (left: 5 6 6)",
                "6 + 7 = 13 (left: 5 13 13)",
                "13 - 7 = 6 (left: 5 6 6)",
                "5 * 6 = 30 (left: 7 30 13)",
                "5 + 6 = 11 (left: 7 11 13)",
                "5 * 6 = 30 (left: 7 30 ",
                "5 + 6 = 11 (left: 7 11 13)",
                "6 - 5 = 1 (left: 1 6 "
            ],
            "Evaluation": [
                1.002,
                1.002,
                22.0,
                0.003,
                21.0,
                3.0,
                1.002,
                0.003,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 0.2",
                "4 <- 0.5",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- INIT",
                "9 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 5 * 6 = 30 (left: 30)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6) || Input: 3 7 7",
                "5 * 6 = 30 (left: 7 30 13) || 7 / 30 = 0.23333333333 (left: 13 0.23333333333)",
                "5 * 6 = 30 (left: 7 30 13)",
                "13 - 6 = 7 (left: 5 7 13)",
                "6 - 5 = 1 (left: 1 6  || 6 - 1 = 5 (left: 5)",
                "7 - 5 = 2 (left: 2 6 13)",
                "13 - 7 = 6 (left: 5 6 6) || 5 / 6 = 0.8333 (left: 0.8333 6)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                41.0,
                0.003,
                1.002,
                3.0,
                2.001,
                0.001,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 0.2",
                "3 <- 0.9",
                "4 <- 0.9",
                "5 <- 0.9",
                "6 <- 1.1",
                "7 <- 1.2",
                "8 <- 0.9",
                "9 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 7 = 42 (left: 5 42 ",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)",
                "6 - 5 = 1 (left: 1 6  || 1 * 6 = 6 (left: 6)",
                "6 - 5 = 1 (left: 1 6  || 6 - 1 = 5 (left: 5)",
                "6 - 5 = 1 (left: 1 6  || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "6 - 5 = 1 (left: 1 6  || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.002,
                0.001,
                0.0,
                0.002,
                0.003,
                0.003,
                0.001,
                0.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.6",
                "2 <- 0.9",
                "3 <- 1.2",
                "4 <- 0.2",
                "5 <- 0.9",
                "6 <- 1.2",
                "7 <- 0.9",
                "8 <- 1.6",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "5 + 6 = 11 (left: 7 11 13) || 7 * 11 = 77 (left: 13 77)",
                "6 - 5 = 1 (left: 1 6  || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "6 - 5 = 1 (left: 1 6  || 6 - 1 = 5 (left: 5) ",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 - 5 = 1 (left: 1 6  || 6 + 1 = 7 (left: 7)",
                "13 - 6 = 7 (left: 5 7 13) || 13 - 7 = 6 (left: 5 6)",
                "6 + 7 = 13 (left: 5 13 13)"
            ],
            "Evaluation": [
                0.001,
                1.002,
                0.002,
                0.001,
                60.0,
                0.002,
                0.002,
                0.0,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 2.0",
                "2 <- 0.2",
                "3 <- 1.1",
                "4 <- 1.4",
                "5 <- 3.4",
                "6 <- 3.4",
                "7 <- 1.2",
                "8 <- INIT",
                "9 <- 3.4"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "6 * 7 = 42 (left: 5 42  || Possible next steps:",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11) || 6 / 11 = 0.545454 (left: 0.545454)",
                "5 * 6 = 30 (left: 7 30 13) || 7 / 30 = 0.23333333333 (left: 13 0.23333333333) || 13 + 0.23333333333 = 13.23333333333 (left: 13.23333333333)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "7 - 5 = 2 (left: 2 6 13)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 3.4",
                "2 <- 0.2",
                "3 <- 3.4",
                "4 <- 3.4",
                "5 <- 3.4",
                "6 <- 3.4",
                "7 <- 1.2",
                "8 <- 0.5",
                "9 <- 3.4"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 6 = 7 (left: 5 7 13) || 13 - 7 = 6 (left: 5 6) || 6 + 5 = 11 (left: 11)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 / 5 = 1.2 (left: 1.2 6 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "5 * 6 = 30 (left: 7 30 13) || 30 / 7 = 4.29 (left: 4.29 13)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6) "
            ],
            "Evaluation": [
                0.002,
                0.0,
                3.0,
                0.002,
                0.003,
                0.003,
                0.002,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 3.4",
                "2 <- 0.9",
                "3 <- 3.4",
                "4 <- 5.2",
                "5 <- 1.2",
                "6 <- 3.4",
                "7 <- 1.9",
                "8 <- 3.4",
                "9 <- 0.9"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || Possible",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 - 5 = 1 (left: 1 6  || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 / 5 = 1.2 (left: 1.2 6 6) || 1.2 + 6 = 7.2 (left: 6 7.2)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 5 / 6 = 0.8333 (left: 0.8333 6) || 6 / 0.8333 = 7.2 (left: 7.2)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 - 5 = 1 (left: 1 6  || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                0.001,
                0.002,
                0.0,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 0.9",
                "2 <- 3.4",
                "3 <- 4.0",
                "4 <- 0.2",
                "5 <- 3.4",
                "6 <- 0.9",
                "7 <- 3.4",
                "8 <- 3.4",
                "9 <- 3.4"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 - 5 = 1 (left: 1 6  || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 + 7 = 13 (left: 5 13 13) || 13 / 5 = 2.6 (left: 2.6 13) || 13 / 2.6 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 - 5 = 1 (left: 1 6  || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                41.0,
                0.003,
                0.002,
                0.003,
                0.001,
                0.001
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 0.4",
                "2 <- 3.4",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 7.4",
                "6 <- 0.9",
                "7 <- 7.4",
                "8 <- 3.4",
                "9 <- 1.1"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 - 5 = 1 (left: 1 6  || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11) || 11 - 6 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.001,
                0.003,
                0.002,
                0.001,
                0.002,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 8.1",
                "2 <- 8.1",
                "3 <- 8.1",
                "4 <- 3.4",
                "5 <- 8.1",
                "6 <- 8.1",
                "7 <- 3.4",
                "8 <- 1.2",
                "9 <- 7.4"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ]
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Step 0": {
            "steps": [
                "10 - 8 = 2 (left: 2 8 10)",
                "8 + 5 = 13 (left: 5 13 10)",
                "10 - 5 = 5 (left: 5 8 5)",
                "10 - 5 = 5 (left: 5 8 10)",
                "",
                "10 - 5 = 5 (left: 5 8 5)",
                "8 + 5 = 13 (left: 5 10 13)",
                "5 + 5 = 10 (left: 8 10)",
                "10 - 8 = 2 (left: 5 2 ",
                "5 * 8 = 40 (left: 10 40 10)"
            ],
            "Evaluation": [
                1.002,
                22.0,
                3.0,
                60.0,
                0.003,
                3.0,
                0.003,
                1.001,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.5",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.9",
                "5 <- 0.3",
                "6 <- 0.3",
                "7 <- 0.3",
                "8 <- 0.9",
                "9 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "5 / 5 = 1 (left: 1 5 8)",
                "10 - 5 = 5 (left: 5 8 5) || 5 - 8 = -3 (left: -3 5)",
                "5 / 5 = 1 (left: 1 8 10)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 10)",
                "10 - 5 = 5 (left: 5 8 10) || 10 + 5 = 15 (left: 8 15)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50)",
                "10 - 5 = 5 (left: 5 8 10) || 10 - 8 = 2 (left: 2 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                1.001,
                0.0,
                21.001,
                0.0,
                0.003,
                0.001,
                1.0,
                3.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- 0.9",
                "5 <- 0.9",
                "6 <- 0.9",
                "7 <- 0.3",
                "8 <- 0.9",
                "9 <- 0.3"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 10 / 5 = 2 (left: 2 10)",
                "5 * 8 = 40 (left: 10 40)",
                "10 + 5 = 15 (left: 5 8 15)",
                "5 * 8 = 40 (left: 10 40 10) || 10 / 40 = 0.25 (left: 0.25 10)",
                "5 * 8 = 40 (left: 10 40 10) || 40 - 10 = 30 (left: 10 30 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10)",
                "10 - 5 = 5 (left: 5 8 10) || 5 + 8 = 13 (left: 10 13)"
            ],
            "Evaluation": [
                2.0,
                0.001,
                1.002,
                0.0,
                0.002,
                0.002,
                41.0,
                1.0,
                60.0,
                1.001
            ],
            "Resampling": [
                "0 <- 2.8",
                "1 <- 0.9",
                "2 <- 0.1",
                "3 <- 2.6",
                "4 <- 0.3",
                "5 <- 0.9",
                "6 <- 1.4",
                "7 <- 2.8",
                "8 <- 2.8",
                "9 <- 0.9"
            ]
        },
        "Step 3": {
            "steps": [
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 - 10 = 390 (left: 10 390)",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 10 4 ",
                "8 + 5 = 13 (left: 5 13 10) || 13 / 5 = 2.6 (left: 2.6 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 10 50) || 10 * 10 = 100 (left: 100 50)",
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 10 = 100 (left: 40 10 100)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50) || 50 - 10 = 40 (left: 40)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 - 10 = 390 (left: 10 390)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 + 400 = 410 (left: 410 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50)"
            ],
            "Evaluation": [
                0.002,
                1.001,
                0.0,
                2.0,
                0.003,
                1.002,
                0.003,
                0.001,
                21.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 3.8",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- 0.3",
                "5 <- 3.8",
                "6 <- 0.3",
                "7 <- 2.8",
                "8 <- 0.3",
                "9 <- 0.3"
            ]
        },
        "Step 4": {
            "steps": [
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 + 400 = 410 (left: 410 10) || 410 - 10 = 400 (left: 400)",
                "5 * 5 = 25 (left: 8 25 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50)",
                "10 - 5 = 5 (left: 5 8 10) || 10 - 5 = 5 (left: 5 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 + 400 = 410 (left: 410 10) || 410 - 10 = 400 (left: 400)",
                "10 - 5 = 5 (left: 5 8 10) || 10 - 5 = 5 (left: 5 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 / 10 = 40 (left: 40 10)",
                "10 - 5 = 5 (left: 5 8 10) || 10 - 5 = 5 (left: 5 10)",
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 8 10)"
            ],
            "Evaluation": [
                60.0,
                3.0,
                21.001,
                0.002,
                0.002,
                21.0,
                0.002,
                60.0,
                60.0,
                3.0
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 3.5",
                "2 <- 2.8",
                "3 <- 4.8",
                "4 <- 4.5",
                "5 <- 0.9",
                "6 <- 0.9",
                "7 <- 4.0",
                "8 <- 2.8",
                "9 <- 4.8"
            ]
        },
        "Step 5": {
            "steps": [
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 / 10 = 40 (left: 40 10) || 40 - 10 = 30 (left: 30)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 10 = 100 (left: 40 10 100) || 100 / 10 = 10 (left: 40 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || Input: 5",
                "5 * 8 = 40 (left: 10 40 10) || 40 - 10 = 30 (left: 10 30)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 / 10 = 40 (left: 40 10) || Input: 6 3 1",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 4 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 + 10 = 410 (left: 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 / 10 = 40 (left: 10 40)",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 4"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.003,
                41.0,
                60.0,
                0.002,
                0.002,
                0.002,
                2.001
            ],
            "Resampling": [
                "0 <- 5.5",
                "1 <- 4.7",
                "2 <- 5.5",
                "3 <- 1.4",
                "4 <- 0.3",
                "5 <- 5.5",
                "6 <- 0.1",
                "7 <- 4.7",
                "8 <- 0.1",
                "9 <- 4.0"
            ]
        },
        "Step 6": {
            "steps": [
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 * 10 = 4000 (left: 4000)",
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 8 10) || 10 / 3 = 3.33 (left: 3.33 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 * 10 = 4000 (left: 4000)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50) || 50 - 10 = 40 (left: 40)",
                "10 - 5 = 5 (left: 5 8 10) || 10 - 5 = 5 (left: ",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 / 10 = 40 (left: 40)",
                "8 + 5 = 13 (left: 5 13 10) || 13 / 5 = 2.6 (left: 2.6 10)",
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 8 10) || 8 / 3 = 2.67 (left: 2.67 10)",
                "8 + 5 = 13 (left: 5 13 10) || 10 - 5 = 5 (left: 5 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 5 - 2 = 3 (left: 3 7)"
            ],
            "Evaluation": [
                0.003,
                1.001,
                0.003,
                0.003,
                0.0,
                0.003,
                0.0,
                0.003,
                1.001,
                1.0
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 4.0",
                "2 <- 4.2",
                "3 <- 5.5",
                "4 <- 5.4",
                "5 <- 4.7",
                "6 <- 5.5",
                "7 <- 0.9",
                "8 <- 4.0",
                "9 <- 4.0"
            ]
        },
        "Step 7": {
            "steps": [
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 + 400 = 410 (left: 410 10) || 410 - 10 = 400 (left: 400)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 / 10 = 40 (left: 40)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50) || 10 * 50 = 500 (left: 500)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 - 10 = 390 (left: 10)",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 4 10) || 10 / 4 = 2.5 (left: 2.5)",
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 8 10) || 3 -",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 + 10 = 410 (left: 410)",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 4 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 + 10 = 410 (left: 410)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 / 10 = 40 (left: 40)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                21.001,
                0.003,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- 7.9",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 5.4",
                "4 <- 5.5",
                "5 <- 0.9",
                "6 <- 4.8",
                "7 <- 4.0",
                "8 <- 0.0",
                "9 <- 1.4"
            ]
        },
        "Step 8": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 * 400 = 4000 (left: 10 4000)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 + 400 = 410 (left: 410 10)",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 4 10) || 5 + 3 = 8 (left: 8)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 * 10 = 4000 (left: 4000)",
                "5 * 8 = 40 (left: 10 40 10) || 40 - 10 = 30 (left: 10 30)",
                "5 * 8 = 40 (left: 10 40 10) || 40 - 10 = 30 (left: 10 30)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 - 10 = 390 (left: 390)",
                "10 - 8 = 2 (left: 2 8 10) || 10 / 2 = 5 (left: 5 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 + 40 = 50 (left: 10 50) || 10 + 50 = 60 (left: 60)"
            ],
            "Evaluation": [
                0.0,
                60.0,
                20.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.7",
                "1 <- 8.1",
                "2 <- 5.4",
                "3 <- 4.1",
                "4 <- 2.8",
                "5 <- 5.5",
                "6 <- 4.0",
                "7 <- 8.1",
                "8 <- 5.5",
                "9 <- 6.9"
            ]
        },
        "Step 9": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 8 - 5 = 3 (left: 3 8 10) || 3 + 8 = 11 (left: 10 11)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 * 400 = 4000 (left: 10 4000) || 4000 - 10 = 3990 (left: 10 3990)",
                "5 * 8 = 40 (left: 10 40 10) || 40 / 10 = 4 (left: 4 10) || 3 + 9 = 12 (left: 12 27)",
                "5 * 5 = 25 (left: 8 25 10) || 25 / 8 = 3.125 (left: 3.125 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 400 / 10 = 40 (left: 40 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 + 10 = 410 (left: 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 * 10 = 4000 (left: 4000)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 10 400 10) || 10 * 400 = 4000 (left: 10 4000) || 4000 - 10 = 3990 (left: 3990)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 400 + 10 = 410 (left: 10)",
                "5 * 8 = 40 (left: 10 40 10) || 10 * 40 = 400 (left: 400 10) || 5 - 2 = 3 (left: 3 7) || Possible next steps:"
            ]
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 2 10 12)",
                "4 * 2 = 8 (left: 8 6 ",
                "6 * 2 = 12 (left: 4 12 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "4 * 2 = 8 (left: 8 6 ",
                "12 / 2 = 6 (left: 4 6 ",
                "12 / 2 = 6 (left: 2 6 12)",
                "6 / 2 = 3 (left: 3 4 12)",
                "6 * 2 = 12 (left: 4 6 ",
                "12 - 2 = 10 (left: 10 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                21.001,
                60.0,
                1.001,
                60.0,
                3.0,
                41.0,
                20.0,
                0.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.2",
                "2 <- 0.5",
                "3 <- 0.5",
                "4 <- 0.7",
                "5 <- INIT",
                "6 <- 0.8",
                "7 <- INIT",
                "8 <- 0.3",
                "9 <- 0.5"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12)",
                "6 * 2 = 12 (left: 4 12 12) || 12 / 4 = 3 (left: 3 12)",
                "12 / 2 = 6 (left: 4 6  || 3 + 9 = 12 (left: 12 27)",
                "12 / 2 = 6 (left: 4 6  || 6 / 4 = 1.5 (left: 1.5)",
                "6 / 2 = 3 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "6 * 2 = 12 (left: 4 12 12)",
                "6 * 2 = 12 (left: 4 6  || 4 + 6 = 10 (left: 10)",
                "6 * 2 = 12 (left: 4 12 12)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12)",
                "12 / 2 = 6 (left: 4 6  || 4 + 6 = 10 (left: 10)"
            ],
            "Evaluation": [
                40.0,
                20.002,
                0.003,
                0.002,
                60.0,
                1.002,
                0.003,
                2.001,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.7",
                "2 <- 0.5",
                "3 <- 1.0",
                "4 <- 0.7",
                "5 <- 0.2",
                "6 <- 0.8",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- 0.3"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 2 = 3 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24",
                "6 / 2 = 3 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)",
                "12 / 2 = 6 (left: 4 6  || 4 * 6 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12 (left: 12)",
                "6 / 2 = 3 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12)",
                "6 * 2 = 12 (left: 4 12 12) || 12 - 4 = 8 (left: 8 12 12)",
                "6 * 2 = 12 (left: 4 6  || 3",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                0.002,
                0.003,
                1.002,
                0.003,
                20.002,
                60.0,
                20.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 1.8",
                "2 <- 1.1",
                "3 <- 2.2",
                "4 <- 0.5",
                "5 <- 0.7",
                "6 <- 2.1",
                "7 <- 0.8",
                "8 <- 2.9",
                "9 <- 2.8"
            ]
        },
        "Step 3": {
            "steps": [
                "6 * 2 = 12 (left: 4 12 12) || 12 - 12 = 0 (left: 4 0)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "6 * 2 = 12 (left: 4 12 12) || 12 / 4 = 3 (left: 3 12) || 3 + 12 = 15 (left: 15)",
                "12 / 2 = 6 (left: 4 6  || 4 * 6 = 24 (left: 24) || Answer: 4 * (12 / 2) = 24",
                "12 / 2 = 6 (left: 4 6  || 4 + 6 = 10 (left: 10)",
                "6 / 2 = 3 (left: 3 4 12) || 3 + 4 = 7 (left: 7 12)",
                "6 / 2 = 3 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "6 * 2 = 12 (left: 4 6  || 4 * 6 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((2 + 4) + 6) + 12 = 24"
            ]
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Step 0": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 6 = 5 (left: 5 7 8)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 4 ",
                "8 - 6 = 2 (left: 2 7 11)",
                "6 * 7 = 42 (left: 8 11 42)",
                "7 * 8 = 56 (left: 6 11 56)",
                "11 - 6 = 5 (left: 5 7 8)",
                "7 + 8 = 15 (left: 6 15 11)",
                "7 + 8 = 15 (left: 6 11 15)"
            ],
            "Evaluation": [
                1.002,
                3.0,
                1.002,
                60.0,
                1.002,
                22.0,
                2.0,
                3.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- 0.3",
                "5 <- 0.3",
                "6 <- INIT",
                "7 <- 0.3",
                "8 <- 0.8",
                "9 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "7 + 8 = 15 (left: 6 15 11)",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "6 / 7 = 0.857 (left: 0.857 8 11)",
                "11 - 7 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)",
                "7 + 8 = 15 (left: 6 15 11) || 11 - 6 = 5 (left: 5 11)",
                "11 - 7 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)"
            ],
            "Evaluation": [
                60.0,
                1.002,
                0.001,
                1.002,
                0.003,
                60.0,
                2.001,
                0.0,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- INIT",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- 1.0",
                "5 <- 1.0",
                "6 <- 1.5",
                "7 <- 0.3",
                "8 <- 0.3",
                "9 <- 1.5"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42) || 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273 42)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24"
            ],
            "Evaluation": [
                1.001,
                1.002,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.5",
                "2 <- 2.9",
                "3 <- 2.4",
                "4 <- 2.5",
                "5 <- 2.9",
                "6 <- 2.5",
                "7 <- 1.0",
                "8 <- 0.3",
                "9 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (3 + 7) * (3 - 8) * 4 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n12 + 3 = 15 (left: 7 15)\n15 + 7 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 4) + 3) + 7 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 5) * (8 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n5 + 9 = 14 (left: 14 9)\n14 - 9 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 * 3) + (5 + 9)) - 9 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) * (6 - 3) = 63",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "11 - 7 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10)"
            ],
            "Evaluation": [
                60.0,
                0.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 2.3",
                "2 <- 3.8",
                "3 <- 1.5",
                "4 <- 3.8",
                "5 <- 3.9",
                "6 <- 2.3",
                "7 <- 3.0",
                "8 <- 3.6",
                "9 <- 0.7"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 4 = 24 (left: 24)\nAnswer: ((7 - 3) * 4) + 3 + 4 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 6 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 3)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n12 + 7 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) - 3 + 8 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\n10 * 24 = 24\nAnswer: (3 + 7) * 8 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 9\nSteps:\n3 * 4 = 12 (left: 3 9 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (3 * 4) * (9 - 3) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 6 = 5 (left: 5 7 8) || 7 + 8 = 15 (left: 5 15)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.001,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 3.9",
                "2 <- 3.8",
                "3 <- 4.5",
                "4 <- 4.8",
                "5 <- 2.8",
                "6 <- 4.0",
                "7 <- 4.7",
                "8 <- 2.8",
                "9 <- 2.9"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5 4)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 * 3 = 24 (left: 24)\nAnswer: (5 + 3) * (3 * 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 8 9)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 24 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) * (7 - 3)) * 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) + 3 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n21 - 8 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: (((3 * 7) + (5 + 3)) -",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) + 3) * "
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                2.001
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 5.0",
                "2 <- 3.7",
                "3 <- 2.6",
                "4 <- 4.3",
                "5 <- 5.6",
                "6 <- 3.8",
                "7 <- 5.8",
                "8 <- 4.5",
                "9 <- 5.6"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: ((4 + 6) * 3) - 5 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 3 = 16 (left: 24)\nAnswer: ((3 * 7) - 5) / 3 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 * 3 = 39 (left: 39)\nAnswer: ((3 * 7) - 5) - 3 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || All possible solutions have been provided.",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n3 * 9 = 27 (left: 27)\nAnswer: (3 * 5) - (6 + 3) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.001
            ],
            "Resampling": [
                "0 <- 6.5",
                "1 <- 6.4",
                "2 <- 2.3",
                "3 <- 6.6",
                "4 <- 4.9",
                "5 <- 4.9",
                "6 <- 4.0",
                "7 <- 6.5",
                "8 <- 6.1",
                "9 <- 5.5"
            ]
        },
        "Step 7": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 12 8)\n12 - 8 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 * 3 = 24 (left: 7 24)\nAnswer: (3 + 5) * 3 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) / (3 * 4) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n3 * 1 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 7 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 4 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 3 = 18 (left: 4 18)\n18 / 4 = 4.5 (left: 4.5 24)\n4.5 * 24 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * (18 / 4) = ",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 7) - 4) + 10 = 24"
            ],
            "Evaluation": [
                60.0,
                2.001,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.7",
                "1 <- 7.4",
                "2 <- 4.7",
                "3 <- 7.4",
                "4 <- 7.2",
                "5 <- 4.0",
                "6 <- 4.7",
                "7 <- 2.4",
                "8 <- 3.3",
                "9 <- 7.6"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 7 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 5\nSteps:\n3 * 5 = 15 (left: 3 15 5)\n3 + 5 = 8 (left: 8 15)\n15 - 8 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - ",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 7 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 24)\nAnswer: (6 * 3) + (5 + 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) + 3 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 4 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 8.8",
                "2 <- 8.8",
                "3 <- 4.8",
                "4 <- 5.5",
                "5 <- 3.5",
                "6 <- 3.5",
                "7 <- 7.7",
                "8 <- 8.9",
                "9 <- 6.9"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n9 + 3 = 12 (left: 3 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) * 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 7 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\nAnswer: (3 * 7) - (18 / 8) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 3 4\nSteps:\n3 * 4 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\nAnswer: (3 * 4) * (3 * 3) = 108",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 - 9 = -3 (left: -3)\n-3 * 9 = 24 (left: 24)\nAnswer: 3 * (3 * 9) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) + 5) * 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)"
            ]
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Step 0": {
            "steps": [
                "9 - 7 = 2 (left: 2 9 13)",
                "13 - 9 =",
                "9 + 13 = 22 (left: 7 9 22)",
                "9 * 9 = 81 (left: 7 13 81)",
                "13 - 9 = 4 (left",
                "7 * 9 = 63 (left: 9 13 63)",
                "13 - 9 =",
                "9 - 3 = 6 (left: 6 9 13)",
                "9 - 7 = 2 (left: 2 9 13)",
                ""
            ],
            "Evaluation": [
                2.001,
                0.003,
                2.001,
                2.001,
                1.002,
                0.003,
                0.003,
                21.001,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.7",
                "4 <- 0.7",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 0.8"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 3 = 6 (left: 7 6 9)",
                "13 - 9 = 4 (left: 7 9 4)",
                "7 + 9 = 16 (left: 9 9 13)",
                "9 - 3 = 6 (left: 6 9 13) || 9 / 6 = 1.5 (left: 1.5 13)",
                "9 - 3 = 6 (left: 6 9 13) || 6 + 9 = 15 (left: 13 15)",
                "7 + 9 = 16 (left: 9 9 13)",
                "7 * 9 = 63 (left: 9 13 63)",
                "9 + 7 = 16 (left: 9 13 16)",
                "7 * 9 = 63 (left: 9 13 63)",
                "9 - 7 = 2 (left: 2 9 13) || 9 / 2 = 4.5 (left: 4.5 13)"
            ],
            "Evaluation": [
                2.001,
                2.001,
                22.0,
                1.001,
                0.003,
                3.0,
                3.0,
                2.001,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.3",
                "5 <- 1.6",
                "6 <- 1.0",
                "7 <- INIT",
                "8 <- 1.6",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 7 =",
                "7 + 9 = 16 (left: 9 9 13) || 9 / 9 = 1 (left: 1 13)",
                "13 - 7 = 6 (left: 6 9 ",
                "9 - 7 = 2 (left: 2 9 13)",
                "9 * 9 = 81 (left: 7 13 81) || 81 / 7 = 11.57 (left: 11.57 81)",
                "7 * 9 = 63 (left: 9 13 63) || 13 / 9 = 1.444... (left: 1.444... 63)",
                "9 - 3 = 6 (left: 7 6 9) || 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 9)",
                "9 - 7 = 2 (left: 2 9 13)",
                "7 * 9 = 63 (left: 9 13 63) || 63 - 9 = 54 (left: 13 54)",
                "13 - 9 = 4 (left: 7 9 "
            ],
            "Evaluation": [
                0.003,
                0.002,
                20.002,
                0.003,
                0.003,
                1.0,
                3.0,
                2.001,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.2",
                "2 <- 2.2",
                "3 <- 1.2",
                "4 <- 0.7",
                "5 <- 0.8",
                "6 <- 1.2",
                "7 <- 1.1",
                "8 <- 2.5",
                "9 <- 1.8"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 7 = 6 (left: 6 9  || Input: 1.5 7",
                "13 - 7 = 6 (left: 6 9  || Possible next steps:",
                "13 - 7 = 6 (left: 6 9  || Input: 3 5 7",
                "7 + 9 = 16 (left: 9 9 13) || 9 / 9 = 1 (left: 1 13)",
                "9 - 3 = 6 (left: 6 9 13) || 9 + 6 = 15 (left: 15 13)",
                "9 - 7 = 2 (left: 2 9 13) || 9 / 2 = 4.5 (left: 4.5 13)",
                "7 + 9 = 16 (left: 9 9 13) || 13 * 9 = 117 (left: 9 117)",
                "13 - 9 = 4 (left: 7 9 4) || 9 - 4 = 5 (left: 5 4)",
                "7 * 9 = 63 (left: 9 13 63) || 13 / 9 = 1.444... (left: 1.444... 63) || 63 - 1.444... = 61.555... (left: 61.555...)",
                "7 * 9 = 63 (left: 9 13 63) || 9 + 13 = 22 (left: 22 63)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                1.001,
                1.002,
                1.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 1.2",
                "2 <- 0.7",
                "3 <- 0.7",
                "4 <- 0.7",
                "5 <- 1.2",
                "6 <- 2.2",
                "7 <- 0.7",
                "8 <- 1.2",
                "9 <- 1.2"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 7 = 6 (left: 6 9  || Input: 3 7 5 ",
                "7 + 9 = 16 (left: 9 9 13) || 9 / 9 = 1 (left: 1 13)",
                "9 - 3 = 6 (left: 6 9 13) || 9 * 13 = 117 (left: 6 117)",
                "9 - 3 = 6 (left: 6 9 13) || 6 + 9 = 15 (left: 13 15)",
                "9 - 3 = 6 (left: 6 9 13) || Input: 1 2",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4)",
                "13 - 7 = 6 (left: 6 9  || 9 - 6 = 3 (left: 3 9)",
                "9 - 3 = 6 (left: 6 9 13) || 6 * 9 = 54 (left: 13 54)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 4 4)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003,
                0.003,
                40.001
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 1.6",
                "2 <- 4.9",
                "3 <- 4.5",
                "4 <- 0.7",
                "5 <- 4.9",
                "6 <- 4.9",
                "7 <- 2.8",
                "8 <- 4.5",
                "9 <- 4.5"
            ]
        },
        "Step 5": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 + 4 = 13 (left: 13)",
                "7 * 9 = 63 (left: 9 13 63) || 13 - 9 = 4 (left: 4 13)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 - 4 = 5 (left: 5)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 + 4 = 13 (left: 13)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 / 4 = 2.25 (left: 2.25)",
                "7 * 9 = 63 (left: 9 13 63) || 63 - 9 = 54 (left: 13 54) || 13 - 54 = -41 (left: -41)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 - 4 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                40.0,
                60.0,
                0.001,
                0.001,
                0.002,
                40.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.3",
                "3 <- 5.4",
                "4 <- 1.2",
                "5 <- 5.8",
                "6 <- 5.8",
                "7 <- 5.8",
                "8 <- 4.5",
                "9 <- 5.3"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 - 4 = 2 (left: 2)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 - 4 = 2 (left: 2)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || There is only one number, so no possible next steps.",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 + 4 = 10 (left: 10)",
                "7 + 9 = 16 (left: 9 9 13) || 9 * 13 = 117 (left:",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 - 2 = 34 (left: 34)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || There is only one number given, so there are no possible arithmetic operations to perform on it.",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || There are no possible next steps with just the number 36.",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 + 4 = 13 (left: 13)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 / 2 = 18"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.0,
                0.003,
                40.001
            ],
            "Resampling": [
                "0 <- 5.8",
                "1 <- 4.5",
                "2 <- 3.6",
                "3 <- 6.9",
                "4 <- 4.9",
                "5 <- 5.4",
                "6 <- 4.9",
                "7 <- 5.4",
                "8 <- 6.9",
                "9 <- 5.4"
            ]
        },
        "Step 7": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || None - 36 is a single number and there are no other numbers to operate on.",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 / 4 = 2.25 (left: 2.25)",
                "7 + 9 = 16 (left: 9 9 13) || 13 * 9 = 117 (left: 9 117) || 9 * 117 = 1053 (left: 1053)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 + 4 = 13 (left: 13)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 + 4 = 10 (left: 10)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 - 4 = 5 (left: 5)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 / 4 = 1.5 (left: 1.5)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 - 4 = 5 (left: 5)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.002,
                0.003,
                0.002,
                0.001,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 5.4",
                "2 <- 7.3",
                "3 <- 2.5",
                "4 <- 2.2",
                "5 <- 7.9",
                "6 <- 7.3",
                "7 <- 7.3",
                "8 <- 7.9",
                "9 <- 7.9"
            ]
        },
        "Step 8": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 / 4 = 2.25 (left: 2.25)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || None, as there is only one number given.",
                "7 * 9 = 63 (left: 9 13 63) || 13 / 9 = 1.444... (left: 1.444... 63) || 63 - 1 = 62 (left: 1.444... ",
                "13 - 7 = 6 (left: 6 9  || 6 + 9 = 15 (left: 9 15)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24) || Answer: 6 * (9 - (13 - 9)) = 24",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || There are no possible next steps for the number 36 as it is not possible to break it down further using the operations of addition, subtraction, multiplication, and division with the numbers provided.",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24) || Answer: 6 * (9 - (13 - 9)) = 24",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24) || Answer: 6 * (9 - (13 - 9)) = 24"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.003,
                0.002,
                22.0,
                0.003,
                0.003,
                1.002,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.3",
                "1 <- 5.8",
                "2 <- 8.8",
                "3 <- 7.9",
                "4 <- 5.3",
                "5 <- 4.5",
                "6 <- 8.9",
                "7 <- 7.3",
                "8 <- 5.3",
                "9 <- 8.9"
            ]
        },
        "Step 9": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || There are no possible next steps as there is only one number in the input.",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 / 2 = 18",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24) || Answer: (9 - 3) * (13 - 9) = 24",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || There is only one number given, so there are no possible next steps.",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 / 4 = 2.25 (left: 2.25)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 / 4 = 1.5 (left: 1.5)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 - 3 = 33 (left: 33)",
                "7 + 9 = 16 (left: 9 9 13) || 13 - 9 = 4 (left: 9 4) || 9 * 4 = 36 (left: 36) || 36 - 2 = 34 (left: 2 34)",
                "9 - 3 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4) || 6 * 4 = 24 (left: 24)"
            ]
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Step 0": {
            "steps": [
                "12 - 9 = 3 (left: 3 6 12)",
                "6 * 3 = 18 (left: 9 12 18)",
                "12 - 3 = 9 (left: 3 6 9)",
                "9 + 3 = 12 (left: 6 9 12)",
                "9 - 3 = 6 (left: 6 9 12)",
                "3 + 6 = 9 (left: 9 9 12)",
                "9 - 3 = 6 (left: 6 6 12)",
                "3 + 6 = 9 (left: 9 9 12)",
                "3 + 6 = 9 (left: 9 9 12)",
                "3 + 6 = 9 (left: 9 9 12)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                3.0,
                2.0,
                2.001,
                60.0,
                3.0,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 0.6",
                "2 <- 0.6",
                "3 <- INIT",
                "4 <- 0.6",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.6",
                "8 <- 0.6",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 36 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 / 6 = 1 (left: 1 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 / 6 = 1 (left: 1 12)",
                "9 * 3 = 27 (left: 6 9 27)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12)",
                "6 * 3 = 18 (left: 9 18 12)",
                "3 + 6 = 9 (left: 9 9 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 6 12 36)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 12 36)"
            ],
            "Evaluation": [
                40.0,
                0.003,
                0.002,
                41.0,
                20.0,
                3.0,
                1.0,
                20.002,
                21.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.6",
                "2 <- 0.6",
                "3 <- 0.6",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 0.6",
                "7 <- 1.0",
                "8 <- 1.7",
                "9 <- 1.8"
            ]
        },
        "Step 2": {
            "steps": [
                "9 * 3 = 27 (left: 6 9 27) || 9 * 3",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12)",
                "9 - 3 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 / 6 = 1 (left: 1 12)",
                "6 - 3 = 3 (left: 3 9 12)",
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 18)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 36 12) || 36 + 12 = 48 (left: 48)",
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 6 12 36) || 6 * 3 = 18 (left: 18 12)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                0.003,
                0.001,
                2.001,
                20.002,
                20.0,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.5",
                "1 <- 2.1",
                "2 <- 1.5",
                "3 <- 0.6",
                "4 <- 2.1",
                "5 <- 1.3",
                "6 <- 2.1",
                "7 <- 1.8",
                "8 <- 1.4",
                "9 <- 0.7"
            ]
        },
        "Step 3": {
            "steps": [
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 18) || 6 / 6 = 1 (left: 1 18)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 * 0 = 0 (left",
                "6 * 3 = 18 (left: 9 18 12) || 9 * 2 = 18 (left: 18 12)",
                "9 - 3 = 6 (left: 6 6 12) || 12 + 6 = 18 (left: 6 18)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12",
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 9 18)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 - 0 = 12 (left: 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 6 12 36) || 12 * 3 = 36 (left: 12 36)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12 (left: 12)",
                "3 + 6 = 9 (left: 9 9 12) || 9 - 9 = 0 (left: 0 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                1.002,
                0.003,
                1.001,
                0.003,
                20.002,
                0.003,
                20.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 3.9",
                "2 <- 1.7",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 1.0",
                "6 <- 1.3",
                "7 <- 2.6",
                "8 <- 1.4",
                "9 <- 0.6"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12)",
                "3 + 6 = 9 (left: 9 9 12) || 9 - 9 = 0 (left: 0 12) || 0 * 12 = 0 (left: 0)",
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 * 0 = 0 (left: 0)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12 (left: 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 36 12) || 36 + 12 = 48 (left: 48)",
                "9 * 3 = 27 (left: 6 9 27) || 27 / 3 = 9 (left: 6 9 9)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 * 0 = 0 (left: 0)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 * 12 = 0 (left: 0)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 6 2)"
            ],
            "Evaluation": [
                60.0,
                0.002,
                0.003,
                0.003,
                0.002,
                0.003,
                40.001,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.5",
                "1 <- 1.0",
                "2 <- 3.9",
                "3 <- 0.1",
                "4 <- 0.6",
                "5 <- 1.0",
                "6 <- 2.1",
                "7 <- 3.7",
                "8 <- 4.0",
                "9 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 18) || 18 - 6 = 12 (left: 12 18)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 36 12) || 12 / 36 = 0.3333 (left: 0.3333)",
                "3 + 6 = 9 (left: 9 9 12) || 9 - 9 = 0 (left: 0 12) || 12 - 0 = 12 (left: 12)",
                "6 * 3 = 18 (left: 9 12 18) || 12 / 9 = 1.33 (left: 1.33 18)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 36 12) || 36 / 12 = 3 (left: 3)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 6 12 36) || 12 * 3 = 36 (left: 12 36) || 12 * 3 = 36 (left: 36)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                3.0,
                0.002,
                0.003,
                0.003,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 5.9",
                "2 <- 4.6",
                "3 <- 5.7",
                "4 <- 5.9",
                "5 <- 5.8",
                "6 <- 4.6",
                "7 <- 5.7",
                "8 <- 4.0",
                "9 <- 1.3"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 + 12 = 14",
                "9 * 3 = 27 (left: 6 9 27) || 27 / 3 = 9 (left: 6 9 9) || 9 - 6 = 3 (left: 3 9 9)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 6) * 12 = 24",
                "9 * 3 = 27 (left: 6 9 27) || 27 / 3 = 9 (left: 6 9 9) || 9 - 6 = 3 (left: 3 9 9)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "9 * 3 = 27 (left: 6 9 27) || 9 / 3 = 3 (left: 6 3 27)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                1.002,
                0.001,
                0.003,
                0.002,
                2.0,
                20.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 5.7",
                "2 <- 4.0",
                "3 <- 6.8",
                "4 <- 5.8",
                "5 <- 6.8",
                "6 <- 2.5",
                "7 <- 6.9",
                "8 <- 1.3",
                "9 <- 5.9"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 - 12 = -12 (left: -12)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 + 12 = 14",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 - 0 = 12 (left: 12)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 6) * 12 = 24",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 - 12 = -12 (left: -12)",
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 * 3 = 27 (left: 6 9 27) || 27 / 9 = 3 (left: 3 9)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                0.0,
                40.0,
                0.003,
                0.002,
                60.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 7.7",
                "2 <- 7.9",
                "3 <- 6.9",
                "4 <- 6.8",
                "5 <- 1.7",
                "6 <- 5.7",
                "7 <- 6.9",
                "8 <- 7.4",
                "9 <- 5.9"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 / 0 = undefined",
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12",
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 12) = 24",
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 16)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 + 12 = 14 (left: 12 14)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.001,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                41.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 6.7",
                "2 <- 6.8",
                "3 <- 8.6",
                "4 <- 8.8",
                "5 <- 8.1",
                "6 <- 7.4",
                "7 <- 8.7",
                "8 <- 8.8",
                "9 <- 8.9"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "9 - 3 = 6 (left: 6 6 12) || 6 * 6 = 36 (left: 36 12) || 36 * 12 = 432 (left: 432)",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12",
                "9 - 3 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 / 0 is undefined (left: 0 12)",
                "9 - 3 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 12)",
                "9 - 3 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24",
                "9 * 3 = 27 (left: 6 9 27) || 27 - 9 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 * 8 = 144 (left: 18 144)",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (9 - 3) * (6 / 6) * 12 = 24",
                "9 - 3 = 6 (left: 6 6 12) || ",
                "9 - 3 = 6 (left: 6 6 12) || 12 / 6 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: 6 * (9 - 3) * 12 = 24"
            ]
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Step 0": {
            "steps": [
                "12 - 6 = 6 (left: 6 13 12)",
                "13 - 6 = 7 (left: 7 12 13)",
                "6 + 9 = 15 (left: 12 13 15)",
                "12 * 13 = 156 (left: 6 9 ",
                "6 * 9 = 54 (left: 12 13 54)",
                "13 - 6 = 7 (left: ",
                "9 + 3 = 12 (left: 6 12 13)",
                "12 - 9 = 3 (left: 3 3 13)",
                "6 * 9 = 54 (left: 12 13 54)",
                "9 + 12 = 21 (left: 6 13 21)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.002,
                0.001,
                1.001,
                0.0,
                1.002,
                1.002,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.7",
                "2 <- 0.8",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 0.0",
                "6 <- INIT",
                "7 <- 0.0",
                "8 <- INIT",
                "9 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 9 = 15 (left: 12 13 15)",
                "12 - 9 = 3 (left: 3 3 13) || Input: 4 5 20",
                "6 * 9 = 54 (left: 12 13 54) || 13 + 54 = 67 (left: 12 67)",
                "9 / 3 = 3 (left: 6 12 13)",
                "9 / 6 = 1.5 (left: 1.5 12 13)",
                "12 - 6 = 6 (left: 6 13 12) || 13 - 6 = 7 (left: 7 12)",
                "12 + 1 = 13 (left: 6 9 13)",
                "12 - 6 = 6 (left: 6 13 12) || 13 - 6 = 7 (left: 7 12)",
                "9 - 6 = 3 (left: 3 12 ",
                "12 - 6 = 6 (left: 6 13 12) || 12 - 6 = 6 (left: 6 12)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                0.002,
                2.001,
                1.002,
                0.002,
                1.002,
                0.002,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.8",
                "2 <- 1.8",
                "3 <- 1.8",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- 1.8",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 9 = 54 (left: 12 13 54)",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9 12)",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)",
                "9 - 6 = 3 (left: 3 12 13)",
                "13 - 6 = 7 (left: 7 12 13)",
                "9 - 6 = 3 (left: 3 12  || 3 + 12 = 15 (left: 15)",
                "12 - 9 = 3 (left: 3 3 13)",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9)",
                "12 - 9 = 3 (left: 3 3 13)"
            ],
            "Evaluation": [
                1.001,
                0.002,
                0.002,
                40.0,
                3.0,
                0.003,
                0.002,
                21.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- 1.8",
                "3 <- 2.3",
                "4 <- 2.3",
                "5 <- 1.8",
                "6 <- 2.3",
                "7 <- 1.8",
                "8 <- 2.3",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4 12)",
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4)",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 3 9)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 + 2 = 38",
                "9 - 6 = 3 (left: 3 12  || 3 + 12 = 15 (left: 15)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || None - 36 is the final result.",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9 12)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "13 + 6 = 19 (left: 12 19)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 1.8",
                "3 <- INIT",
                "4 <- 2.3",
                "5 <- 1.8",
                "6 <- 2.7",
                "7 <- 2.4",
                "8 <- 2.3",
                "9 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4 12)",
                "6 + 9 = 15 (left: 12 13 15)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 + 2 = 38",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9 12)",
                "12 - 9 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps with the input of 36 as it is already a single number."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.6",
                "1 <- 2.7",
                "2 <- 2.7",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 4.7",
                "6 <- 1.8",
                "7 <- 1.8",
                "8 <- 2.4",
                "9 <- 1.8"
            ]
        },
        "Step 5": {
            "steps": [
                "12 + 1 = 13 (left: 6 9 13) || 9 - 6 = 3 (left: 3 9 13)",
                "12 - 9 = 3 (left: 3 3 13) || 3 * 13 = 39 (left: 3 39)",
                "12 - 9 = 3 (left: 3 3 13) || 3 * 3 = 9 (left: 9 13)",
                "9 - 6 = 3 (left: 3 12  || 3 + 12 = 15 (left: 15)",
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "9 - 6 = 3 (left: 3 12  || 5 + 7 = 12 (left: 9 12)",
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4)",
                "9 - 6 = 3 (left: 3 12 13) || 13 / 3 = 4 (left:",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)"
            ],
            "Evaluation": [
                1.002,
                0.001,
                0.002,
                0.001,
                0.002,
                0.003,
                0.003,
                0.002,
                0.0,
                20.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.8",
                "2 <- 1.8",
                "3 <- 2.7",
                "4 <- 5.0",
                "5 <- 4.7",
                "6 <- 1.8",
                "7 <- 5.9",
                "8 <- 4.7",
                "9 <- 4.7"
            ]
        },
        "Step 6": {
            "steps": [
                "12 - 6 = 6 (left: 6 9 13)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)",
                "9 - 6 = 3 (left: 3 12  || 12 * 3 = 36 (left: 12 36)",
                "12 - 9 = 3 (left: 3 3 13) || 3 / 3 = 1 (left: 1 13)",
                "12 + 1 = 13 (left: 6 9 13) || 9 - 6 = 3 (left: 3 9 13) || 13 - 3 = 10 (left:",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || No more possible next steps as there is only one number left.",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)"
            ],
            "Evaluation": [
                2.001,
                60.0,
                0.003,
                0.002,
                20.0,
                0.003,
                60.0,
                0.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 6.6",
                "2 <- 6.6",
                "3 <- 6.1",
                "4 <- 4.7",
                "5 <- 2.3",
                "6 <- 6.1",
                "7 <- 6.4",
                "8 <- 4.7",
                "9 <- 4.7"
            ]
        },
        "Step 7": {
            "steps": [
                "12 + 1 = 13 (left: 6 9 13) || 9 - 6 = 3 (left: 3 9 13) || 13 - 3 = 10 (left: || 13 * 3 = 39 (left: 39)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 - 2 = 34",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 3 = 12 (left: 12)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || No possible next steps as there is only one number.",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps with the input 36.",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "12 + 1 = 13 (left: 6 9 13) || 9 - 6 = 3 (left: 3 9 13) || 13 - 3 = 10 (left: || 13 * 3 = 39 (left: 39)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                60.0,
                0.0,
                20.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 7.7",
                "2 <- 6.1",
                "3 <- 7.3",
                "4 <- 5.9",
                "5 <- 4.7",
                "6 <- 7.7",
                "7 <- 1.8",
                "8 <- 7.7",
                "9 <- 6.6"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (9 - 6) * (12 + 13) = 24",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps for the number 36 as it is not possible to perform any arithmetic operation with the input provided.",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (9 - 6) * (12 + 13) = 24",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps as there are no other numbers given to perform operations on.",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (9 - 6) * (12 + 13) = 24",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9 12)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (9 - 6) * (12 + 13) = 24",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                40.001,
                1.002,
                40.001,
                40.0
            ],
            "Resampling": [
                "0 <- 8.9",
                "1 <- 8.9",
                "2 <- 4.7",
                "3 <- 7.3",
                "4 <- 8.8",
                "5 <- 7.7",
                "6 <- 2.3",
                "7 <- 8.9",
                "8 <- 6.4",
                "9 <- 8.8"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 - 8 = 28 (left: 8)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps as there are no other numbers given to perform operations with.",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (9 - 6) * (12 + 13) = 24",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps for the input 36 as it is a single number.",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((9 - 6) * 4) + 12 = 24",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || None, as there is only one number provided.",
                "12 + 1 = 13 (left: 6 9 13) || 9 - 6 = 3 (left: 3 9 13) || 13 - 3 = 10 (left: || 13 * 3 = 39 (left: 39)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There is only one number given, so there are no possible next steps to perform."
            ]
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Step 0": {
            "steps": [
                "9 + 4 = 13 (left: 7 13 13)",
                "7 / 4 = 1.75 (left: 1.75 9 13)",
                "13 - 9 = 4 (left: 4 7 4)",
                "4 + 7 = 11 (left: 9 11 13)",
                "4 + 7 = 11 (left: 9 11 13)",
                "9 - 4 = 5 (left: 5 7 13)",
                "7 / 4 = 1.75 (left: 1.",
                "4 * 7 = 28 (left: 9 28 13)",
                "4 * 7 = 28 (left: 9 13 28)",
                "9 + 4 = 13 (left: 7 13 13)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                41.0,
                1.002,
                2.001,
                3.0,
                0.0,
                3.0,
                1.001,
                22.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT",
                "2 <- 0.2",
                "3 <- 0.2",
                "4 <- 0.2",
                "5 <- 0.9",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- 0.2",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 + 4 = 13 (left: 7 13 13) || 7 * 13 = 91 (left: 13 91)",
                "4 * 7 = 28 (left: 9 13 28)",
                "13 - 9 = 4 (left: 4 7 4) || 4 + 7 = 11 (left: 4 11)",
                "13 - 9 = 4 (left: 4 7 4) || Input: 3 5 7 9",
                "13 - 9 = 4 (left: 4 7 4) || Possible",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: 6 13)",
                "4 + 7 = 11 (left: 9 11 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: 6 13)",
                "13 - 9 = 4 (left: 4 7 4) || 7 - 4 = 3 (left: 4 3)",
                "9 + 4 = 13 (left: 7 13 "
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.001,
                2.0,
                2.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.2",
                "8 <- 0.0",
                "9 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 + 7 = 11 (left: 4 11)",
                "9 + 4 = 13 (left: 7 13 13) || 13 + 7 = 20 (left: 7 20)",
                "4 * 7 = 28 (left: 9 28 13)",
                "7 - 4 = 3 (left: 3 9 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "4 + 7 = 11 (left: 9 11 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "13 - 9 = 4 (left: 4 7 4) || 4 + 7 = 11 (left: 4 11 4)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1 (left: 1 13)",
                "13 - 9 = 4 (left: 4 7 4) || Input: 6 10 3"
            ],
            "Evaluation": [
                0.001,
                0.003,
                3.0,
                0.003,
                20.002,
                1.002,
                41.0,
                3.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.1",
                "2 <- 2.4",
                "3 <- 1.8",
                "4 <- INIT",
                "5 <- 2.6",
                "6 <- 2.4",
                "7 <- 0.9",
                "8 <- 0.2",
                "9 <- 2.6"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4)",
                "7 / 4 = 1.75 (left: 1.75 9 13) || 1.75 * 9 = 15.75 (left: 15.75 13)",
                "13 - 9 = 4 (left: 4 7 13) || 7 / 4 = 1.75 (left: 1.75 13)",
                "13 - 9 = 4 (left: 4 7 4) || 7 - 4 = 3 (left: 4 3) || 4 / 3 = 1.33 (left: 1.33)",
                "4 * 7 = 28 (left: 9 28 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: 6 13)",
                "13 - 9 = 4 (left: 4 7 13) || 13 - 4 = 9 (left: 4 9)",
                "9 + 4 = 13 (left: 7 13 13) || 13 * 7 = 91 (left: 91)",
                "13 - 9 = 4 (left: 4 7 4) || 7 / 4 = 1.75 (left: 1.75 7 4)",
                "9 + 4 = 13 (left: 7 13 13) || 13 + 7 = 20 (left: 13 20)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                1.001,
                0.003,
                2.001,
                0.003,
                0.002,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.9",
                "2 <- 0.2",
                "3 <- 2.6",
                "4 <- 0.9",
                "5 <- 2.4",
                "6 <- INIT",
                "7 <- 2.6",
                "8 <- 2.6",
                "9 <- 2.2"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || Input: 3 6 9",
                "9 + 4 = 13 (left: 7 13 13) || 7 + 13 = 20 (left: 13 20)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 28)",
                "9 + 4 = 13 (left: 7 13 13) || 13 * 7 = 91 (left: 91)",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: ",
                "13 - 9 = 4 (left: 4 7 13) || 7 / 4 = 1.75 (left: 1.75 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: 6 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857 (left: 1.857 13)",
                "4 * 7 = 28 (left: 9 28 13) || 13 + 9 = 22 (left: 28 22)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.0,
                1.001,
                0.003,
                0.003,
                2.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 2.6",
                "2 <- 3.0",
                "3 <- 2.6",
                "4 <- 0.9",
                "5 <- 0.2",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- 0.9",
                "9 <- 2.6"
            ]
        },
        "Step 5": {
            "steps": [
                "4 * 7 = 28 (left: 9 28 13) || 9 * 28 = 252 (left: 252 13)",
                "9 + 4 = 13 (left: 7 13 13) || 7 + 13 = 20 (left: 13 20)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4) || -3 / 4 = -0.75 (left: -0.75)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1 (left: 1 13)",
                "9 + 4 = 13 (left: 7 13 13) || 7 * 13 = 91 (left: 13 91)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857... (left: 1.857... 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857 (left: 1.857 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: 6 13)",
                "9 + 4 = 13 (left: 7 13 13) || 7 + 13 = 20 (left: 13 20)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                2.001,
                0.003,
                21.0,
                1.0,
                3.0,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 5.5",
                "1 <- 2.4",
                "2 <- 5.5",
                "3 <- 1.6",
                "4 <- 5.7",
                "5 <- INIT",
                "6 <- 2.6",
                "7 <- 0.2",
                "8 <- 2.6",
                "9 <- 2.6"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || -3 + 4 = 1 (left: 1 4)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || 4 / -3 = -1.3333 (left: -1.3333 4)",
                "4 + 7 = 11 (left: 9 11 13) || 9 * 11 = 99 (left: 13 99)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857 (left: 1.857 13) || Input: 3 5 10",
                "9 - 4 = 5 (left: 5 7 13)",
                "9 + 4 = 13 (left: 7 13 13) || 7 + 13 = 20 (left: 13 20)",
                "13 - 9 = 4 (left: 4 7 4) || 7 - 4 = 3 (left: 3 4)",
                "9 + 4 = 13 (left: 7 13 13) || 7 * 13 = 91 (left: 13 91)",
                "9 + 4 = 13 (left: 7 13 13) || 7 * 13 = 91 (left: 13 91)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.0,
                0.002,
                0.003,
                3.0,
                0.003,
                22.0,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 6.1",
                "2 <- 5.7",
                "3 <- 6.1",
                "4 <- 6.7",
                "5 <- 2.6",
                "6 <- 6.7",
                "7 <- 1.9",
                "8 <- 6.1",
                "9 <- 0.2"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || -3 + 4 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857 (left: 1.857 13) || 13 - 1.857 = 11.143 (left: 1.857 11.143)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "13 - 9 = 4 (left: 4 7 4) || 7 - 4 = 3 (left: 3 4) || 5 * 10 = 50 (left: 50)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857 (left: 1.857 13)",
                "13 - 9 = 4 (left: 4 7 4) || 7 - 4 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "9 + 4 = 13 (left: 7 13  || 7 + 13 = 20 (left: 20)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 5 + 10 = 15 (left: 15",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 28)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.0,
                0.002,
                1.0,
                0.003,
                0.003,
                0.003,
                20.002,
                40.0
            ],
            "Resampling": [
                "0 <- 7.8",
                "1 <- 6.0",
                "2 <- 2.4",
                "3 <- 4.8",
                "4 <- 5.3",
                "5 <- 7.8",
                "6 <- 2.4",
                "7 <- 7.9",
                "8 <- 5.5",
                "9 <- 6.1"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 28) || 2 * 8 = 16 (left: 16)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || -3 + 4 = 1 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1.857 (left: 1.857 13) || 13 / 1.857 = 7 (left: 1.857 7)",
                "9 + 4 = 13 (left: 7 13 13) || 13 / 7 = 1 (left: 1 13) || 13 - 1 = 12 (left: 12)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 28) || 28 / 2 = 14 (left: 14)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || -3 + 4 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || 4 - 4 = 0 (left: 0)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 - 13 = -2 (left: -2 13)"
            ],
            "Evaluation": [
                20.001,
                60.0,
                1.002,
                0.003,
                0.002,
                60.0,
                0.002,
                0.003,
                0.003,
                21.0
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 8.5",
                "2 <- 6.1",
                "3 <- 7.9",
                "4 <- 7.9",
                "5 <- 6.7",
                "6 <- 8.0",
                "7 <- 8.1",
                "8 <- 2.6",
                "9 <- 8.5"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || -3 + 4 = 1 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "13 - 9 = 4 (left: 4 7 4) || 4 - 7 = -3 (left: -3 4 4) || -3 + 4 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 4 7 4) || 7 - 4 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 28) || 2 * 8 = 16 (left: 16) || 16 + 2 = 18",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "9 + 4 = 13 (left: 7 13 13) || 13 - 7 = 6 (left: 6 6)",
                "13 - 9 = 4 (left: 4 7 13) || 4 + 7 = 11 (left: 11 13) || 11 / 13 \u2248 0.846 (left: 0.846)"
            ]
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Step 0": {
            "steps": [
                "6 / 5 = 1.2 (left: 1.",
                "6 * 8 = 48 (left: 5 12 ",
                "5 * 6 = 30 (left: 8 30 12)",
                "8 - 6 = 2 (left: 2 5 12)",
                "12 - 6 = 6 (left: 5 6 8)",
                "6 * 8 = 48 (left: 5 48 12)",
                "8 - 6 = 2 (left: 2 6 12)",
                "12 - 8 = 4 (left: 5 6 4)",
                "5 * 6 = 30 (left: 8 12 30)",
                "5 + 6 = 11 (left: 8 11 12)"
            ],
            "Evaluation": [
                0.0,
                1.002,
                22.0,
                1.002,
                3.0,
                21.001,
                1.002,
                3.0,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.5",
                "2 <- 0.7",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 0.7",
                "6 <- 0.2",
                "7 <- 0.8",
                "8 <- 0.5",
                "9 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 8 + 30 = 38 (left: 12 38)",
                "6 * 8 = 48 (left: 5 48 12) || 12 - 5 = 7 (left: 7 12)",
                "12 - 8 = 4 (left: 5 6 4) || 5 + 6 = 11 (left: 4 11)",
                "6 * 8 = 48 (left: 5 48 12)",
                "12 - 8 = 4 (left: 5 6 4)",
                "12 - 8 = 4 (left: 5 6 4) || 5 / 6 = 0.8333 (left: 0.8333 4)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360)",
                "6 * 8 = 48 (left: 5 48 12) || 5 + 48 = 53 (left: 12 53)",
                "5 * 6 = 30 (left: 8 30 12) || 12 + 8 = 20 (left: 20)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.002,
                22.0,
                3.0,
                1.002,
                40.0,
                21.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- 1.6",
                "2 <- 1.6",
                "3 <- 0.2",
                "4 <- 0.6",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 1.6",
                "9 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 8 + 352 = 360 (left: 352)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 30 - 8 = 22 (left: 22 12)",
                "8 - 6 = 2 (left: 2 6 12) || 6 - 2 = 4 (left: 4 12)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 240 / 12 = 20 (left: 20)",
                "12 - 6 = 6 (left: 5 6 8)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 8 * 45 = 360 (left: 45)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 + 240 = 252 (left: 252)",
                "6 * 8 = 48 (left: 5 48 12) || 12 - 5 = 7 (left: 7 12) || 12 - 7 = 5 (left: 5)"
            ],
            "Evaluation": [
                20.002,
                40.0,
                60.0,
                0.003,
                0.003,
                0.002,
                3.0,
                0.003,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- 2.0",
                "4 <- 2.1",
                "5 <- 1.6",
                "6 <- 2.1",
                "7 <- 2.1",
                "8 <- 1.7",
                "9 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 8 = 4 (left: 5 6 4) || 5 + 6 = 11 (left: 4 11)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 8 * 45 = 360 (left: 45)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 360 / 8 = 45 (left: 45)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 8 + 352 = 360 (left: 352) || 35 - 2 = 33 (left: 33)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || ",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 2 = 120 (left: 120)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || - 240 divided by 4 = 60",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 360 - 8 = 352 (left: 352)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 4 = 60 (left: 60)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                3.0,
                3.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 2.2",
                "2 <- 3.9",
                "3 <- 2.2",
                "4 <- 1.7",
                "5 <- 2.2",
                "6 <- 2.2",
                "7 <- 2.1",
                "8 <- 3.7",
                "9 <- 1.6"
            ]
        },
        "Step 4": {
            "steps": [
                "6 * 8 = 48 (left: 5 48 12) || 5 - 48 = -43",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There is only one number given (240), so there are no possible next steps to calculate.",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 3 = 80 (left: 80)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 2 * 4 = 8 (left: 8)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 8 * 45 = 360",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps as the number 240 is already given and cannot be manipulated further.",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 40 / 2 = 20 (left: 20)",
                "12 - 8 = 4 (left: 5 6 4) || 5 * 6 = 30 (left: 4 30)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 240 / 12 = 20 (left: 20)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                20.0,
                0.002,
                2.001,
                3.0,
                40.0
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 4.9",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 2.2",
                "5 <- 1.6",
                "6 <- 4.9",
                "7 <- 3.9",
                "8 <- INIT",
                "9 <- 0.5"
            ]
        },
        "Step 5": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 4 = 60 (left: 60)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480",
                "5 + 6 = 11 (left: 8 11 12)",
                "5 * 6 = 30 (left: 8 30 12) || 8 + 30 = 38 (left: 12 38)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 2 = 120 (left: 120)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 8 = 30 (left: 30)",
                "12 - 8 = 4 (left: 4 8 12)",
                "6 * 8 = 48 (left: 5 48 12) || 48 - 5 = 43 (left: 43 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                0.003,
                60.0,
                2.001,
                0.0,
                41.0,
                0.001,
                1.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 4.5",
                "2 <- 1.7",
                "3 <- 5.4",
                "4 <- 3.9",
                "5 <- 0.2",
                "6 <- 4.8",
                "7 <- 2.2",
                "8 <- 4.9",
                "9 <- 5.7"
            ]
        },
        "Step 6": {
            "steps": [
                "6 * 8 = 48 (left: 5 48 12) || 5 + 48",
                "12 - 8 = 4 (left: 5 6 4) || 5 * 6 = 30 (left: 4 30) || 30 / 4 = 7.5 (left: 7.5 30)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 360 / 4 = 90 (left: 8 90)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 12 = 20 (left",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps for the input 240.",
                "5 * 6 = 30 (left: 8 30 12) || 30 * 12 = 360 (left: 8 360)",
                "5 * 6 = 30 (left: 8 30 12) || 30 / 8 = 3.75 (left: 3.75 12)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 2 = 120 (left: 120)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 240 = 2880 (left: 2880)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                22.0,
                0.003,
                20.002,
                1.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 6.5",
                "1 <- 6.5",
                "2 <- 3.9",
                "3 <- 6.5",
                "4 <- 6.9",
                "5 <- 3.9",
                "6 <- 5.7",
                "7 <- 4.9",
                "8 <- 4.9",
                "9 <- 5.4"
            ]
        },
        "Step 7": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 30 * 12 = 360 (left: 8 360) || 8 / 360 = 0.022222222222222223 (left: 0.022222222222222223)",
                "5 * 6 = 30 (left: 8 30 12) || 30 * 12 = 360 (left: 8 360) || 8 - 352 = -344 (left: -344)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 2 = 120 (left: 120)",
                "5 * 6 = 30 (left: 8 30 12) || 30 * 12 = 360 (left: 8 360) || 360 - 8 = 352 (left: 8)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 2 = 120 (left: 120)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 4 = 60 (left: 60)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 240 / 12 = 20 (left: 20)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 8 = 30 (left: 30)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480 (left: 480)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 + 2 = 242 (left: 2)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                0.003,
                60.0,
                0.003,
                60.0,
                40.0,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 6.9",
                "2 <- 7.6",
                "3 <- 1.7",
                "4 <- 7.6",
                "5 <- 6.5",
                "6 <- 7.6",
                "7 <- 7.7",
                "8 <- 7.7",
                "9 <- 5.4"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps for the number 240.",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps for the input 240 as it is already a single number.",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 - 40 = 200 (left: 40 200)",
                "5 * 6 = 30 (left: 8 12 30) || 12 * 30 = 360 (left: 8 360) || 360 / 8 = 45 (left: 45)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps with the input 240.",
                "5 * 6 = 30 (left: 8 30 12) || 30 * 12 = 360 (left: 8 360) || 8 * 45 = 360 (left: 45)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are many possible next steps for the number 240, depending on what operations are allowed. Here are a few examples:",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 12 = 20 (left"
            ],
            "Evaluation": [
                0.003,
                0.003,
                40.0,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                41.0
            ],
            "Resampling": [
                "0 <- 8.7",
                "1 <- 0.2",
                "2 <- 7.6",
                "3 <- 7.6",
                "4 <- 2.1",
                "5 <- 8.2",
                "6 <- 7.7",
                "7 <- 6.9",
                "8 <- 8.9",
                "9 <- 8.8"
            ]
        },
        "Step 9": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 4 + 0 = 4 (left: 4)",
                "5 * 6 = 30 (left: 8 30 12) || 30 / 8 = 3.75 (left: 3.75 12)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 8 = 30 (left: 30)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 2 = 120 (left: 120)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 - 40 = 200 (left: 40 200) || 40 + 200 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480 (left: 480)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 12 = 20 (left || 12 / 240 = 0.05 (left: 0.05 20)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps for the number 240 since it is not a combination of smaller numbers."
            ]
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 2 10 7)",
                "4 + 6 = 10 (left: 2 10 7)",
                "2 * 4 = 8 (left: 8 6 7)",
                "6 - 4 = 2 (left: 2 6 7)",
                "6 / 2 = 3 (left: 4 3 ",
                "2 + 4 = 6 (left: 6 6 7)",
                "6 * 7 = 42 (left: 2 4 ",
                "2 + 4 = 6 (left: 6 6 7)",
                "6 - 2 = 4 (left: 4 6 7)",
                "6 - 2 = 4 (left: 4 4 "
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                1.002,
                60.0,
                1.002,
                0.001,
                1.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.8",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.4",
                "5 <- 0.4",
                "6 <- 0.4",
                "7 <- 0.8",
                "8 <- 0.8",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 / 2 = 3 (left: 4 3  || 3 / 4 =",
                "6 - 2 = 4 (left: 4 6 7) || 4 * 6 = 24 (left: 7 24)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 / 2 = 3 (left: 4 3  || 5 * 9 = 45",
                "6 - 2 = 4 (left: 4 6 7) || 6 + 7 = 13 (left: 4 13)",
                "6 - 2 = 4 (left: 4 6 7) || 4 * 6 = 24 (left: 7 24)",
                "6 + 7 = 13 (left: 2 4 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.0,
                0.003,
                0.001,
                0.003,
                1.002,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 0.8",
                "4 <- 0.8",
                "5 <- 0.8",
                "6 <- 0.4",
                "7 <- 0.4",
                "8 <- 0.8",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 7 / 4 = 1.75 (left: 1.75 6)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33333 (left: 1.33333)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)",
                "6 / 2 = 3 (left: 4 3  || 5 - 9 = -4 (left: -4 3)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "7 - 2 = 5 (left: 2 4 5)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.001,
                0.001,
                0.003,
                1.002,
                0.003,
                0.002,
                1.002,
                2.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.8",
                "2 <- 0.8",
                "3 <- 2.5",
                "4 <- 0.4",
                "5 <- 0.4",
                "6 <- 0.3",
                "7 <- 0.8",
                "8 <- INIT",
                "9 <- 0.8"
            ]
        },
        "Step 3": {
            "steps": [
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 - 2 = 4 (left: 4 6 7) || 4 * 6 = 24 (left: 7 24)",
                "6 - 2 = 4 (left: 4 6 7) || 7 / 4 = 1.75 (left: 1.75 7)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7) || 1.5 + 7 = 8.5 (left: 8.5)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)",
                "6 - 4 = 2 (left: 2 6 7) || 2 + 6 = 8 (left: 7 8)",
                "6 - 2 = 4 (left: 4 6 7) || 6 - 4 = 2 (left: 2 7)",
                "2 * 4 = 8 (left: 8 6 7)",
                "6 - 2 = 4 (left: 4 6 7) || 4 * 6 = 24 (left: 7 24)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.0,
                0.002,
                0.002,
                0.003,
                0.003,
                0.001,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 0.4",
                "2 <- 2.9",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 3.8",
                "6 <- 0.8",
                "7 <- 0.8",
                "8 <- 0.8",
                "9 <- 0.4"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 4 * 6 = 24 (left: 7 24)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)",
                "7 - 2 = 5 (left: 2 4 5) || 5 - 4 = 1 (left: 2 1)",
                "4 + 6 = 10 (left: 2 10 7)",
                "7 - 6 = 1 (left: 2 4 1)",
                "2 * 4 = 8 (left: 8 6 7) || 8 * 6 = 48 (left: 48 7)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                1.002,
                1.002,
                0.003,
                0.002,
                3.0,
                2.0,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.8",
                "3 <- 0.4",
                "4 <- 4.7",
                "5 <- 0.8",
                "6 <- 0.8",
                "7 <- 0.8",
                "8 <- 2.8",
                "9 <- 0.8"
            ]
        },
        "Step 5": {
            "steps": [
                "4 * 6 = 24 (left: 2 24 7)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571) || 4 -",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 6 = ",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10) || 7 * 10 = 70 (left: 70)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                1.002,
                0.003,
                0.003,
                0.0,
                0.003,
                1.001,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 4.7",
                "1 <- 0.7",
                "2 <- 2.8",
                "3 <- INIT",
                "4 <- 0.8",
                "5 <- 0.8",
                "6 <- 0.4",
                "7 <- 0.8",
                "8 <- 5.9",
                "9 <- 0.4"
            ]
        },
        "Step 6": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571) || 4 / 0.8571428571428571 = 4.666666666666667 (left: 0.8571428571428571 4.666666666666667)",
                "2 + 4 = 6 (left: 6 6 7) || 6 * 6 = 36 (left: 7 36)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10) || 7 / 10 = 0.7 (left: 0.7)",
                "6 + 7 = 13 (left: 2 4 13)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)"
            ],
            "Evaluation": [
                2.001,
                0.002,
                0.0,
                1.002,
                0.002,
                0.001,
                0.002,
                2.0,
                40.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 6.8",
                "2 <- 0.4",
                "3 <- 6.3",
                "4 <- 6.8",
                "5 <- 6.8",
                "6 <- 5.9",
                "7 <- 6.8",
                "8 <- 0.4",
                "9 <- 6.8"
            ]
        },
        "Step 7": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 6 - 4 = 2 (left: 2 7)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || No possible next steps with the input 18.",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)",
                "6 + 7 = 13 (left: 2 4 13) || 4 * 2 = 8 (left: 8 13)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 8 = 10 (left: 10 8)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 8 = 10 (left: 10)",
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16 20)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.001,
                0.0,
                3.0,
                0.0
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 5.9",
                "2 <- 0.4",
                "3 <- 3.8",
                "4 <- 0.8",
                "5 <- 6.8",
                "6 <- 0.8",
                "7 <- 6.8",
                "8 <- 6.8",
                "9 <- 0.4"
            ]
        },
        "Step 8": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 8 = 10 (left: 8)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18)",
                "6 / 2 = 3 (left: 4 3  || 3 * 4 = 12 (left: 12)",
                "2 * 4 = 8 (left: 8 6 7) || 8 / 6 = ",
                "6 - 2 = 4 (left: 4 6 7) || 4 / 6 = ",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 + 8 = 26 (left: 8) ",
                "6 - 2 = 4 (left: 4 6 7) || 6 - 4 = 2 (left: 2 7)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps for the number 18.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There is only one possible next step: 18 / 2 = 9",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)"
            ],
            "Evaluation": [
                20.0,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 8.0",
                "2 <- 6.8",
                "3 <- 8.0",
                "4 <- 6.8",
                "5 <- 6.8",
                "6 <- 6.8",
                "7 <- 0.8",
                "8 <- 0.4",
                "9 <- 6.8"
            ]
        },
        "Step 9": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 + 8 = 26 (left: 8 26)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || No possible next steps with the input 18.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the given input of 18.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps as there are no more numbers left to operate on.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the number 18.",
                "6 - 2 = 4 (left: 4 6 7) || 6 + 7 = 13 (left: 4 13)",
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 + 8 = 26 (left: 8 26)"
            ]
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Step 0": {
            "steps": [
                "10 - 2 = 8 (left: 8 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                "10 / 5 = 2 (left: 2 10 ",
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                1.002,
                0.003,
                1.001,
                1.002,
                60.0,
                40.001,
                21.001,
                20.002
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.7",
                "4 <- 0.9",
                "5 <- 0.7",
                "6 <- 0.6",
                "7 <- 0.8",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || Input: 5 3 7 2",
                "5 * 2 = 10 (left: 10 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || Input: 1 1 1 1",
                "10 / 5 = 2 (left: 2 10  || 10 * 2 = 20 (left: 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 - 5 = 5 (left: 2 5 10)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                2.001,
                60.0,
                0.0,
                0.003,
                0.003,
                20.0,
                2.001,
                21.001
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 0.7",
                "2 <- 1.3",
                "3 <- 0.9",
                "4 <- 1.9",
                "5 <- INIT",
                "6 <- 0.6",
                "7 <- 0.6",
                "8 <- 1.7",
                "9 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "10 - 5 = 5 (left: 2 5 10) || 2 + 5 = 7 (left: 7 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "10 / 5 = 2 (left: 2 10  || 2 + 10 = 12 (left: 12) ",
                "10 / 5 = 2 (left: 2 10  || 10 * 2 = 20 (left: 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 0 + 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.003,
                1.0,
                0.0,
                20.002,
                0.002,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 1.3",
                "2 <- 0.8",
                "3 <- 2.0",
                "4 <- 1.9",
                "5 <- 0.6",
                "6 <- 0.6",
                "7 <- 2.0",
                "8 <- 2.1",
                "9 <- 0.9"
            ]
        },
        "Step 3": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "5 * 2 = 10 (left: 10 10 10) || Possible next steps:",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "10 - 5 = 5 (left: 2 5 10) || 5 + 2 = 7 (left: 7)",
                "10 / 5 = 2 (left: 2 10  || Possible next steps:",
                "10 / 5 = 2 (left: 2 10  || Input: 12 8",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100)"
            ],
            "Evaluation": [
                20.001,
                0.0,
                0.003,
                0.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.7",
                "2 <- 0.6",
                "3 <- 0.7",
                "4 <- INIT",
                "5 <- 0.8",
                "6 <- 3.0",
                "7 <- 3.0",
                "8 <- 2.0",
                "9 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 + 10 = 20 (left: 10 20)",
                "10 / 5 = 2 (left: 2 10  || 2 + 10 = 12 (left: 12)",
                "5 * 2 = 10 (left: 10 10 10) || Possible next steps:",
                "10 - 2 = 8 (left: 8 10 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || Input: 3 9 27",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 100 - 10 = 90 (left: 10 90)",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                3.0,
                20.0,
                0.003,
                0.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- INIT",
                "3 <- 4.5",
                "4 <- 1.7",
                "5 <- 2.0",
                "6 <- 1.9",
                "7 <- 4.5",
                "8 <- 3.0",
                "9 <- 2.0"
            ]
        },
        "Step 5": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 5 = 7 (left: 7 10 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 5 + 3 = 8 (left: 8)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 5 / 3 = 1.66666666667 (left: 1.67)",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 2 = 8 (left: 2 8 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 / 0 = Undefined (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 10 + 100 = 110 (left: 100)",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 - 5 = -3 (left: -3)"
            ],
            "Evaluation": [
                0.001,
                0.0,
                0.003,
                0.001,
                0.003,
                0.002,
                1.002,
                1.0,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- 2.5",
                "2 <- 1.3",
                "3 <- 2.1",
                "4 <- 0.7",
                "5 <- 2.5",
                "6 <- 0.9",
                "7 <- 4.5",
                "8 <- 2.1",
                "9 <- 3.0"
            ]
        },
        "Step 6": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 / 10 = 1 (left: 1)",
                "5 * 2 = 10 (left: 10 10 10) || Possible next steps:",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "5 * 2 = 10 (left: 10 10 10) || 10 + 10 = 20 (left: 10 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 + 10 = 20 (left: 10 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 / 0 = undefined",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 100 / 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.002,
                0.003,
                0.0,
                0.003,
                0.003,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 4.5",
                "2 <- 0.0",
                "3 <- 0.9",
                "4 <- INIT",
                "5 <- 2.5",
                "6 <- 2.5",
                "7 <- 0.6",
                "8 <- 2.0",
                "9 <- 0.9"
            ]
        },
        "Step 7": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 / 0 = undefined (left: 0 10)",
                "10 - 2 = 8 (left: 8 10 10) || 8 + 10 = 18 (left: 10 18)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100)",
                "2 + 5 = 7 (left: 7 10 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100)",
                "10 / 5 = 2 (left: 2 10  || 2 - 10 = -8 (left: -8)",
                "10 - 5 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || Input: 3 9",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100)"
            ],
            "Evaluation": [
                20.0,
                0.0,
                1.002,
                0.001,
                0.003,
                20.0,
                20.002,
                0.001,
                0.003,
                20.0
            ],
            "Resampling": [
                "0 <- 7.5",
                "1 <- 0.7",
                "2 <- 7.5",
                "3 <- 4.5",
                "4 <- 3.0",
                "5 <- 4.5",
                "6 <- 0.6",
                "7 <- 4.5",
                "8 <- 0.9",
                "9 <- 7.6"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 * 0 = 0 (left: 0)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 / 0 = undefined (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 / 0 = undefined (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 10 + 100 = 110 (left: 110)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 - 0 = 10 (left: 10)",
                "10 / 5 = 2 (left: 2 10  || 10 / 2 = 5 (left: 5)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 10 * 0 = 0 (left: 0)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 100 / 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                0.002,
                0.002,
                0.003,
                0.0,
                0.003,
                0.0,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 8.8",
                "1 <- 0.9",
                "2 <- 7.6",
                "3 <- 1.9",
                "4 <- 8.8",
                "5 <- 7.5",
                "6 <- 8.1",
                "7 <- 7.6",
                "8 <- 0.7",
                "9 <- 7.5"
            ]
        },
        "Step 9": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 10 + 100 = 110 (left: 110)",
                "10 - 5 = 5 (left: 2 5 10) || 2 * 5 = 10 (left: 10 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 0 + 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 * 10 = 100 (left: 10 100) || 100 / 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 1 + 1 = 2 (left: 1 2 1)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10) || 0 + 10 = 10 (left: 10)"
            ]
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Step 0": {
            "steps": [
                "7 - 6 = 1 (left: 1 6 12)",
                "6 * 6 = 36 (left: 7 36)",
                "7 - 6 = 1 (left: 1 6 12)",
                "6 * 7 = 42 (left: 6 12 42)",
                "12 - 6 = 6 (left:",
                "7 + 1 = 8 (left: 8 12)",
                "6 / 6 = 1 (left: 1 7 12)",
                "7 - 5 = 2 (left:",
                "6 + 6 = 12 (left: 12 7 12)",
                "12 - 6 = 6 (left: 6 7 6)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                0.001,
                0.002,
                2.001,
                2.0,
                21.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.3",
                "5 <- 0.9",
                "6 <- INIT",
                "7 <- 0.8",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "7 + 6 = 13 (left: 6 13)",
                "6 * 6 = 36 (left: 7 36)",
                "7 - 6 = 1 (left: 1 6 12)",
                "6 + 6 = 12 (left: 7 12)",
                "6 * 7 = 42 (left: 6 12 42) || 42 / 6 = 7 (left: 12 7",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6)",
                "7 + 1 = 8 (left: 8 12)",
                "6 + 6 = 12 (left: 12 7 12) || 12 / 7 = 1.71 (left: 1.71 12)",
                "12 - 6 = 6 (left: 6 7 6)",
                "12 + 6 = 18 (left: 7 18)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                40.0,
                0.003,
                1.001,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 1.8",
                "7 <- 1.5",
                "8 <- 1.8",
                "9 <- 0.8"
            ]
        },
        "Step 2": {
            "steps": [
                "6 + 6 = 12 (left: 12 7 12) || Input: 1.71",
                "12 - 6 = 6 (left: 6 7 6) || 6 + 7 = 13 (left: 6 13)",
                "7 + 6 = 13 (left: 6 13)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 * 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5) ",
                "12 - 6 = 6 (left: 6 7 6) || 7 / 6 = 1.1667 (left: 1.1667 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 6 / 7 = 0.86 (left: 0.86)",
                "6 + 6 = 12 (left: 12 7 12) || 7 / 12 = 0.58333333333 (left: 0.58333333333 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.001,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                1.001
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 1.5",
                "7 <- 2.9",
                "8 <- 0.8",
                "9 <- 1.5"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 6 = 6 (left: 6 7 6) || 6 + 7 = 13 (left: 6 13)",
                "12 - 6 = 6 (left: 6 7 6) || Input: 42 1 1.16667 -1",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 + 6 = 12 (left: 12 7 12) || 7 / 12 = 0.58333333333 (left: 0.58333333333 12) || 0.58333333333 + 12 = 12.5833333333 (left: 12.5833333333)",
                "6 + 6 = 12 (left: 12 7 12) || 12 + 7 = 19 (left: 7 12 19)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.001,
                0.002,
                0.002,
                0.003,
                0.002,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 1.5",
                "2 <- 1.8",
                "3 <- 1.5",
                "4 <- 0.8",
                "5 <- 1.5",
                "6 <- 1.8",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 0.8"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 6 = 12 (left: 12 7 12) || 12 + 7 = 19 (left: 7 12 19) || 19 - 7 = 12 (left: 7 12 12)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 + 6 = 12 (left: 12 7 12) || 12 - 7 = 5 (left: 5 12)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 + 6 = 12 (left: 12 7 12) || 7 - 12 = -5 (left: -5 12)"
            ],
            "Evaluation": [
                1.002,
                0.002,
                60.0,
                0.003,
                1.001,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 4.2",
                "2 <- 1.5",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 0.9",
                "6 <- 1.5",
                "7 <- 4.2",
                "8 <- 4.2",
                "9 <- 4.2"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 6 = 12 (left: 12 7 12) || 12 + 7 = 19 (left: 7 12 19) || 19 - 7 = 12 (left: 7 12 12) || 7 + 12 = 19 (left: 12 19)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.002,
                0.003,
                0.002,
                0.002,
                0.001,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 1.5",
                "2 <- 4.2",
                "3 <- 1.5",
                "4 <- 1.8",
                "5 <- 4.2",
                "6 <- 1.5",
                "7 <- 4.2",
                "8 <- 3.8",
                "9 <- 3.8"
            ]
        },
        "Step 6": {
            "steps": [
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 6 * 7 = 42 (left: 42)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 * 1 = 6 (left: 6)",
                "6 + 6 = 12 (left: 12 7 12) || 12 + 7 = 19 (left: 7 12 19) || 7 * 12 = 84 (left: 84 19)",
                "6 + 6 = 12 (left: 12 7 12) || 12 + 7 = 19 (left: 7 12 19) || 7 * 12 = 84 (left: 84)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                0.003,
                0.002,
                0.001,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 4.2",
                "2 <- 0.8",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 4.2",
                "6 <- 1.5",
                "7 <- 1.5",
                "8 <- 4.2",
                "9 <- 4.2"
            ]
        },
        "Step 7": {
            "steps": [
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 12 7 12) || 7 / 12 = 0.58 (left: 7 0.58)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                1.002,
                0.003,
                0.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 1.5",
                "2 <- 4.2",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 4.2",
                "6 <- 1.8",
                "7 <- 4.2",
                "8 <- 4.2",
                "9 <- 4.2"
            ]
        },
        "Step 8": {
            "steps": [
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 * 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 6 + 7 = 13 (left: 6 13)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.9",
                "2 <- 4.2",
                "3 <- 1.5",
                "4 <- 4.2",
                "5 <- 4.2",
                "6 <- 4.2",
                "7 <- 4.2",
                "8 <- 3.8",
                "9 <- 4.2"
            ]
        },
        "Step 9": {
            "steps": [
                "6 / 6 = 1 (left: 1 7 12)",
                "12 - 6 = 6 (left: 6 7 6) || 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 12 7 12) || 12 + 7 = 19 (left: 7 12 19) || 7 + 12 = 19 (left: 19 19)",
                "12 - 6 = 6 (left: 6 7 6) || 7 - 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)"
            ]
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Step 0": {
            "steps": [
                "9 / 3 = 3 (left: 6 9 11)",
                "6 + 9 = 15 (left: 9 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 / 9 = 1 (left: 6 1 ",
                "9 / 3 = 3 (left: 6 3 11)",
                "9 / 9 = 1 (left: 6 1 11)",
                "6 + 9 = 15 (left: 9 11 15)",
                "6 + 9 = 15 (left: 9 11 15)"
            ],
            "Evaluation": [
                2.001,
                2.001,
                0.003,
                3.0,
                1.002,
                0.002,
                2.001,
                2.001,
                21.001,
                21.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.8",
                "2 <- 0.9",
                "3 <- INIT",
                "4 <- 0.8",
                "5 <- INIT",
                "6 <- 0.3",
                "7 <- 0.8",
                "8 <- 0.6",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "6 + 9 = 15 (left: 9 11 15) || 11 / 9 = 1.22 (left: 1.22 15)",
                "6 + 9 = 15 (left: 9 11 15) || 11 - 9 = 2 (left: 2 15)",
                "9 - 6 = 3 (left: 3 9 11)",
                "6 + 9 = 15 (left: 9 11 15) || 11 - 9 = 2 (left: 2 15)",
                "11 - 6 = 5 (left: 5 9 9)",
                "11 - 9 = 2 (left: 6 9 2) || 6 + 9 = 15 (left: 2 15)",
                "6 + 9 = 15 (left: 9 11 15) || 15 / 9 = ",
                "9 / 3 = 3 (left: 6 3 11) || 6 / 3 = 2 (left: 2 11)",
                "6 + 9 = 15 (left: 9 11 15) || 9 + 11 = 20 (left: 15 20)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                0.003,
                1.002,
                0.003,
                22.0,
                0.003,
                0.003,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 1.5",
                "2 <- 1.5",
                "3 <- 0.9",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.8",
                "7 <- 0.9",
                "8 <- 0.8",
                "9 <- 0.3"
            ]
        },
        "Step 2": {
            "steps": [
                "6 + 9 = 15 (left: 9 11 15) || 15 + 9 = 24 (left: 11 24)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 / 5 = 1.8 (left: 1.8 9)",
                "6 + 9 = 15 (left: 9 11 15) || 11 - 9 = 2 (left: 2 15)",
                "6 + 9 = 15 (left: 9 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "6 + 9 = 15 (left: 9 11 15) || 9 + 11 = 20 (left: 15 20)",
                "6 + 9 = 15 (left: 9 11 15) || 11 / 9 = 1.2222 (left: 1.2222 15)",
                "6 + 9 = 15 (left: 9 11 15) || 9 + 11 = 20 (left: 20 15)",
                "11 - 9 = 2 (left: 6 9 2) || 9 - 6 = 3 (left: 3 2)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.0,
                0.003,
                1.002,
                2.001,
                0.003,
                3.0,
                0.003,
                1.001
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.5",
                "2 <- 0.9",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 2.1",
                "6 <- INIT",
                "7 <- 2.7",
                "8 <- INIT",
                "9 <- 0.9"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || Possible next steps:",
                "11 - 6 = 5 (left: 5 9 9) || 9 * 5 = 45 (left: 9 9 45)",
                "6 + 9 = 15 (left: 9 11 15) || 11 - 9 = 2 (left: 2 15)",
                "11 - 9 = 2 (left: 6 2 9)",
                "11 - 6 = 5 (left: 5 9 9) || 5 - 9 = -4 (left: -4 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || Possible next steps:",
                "6 * 9 = 54 (left: 9 9 11)",
                "6 + 9 = 15 (left: 9 11 15) || 11 / 9 = 1.2222 (left: 1.2222 15) || 1.2222 * 15 = 18.333 (left: 15)",
                "6 + 9 = 15 (left: 9 9 11)",
                "6 + 9 = 15 (left: 9 11 15) || 9 + 11 = 20 (left: 20 15)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                2.001,
                0.001,
                0.003,
                2.001,
                0.003,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 0.9",
                "5 <- 3.3",
                "6 <- 0.8",
                "7 <- 3.3",
                "8 <- 1.5",
                "9 <- 0.1"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 - 6 = 3 (left: 3 9 ",
                "9 / 3 = 3 (left: 6 3 11) || 6 / 3 = 2 (left: 2 11) || 2 + 11 = 13 (left: 13)",
                "6 + 9 = 15 (left: 9 11 15) || 15 - 11 = 4 (left: 4 11)",
                "11 - 9 = 2 (left: 6 2 9) || 2 * 9 = ",
                "6 + 9 = 15 (left: 9 11 15) || 15 - 11",
                "11 - 9 = 2 (left: 6 2 9) || 6 + 2 = 8 (left: 8 9)",
                "11 - 6 = 5 (left: 5 9 9) || 5 + 9 = 14 (left: 9 14)",
                "6 + 9 = 15 (left: 9 9 11) || 9 + 9 = 18 (left: 11 18)"
            ],
            "Evaluation": [
                0.001,
                3.0,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                1.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.5",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 4.7",
                "6 <- 4.7",
                "7 <- 2.1",
                "8 <- 2.1",
                "9 <- INIT"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 9 13)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 9 13)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 9 13)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "11 - 9 = 2 (left: 6 2 9) || 6 + 2 = 8 (left: 8 9) || 8 + 9 = 17 (left: 17) ",
                "11 - 9 = 2 (left: 6 2 9) || 6 + 2 = 8 (left: 8 9) || 8 + 9 = 17 (left: 17)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || Possible next steps:",
                "11 - 6 = 5 (left: 5 9 9)"
            ],
            "Evaluation": [
                0.003,
                1.0,
                1.002,
                1.001,
                0.001,
                0.003,
                0.001,
                60.0,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 5.7",
                "1 <- 2.1",
                "2 <- 5.9",
                "3 <- 5.9",
                "4 <- INIT",
                "5 <- 5.7",
                "6 <- 5.7",
                "7 <- 5.9",
                "8 <- 5.7",
                "9 <- 2.1"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps with the input of 36.",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "11 - 6 = 5 (left: 5 9 9) || 9 / 5 = 1.8 (left: 1.8 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 + 9 = 18 (left: 18)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 + 2 = 38 (left: 38)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || No possible next steps as there is only one number provided.",
                "11 - 6 = 5 (left: 5 9 9) || 5 / 9 = 0.5555555555555556 (left: 0.5555555555555556 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.0,
                1.002,
                0.003,
                3.0,
                0.003,
                0.002,
                3.0
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 5.9",
                "2 <- 5.7",
                "3 <- 5.7",
                "4 <- 5.9",
                "5 <- 1.5",
                "6 <- 2.1",
                "7 <- 5.7",
                "8 <- 5.9",
                "9 <- 2.1"
            ]
        },
        "Step 7": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2) || 6 / 2 = 3 (left: 3 3)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 + 8 = 44",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 + 8 = 44 (left: 8)",
                "11 - 6 = 5 (left: 5 9 9) || Input: 3 6 6 10",
                "11 - 6 = 5 (left: 5 9 9) || 9 / 5 = 1.8 (left: 1.8 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers.",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5)"
            ],
            "Evaluation": [
                20.0,
                0.002,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003,
                40.001,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 7.7",
                "1 <- 7.0",
                "2 <- 5.9",
                "3 <- 7.9",
                "4 <- 2.1",
                "5 <- 7.7",
                "6 <- 7.9",
                "7 <- 2.1",
                "8 <- 7.7",
                "9 <- 4.7"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 / 9 = 0.44444444 (left: 9) ",
                "11 - 9 = 2 (left: 6 9 2) || 6 / 2 = 3 (left: 3 3) || 4 + 6 = 10 (left: 10)",
                "11 - 6 = 5 (left: 5 9 9) || 5 + 9 = 14 (left: 9 14)",
                "11 - 6 = 5 (left: 5 9 9) || 5 + 9 = 14 (left: 9 14)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 9 - 4 = 5 (left: 5 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 9 + 4 = 13 (left: 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 9 / 4 = 2.25 (left: 2.25)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || Input: 3 7 10",
                "11 - 9 = 2 (left: 6 2 9) || 6 + 2 = 8 (left: 8 9) || 8 + 9 = 17 (left: 17)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                1.002,
                0.003,
                0.003,
                0.001,
                60.0,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 7.9",
                "2 <- 8.6",
                "3 <- 7.0",
                "4 <- 8.6",
                "5 <- 7.7",
                "6 <- 7.9",
                "7 <- 2.1",
                "8 <- 8.6",
                "9 <- 2.1"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || Input: 3 6 9",
                "11 - 6 = 5 (left: 5 9 9) || 9 / 5 = 1.8 (left: 1.8 9 9)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 + 9 = 13 (left: 13)",
                "11 - 9 = 2 (left: 6 9 2) || 6 / 2 = 3 (left: 3 3) || 3 + 3 = 6 (left: 6) ",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 6 + 3 = 9 (left: 9 10)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || Possible next steps:",
                "11 - 6 = 5 (left: 5 9 9) || 5 * 9 = 45 (left: 9 45)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 2 * 2 = 4 (left: 4",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36)",
                "11 - 6 = 5 (left: 5 9 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 36)"
            ]
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Step 0": {
            "steps": [
                "11 + 5 = 16 (left: 8 12 16)",
                "5 + 8 = 13 (left: 11 12 13)",
                "12 - 11 = 1 (left: ",
                "11 + 12 = 23 (left: 5 8 23)",
                "12 - 11 = 1 (left: ",
                "5 + 8 = 13 (left: 11 12 13)",
                "5 * 8 = 40 (left: 11 12 40)",
                "5 + 8 = 13 (left: 11 12 13)",
                "11 + 5 = 16 (left: 8 12 16)",
                "8 - 5 = 3 (left: 3 11 12)"
            ],
            "Evaluation": [
                2.001,
                41.0,
                0.0,
                2.0,
                0.0,
                60.0,
                1.001,
                41.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 0.1",
                "2 <- 0.5",
                "3 <- 0.1",
                "4 <- 0.5",
                "5 <- 0.1",
                "6 <- 0.5",
                "7 <- 0.1",
                "8 <- 0.7",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "5 + 8 = 13 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "5 + 8 = 13 (left: 11 12 13) || Input: 3",
                "5 + 8 = 13 (left: 11 12 13) || ",
                "5 + 8 = 13 (left: 11 12 13) || Input:",
                "5 + 8 = 13 (left: 11 12 13) || 11 - 13 = -2 (left: -2 12)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "12 - 8 = 4 (left: 4 11 12)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003,
                20.001,
                0.002,
                2.001
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 1.0",
                "2 <- 0.1",
                "3 <- 0.1",
                "4 <- 0.7",
                "5 <- INIT",
                "6 <- 0.7",
                "7 <- 1.0",
                "8 <- 1.2",
                "9 <- 1.9"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "8 / 5 = 1.6 (left: 1.6 11 12)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 * 132 = 1716 (left: 1716)",
                "12 - 8 = 4 (left: 4 11 12) || 12 - 4 = 8 (left: 8 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 0.1",
                "3 <- 0.7",
                "4 <- 0.1",
                "5 <- 2.5",
                "6 <- 2.3",
                "7 <- 2.3",
                "8 <- 1.0",
                "9 <- 0.5"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 5 = 1.6 (left: 1.6 11 12)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 - 132 = -119 (left: -119)",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.181818181",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13) || Input: 3",
                "8 / 5 = 1.6 (left: 1.6 11 12) || 11 - 1.6 = 9.4 (left: 9.4 12)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 12 / 13 = 0.9231 (left: 11 0.9231)"
            ],
            "Evaluation": [
                2.001,
                0.001,
                0.003,
                60.0,
                0.003,
                1.002,
                0.002,
                0.001,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 3.3",
                "2 <- 1.7",
                "3 <- 1.2",
                "4 <- 0.7",
                "5 <- 0.5",
                "6 <- 1.0",
                "7 <- INIT",
                "8 <- 0.7",
                "9 <- 1.0"
            ]
        },
        "Step 4": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 12 + 13 = 25 (left: 11)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "5 + 8 = 13 (left: 11 12 13) || 11 - 13 = -2 (left: -2 12) || -2 / 12 = -0.16666666666666666 (left: -0.16666666666666666)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 * 10 = 130 (left: 130 132)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "5 + 8 = 13 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "5 * 8 = 40 (left: 11 12 40)",
                "5 + 8 = 13 (left: 11 12 13) || 13 + 11 = 24 (left: 12 24)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.001,
                0.003,
                20.002,
                0.003,
                0.002,
                1.002,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 0.6",
                "3 <- 1.2",
                "4 <- 2.3",
                "5 <- 1.7",
                "6 <- 4.4",
                "7 <- 4.9",
                "8 <- 0.5",
                "9 <- 2.3"
            ]
        },
        "Step 5": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "5 * 8 = 40 (left: 11 12 40) || 12 * 11 = 132 (left: 132 40)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 * 132 = 1716 (left: 1716)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || Input: 6 10",
                "5 + 8 = 13 (left: 11 12 13) || 11 - 13 = -2 (left: -2 12) || -2 / 12 = -0.16666666667 (left: -0.16666666667)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                1.002,
                0.003,
                0.003,
                0.0,
                0.003,
                20.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 0.1",
                "2 <- 3.3",
                "3 <- 5.9",
                "4 <- 5.9",
                "5 <- 3.3",
                "6 <- 1.2",
                "7 <- 5.8",
                "8 <- 5.8",
                "9 <- 1.0"
            ]
        },
        "Step 6": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 11 - 12 = -1 (left: -1 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (5 + 8 - 11) * 12 = 24",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 132 - 13 = 119 (left: 119)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)"
            ]
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Step 0": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11)",
                "6 - 5 = 1 (left: 1 8 10)",
                "10 - 8 = 2 (left: 5 2 10)",
                "5 + 6 = 11 (left: 8 10 11)",
                "10 - 6 = 4 (left: 4 8 10)",
                "5 + 6 = 11 (left: 8 10 11)",
                "5 + 6 = 11 (left: 8 10 11)",
                "8 - 5 = 3 (left: 3 6 10)",
                "10 - 5 = 5 (left: ",
                "8 - 5 = 3 (left: 3 6 10)"
            ],
            "Evaluation": [
                1.002,
                1.001,
                2.001,
                3.0,
                0.003,
                2.001,
                0.003,
                1.002,
                0.0,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 - 6 = 2 (left: 5 2 ",
                "5 + 6 = 11 (left: 8 10 11)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "5 * 6 = 30 (left: 8 10 30)",
                "5 * 6 = 30 (left: 8 10 30)",
                "6 * 8 = 48 (left: 5 10 48)",
                "6 / 2 = 3 (left: 3 8 10)",
                "6 + 8 = 14 (left: 5 10 14)",
                "5 * 6 = 30 (left: 8 10 30)"
            ],
            "Evaluation": [
                40.001,
                1.002,
                3.0,
                3.0,
                2.001,
                2.001,
                2.0,
                60.0,
                20.002,
                2.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.7",
                "4 <- 1.7",
                "5 <- 1.8",
                "6 <- 1.0",
                "7 <- 1.7",
                "8 <- 1.7",
                "9 <- 1.7"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11)",
                "8 - 6 = 2 (left: 5 2  || 5 + 2 = 7 (left: 7)",
                "8 - 6 = 2 (left: 5 2  || 5 / 2 = 2.5 (left: 2.5)",
                "6 / 2 = 3 (left: 3 8 10) || 8 / 3 = 2.67 (left: 2.67 10)",
                "6 / 2 = 3 (left: 3 8 10) || 8 / 3 = 2.66667 (left: 2.66667 8 10)",
                "6 + 8 = 14 (left: 5 10 14) || 5 * 10 = 50 (left: 14 50)",
                "8 - 6 = 2 (left: 5 2  || 5 + 2 = 7 (left: 7)",
                "6 / 2 = 3 (left: 3 8 10) || 8 / 3 = 2.67 (approx) (left: 2.67 10)",
                "6 / 2 = 3 (left: 3 8 10) || 8 / 3 = 2.67 (left: 2.67 8 10)",
                "6 / 2 = 3 (left: 3 8 10) || 10 / 3 = 3.33 (left: 3.33 8)"
            ],
            "Evaluation": [
                1.001,
                0.002,
                0.002,
                0.002,
                2.0,
                0.001,
                0.0,
                0.002,
                2.001,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 0.3",
                "3 <- 1.8",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- 1.0",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- 1.8"
            ]
        },
        "Step 3": {
            "steps": [
                "10 - 6 = 4 (left: 4 8 10)",
                "8 - 6 = 2 (left: 5 2  || 5 - 2 = 3 (left: 3)",
                "5 + 6 = 11 (left: 8 10 11) || 8 + 10 = 18 (left: 18 11)",
                "6 + 8 = 14 (left: 5 10 14) || 10 + 5 = 15 (left: 15 14)",
                "6 / 2 = 3 (left: 3 8 10) || 3 -",
                "6 / 2 = 3 (left: 3 8 10) || 3 * 8 = 24 (left: 10 24)",
                "8 - 6 = 2 (left: 5 2  || 5 / 2 = 2.5 (left: 2.5)",
                "6 / 2 = 3 (left: 3 8 10) || 3 + 8 = 11 (left: 10 11)",
                "5 * 6 = 30 (left: 8 10 30)",
                "6 + 8 = 14 (left: 5 10 14) || 14 / 5 = 2.8 (left: 2.8 10)"
            ],
            "Evaluation": [
                1.002,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                2.001,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.3",
                "2 <- 1.7",
                "3 <- 1.8",
                "4 <- 1.0",
                "5 <- 1.0",
                "6 <- 1.8",
                "7 <- 1.0",
                "8 <- 1.7",
                "9 <- 0.3"
            ]
        },
        "Step 4": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11) || 10 / 11 = ",
                "5 + 6 = 11 (left: 8 10 11) || 8 * 10 = 80 (left: 11 80)",
                "6 / 2 = 3 (left: 3 8 10) || 10 / 3 = 3.33 (left: 3.33 8)",
                "6 + 8 = 14 (left: 5 10 14) || 14 - 10 = 4 (left: 5 4)",
                "8 - 6 = 2 (left: 5 2  || 5 - 2 = 3 (left: 3)",
                "8 - 6 = 2 (left: 5 2  || Input: 12 6",
                "6 + 8 = 14 (left: 5 10 14) || 10 / 5 = 2 (left: 2 14)",
                "8 - 6 = 2 (left: 5 2  || 5 / 2 = 2.5 (left: 2.5)",
                "6 / 2 = 3 (left: 3 8 10) || 3 + 8 = 11 (left: 10 11)",
                "5 + 6 = 11 (left: 8 10 11) || Input: 2 3"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                1.001,
                0.002,
                0.003,
                0.003,
                0.0,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- 1.0",
                "2 <- 1.5",
                "3 <- 1.7",
                "4 <- INIT",
                "5 <- 1.5",
                "6 <- 1.7",
                "7 <- 1.0",
                "8 <- 1.0",
                "9 <- 0.3"
            ]
        },
        "Step 5": {
            "steps": [
                "6 / 2 = 3 (left: 3 8 10) || 8 / 3 = 2.66666666667 (left: 2.66666666667 10)",
                "8 - 6 = 2 (left: 5 2  || 5 / 2 = 2.5 (left: 2.5)",
                "5 * 6 = 30 (left: 8 10 30) || 30 - 8 = 22 (left: 8 22)",
                "6 / 2 = 3 (left: 3 8 10) || 8 - 3 = 5 (left: 5 10)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3)",
                "6 / 2 = 3 (left: 3 8 10) || 3 + 8 = 11 (left: 10 11)",
                "8 - 6 = 2 (left: 5 2  || 5 * 2 = 10 (left: 10)",
                "8 - 6 = 2 (left: 5 2  || 5 * 2 = 10 (left: 10)",
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                0.003,
                1.001,
                2.001,
                60.0,
                0.002,
                0.002,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 5.5",
                "2 <- 1.7",
                "3 <- 1.7",
                "4 <- 5.5",
                "5 <- 5.9",
                "6 <- 5.5",
                "7 <- 1.7",
                "8 <- 5.5",
                "9 <- 5.5"
            ]
        },
        "Step 6": {
            "steps": [
                "6 + 8 = 14 (left: 5 10 14) || 14 - 10 = 4 (left: 5 4) || 4 - 5 = -1 (left: -1)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "6 / 2 = 3 (left: 3 8 10) || 8 - 3 = 5 (left: 5 10)",
                "6 / 2 = 3 (left: 3 8 10) || 3 + 8 = 11 (left: 10 11)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1) || 8 * 1 = 8 (left: 8)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "6 / 2 = 3 (left: 3 8 10) || 3 * 8 = 24 (left: 10 24)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                20.002,
                0.001,
                60.0,
                0.003,
                0.0,
                0.002,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 1.0",
                "2 <- 5.9",
                "3 <- 6.8",
                "4 <- 1.0",
                "5 <- 5.9",
                "6 <- 5.5",
                "7 <- 5.5",
                "8 <- 1.8",
                "9 <- 5.9"
            ]
        },
        "Step 7": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1) || 8 + 1 = 9 (left: 9)",
                "8 - 6 = 2 (left: 5 2  || 5 / 2 = 2.5 (left: 2.5)",
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1) || 8 * 1 = 8 (left: 8)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24) || Answer: (5 * 6) / (8 / 10) = 24",
                "8 - 6 = 2 (left: 5 2  || 5 * 2 = 10 (left: 10)",
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1) || 8 - 1 = 7 (left: 7)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 + 3 = 11 (left: 11)",
                "6 + 8 = 14 (left: 5 10 14) || 10 / 5 = 2 (left: 2 14)",
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1) || 8 + 1 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                20.001,
                0.003,
                0.0,
                0.001,
                0.002,
                0.003,
                0.001,
                40.0
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 6.8",
                "2 <- 6.4",
                "3 <- 5.5",
                "4 <- 1.0",
                "5 <- 5.5",
                "6 <- 6.4",
                "7 <- 1.8",
                "8 <- 5.4",
                "9 <- 5.9"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24) || Answer: (5 * 6) - (8 / 10) = 24",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24) || Answer: (5 * 6) / (8 / 10) = 24",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24) || Answer: 5 * 6 / 10 * 8 = 24",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "8 - 6 = 2 (left: 5 2  || 5 - 2 = 3 (left: 3)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24)",
                "5 * 6 = 30 (left: 8 10 30) || 30 / 10 = 3 (left: 8 3) || 8 * 3 = 24 (left: 24) || Answer: (5 * 6) / 10 * 8 = 24",
                "6 + 8 = 14 (left: 5 10 14) || 14 /",
                "6 / 5 = 1.2 (left: 1.2 8 10) || 1.2 * 8 = 9.6 (left: 9.6 10)",
                "5 + 6 = 11 (left: 8 10 11) || 11 - 10 = 1 (left: 8 1) || 8 - 1 = 7 (left: 7)"
            ]
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Step 0": {
            "steps": [
                "12 + 13 = 25 (left: 6 11 25)",
                "11 - 6 = 5 (left: 5 12 13)",
                "11 + 12 = 23 (left: 6 13 23)",
                "11 + 12 = 23 (left: 6 13 23)",
                "11 - 6 = 5 (left: 5 12 13)",
                "13 - 6 = 7 (left: ",
                "6 * 11 = 66 (left: 12 13 66)",
                "11 - 12 = -1 (left: 6 -1 13)",
                "13 - 6 = 7 (left: 7 11 ",
                "6 * 11 = 66 (left: 12 13 66)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                3.0,
                1.002,
                3.0,
                0.0,
                0.003,
                3.0,
                0.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 0.7",
                "6 <- INIT",
                "7 <- 0.7",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 11 = 66 (left: 12 13 66)",
                "12 + 6 = 18 (left: 11 13 18)",
                "13 - 11 = 2 (left: 6 12 2)",
                "13 - 6 = 7 (left: 7 11 ",
                "6 + 11 = 17 (left: 12 13 17)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 - 13 = -7 (left: -1 -7)",
                "13 - 11 = 2 (left: 6 12 ",
                "11 - 12 = -1 (left: 6 -1 13) || 6 + (-1) = 5 (left: -1 5 13)",
                "6 + 11 = 17 (left: 12 13 17)",
                "12 + 6 = 18 (left: 11 13 18)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                1.002,
                1.0,
                0.003,
                0.003,
                1.002,
                3.0,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- 1.6",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 0.9",
                "7 <- INIT",
                "8 <- 1.4",
                "9 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "11 * 12 = 132 (left: 6 13 132)",
                "11 + 12 = 23 (left: 6 13 23) || 13 + 23 = 36 (left: 6 36)",
                "13 - 11 = 2 (left: 6 12  || 6 + 12 = 18 (left: 18)",
                "11 - 6 = 5 (left: 5 12 13)",
                "6 + 11 = 17 (left: 12 13 17)",
                "13 - 6 = 7 (left: 7 11  || 11 - 7 = 4 (left: 4 11)",
                "6 * 11 = 66 (left: 12 13 66) || 66 / 12 = 5.5 (left: 5.5 13)",
                "13 - 6 = 7 (left: 7 11 ",
                "6 + 11 = 17 (left: 12 13 17) || 12 + 13 = 25 (left: 17 25)",
                "11 - 6 = 5 (left: 5 12 13) || 13 / 5 = "
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.0,
                3.0,
                2.001,
                0.003,
                0.003,
                1.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- 1.7",
                "4 <- 1.1",
                "5 <- 2.7",
                "6 <- INIT",
                "7 <- 0.7",
                "8 <- INIT",
                "9 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "11 + 12 = 23 (left: 6 13 23)",
                "11 - 6 = 5 (left: 5 12 13) || 13 - 12 = 1 (left: 5 1)",
                "6 + 11 = 17 (left: 12 13 17)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 + (-1) = 5 (left: -1 5 13) || -1 + 5 = 4 (left: 4 13)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18)",
                "13 - 6 = 7 (left: 7 11  || 11 - 7 = 4 (left: 7 4)",
                "11 + 12 = 23 (left: 6 13 23)",
                "11 - 12 = -1 (left: 6 -1 13) || -1 - 6 =",
                "13 - 6 = 7 (left: 7 11 ",
                "11 - 6 = 5 (left: 5 12 13) || 5 * 12 = 60 (left: 60 13)"
            ],
            "Evaluation": [
                3.0,
                1.0,
                2.001,
                0.003,
                3.0,
                0.002,
                2.001,
                0.003,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 0.7",
                "3 <- 0.2",
                "4 <- 2.4",
                "5 <- 1.7",
                "6 <- 1.6",
                "7 <- 2.4",
                "8 <- 3.6",
                "9 <- 1.8"
            ]
        },
        "Step 4": {
            "steps": [
                "11 * 12 = 132 (left: 6 13 132)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 + (-1) = 5 (left: -1 5 13) || -1 / 5 = -0.2 (left: -0.2 13)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 - (-1) = 7 (left: 7 13)",
                "11 + 12 = 23 (left: 6 13 23) || 6 * 13 = 78 (left: ",
                "6 + 11 = 17 (left: 12 13 17) || 12 + 13 = 25 (left: 17 25)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 + (-1) = 5 (left: -1 5 13) || -1 + 5 = 4 (left: 4 13)",
                "13 - 11 = 2 (left: 6 12  || Input: 18 72 6 2",
                "6 + 11 = 17 (left: 12 13 17) || 17 - 12 = 5 (left: 5 17)",
                "11 + 12 = 23 (left: 6 13 23) || 13 - 6 = 7 (left: 7 13 23)",
                "6 + 11 = 17 (left: 12 13 17) || Possible next steps:"
            ],
            "Evaluation": [
                0.003,
                1.0,
                0.0,
                0.0,
                1.001,
                1.002,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 2.4",
                "2 <- 0.3",
                "3 <- 0.2",
                "4 <- 3.4",
                "5 <- 4.1",
                "6 <- 3.4",
                "7 <- INIT",
                "8 <- 1.6",
                "9 <- 0.4"
            ]
        },
        "Step 5": {
            "steps": [
                "11 + 12 = 23 (left: 6 13 23) || 6 * 13 = 78 (left: 78 23)",
                "6 + 11 = 17 (left: 12 13 17) || 12 + 13 = 25 (left: 17 25)",
                "11 + 12 = 23 (left: 6 13 23) || 13 - 6 = 7 (left: 7 13 23)",
                "11 + 12 = 23 (left: 6 13 23) || 13 / 6 = 2.16666666667 (left: 2.16666666667 23)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 + (-1) = 5 (left: -1 5 13) || -1 / 5 = -0.2 (left: -0.2 13) || 13 - (-0.2) = 13.2 (left: 13.2)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 18 / 1.18181818182 = 15.23636363636 (left: 1.18181818182 15.23636363636)",
                "11 * 12 = 132 (left: 6 13 132)",
                "13 - 11 = 2 (left: 6 12  || 12 - 6 = 6 (left: 6 12)",
                "11 - 6 = 5 (left: 5 12 13) || Input: 3 6 9 12"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                1.001,
                40.0,
                2.0,
                2.001,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 5.4",
                "3 <- 0.9",
                "4 <- 5.4",
                "5 <- 2.3",
                "6 <- 5.6",
                "7 <- 0.0",
                "8 <- 5.9",
                "9 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 21.27272727276)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 + 18 =",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || No possible next steps with the input 18.",
                "6 * 11 = 66 (left: 12 13 66) || 12 + 13 = 25 (left: 25 66)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || There are no possible next steps with the input 18.",
                "11 - 6 = 5 (left: 5 12 13) || 12 + 13 = 25 (left: 5 25)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138)",
                "12 + 13 = 25 (left: 6 11 25) || 11 / 6 = 1.83 (left: 1.83 11 25)",
                "11 * 12 = 132 (left: 6 13 132) || 6 + 13 = 19 (left: 19 132)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || There are no possible next steps with the input of 18."
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                20.002,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.6",
                "1 <- 6.6",
                "2 <- 5.4",
                "3 <- 6.6",
                "4 <- 5.4",
                "5 <- 6.6",
                "6 <- 5.4",
                "7 <- INIT",
                "8 <- 5.4",
                "9 <- 2.3"
            ]
        },
        "Step 7": {
            "steps": [
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 13 * 138 = 1784 (left: 1784)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || Input: 3 5 7",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || None, as there is only one number left.",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 138 / 13 = 10.6153846154 (left: 10.6153846154)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || 18 / 2 = 9 (left: 9)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 13 + 138 = 151 (left: 151)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || There are no possible next steps with the input 18.",
                "11 + 12 = 23 (left: 6 13 23)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || 18 - 8 = 10 (left: 8) ",
                "11 - 6 = 5 (left: 5 12 13) || 12 / 5 = 2.4 (left: 2.4 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                1.002,
                1.0,
                3.0,
                0.002
            ],
            "Resampling": [
                "0 <- 6.6",
                "1 <- 6.6",
                "2 <- 6.6",
                "3 <- 3.2",
                "4 <- 2.3",
                "5 <- 5.4",
                "6 <- 0.3",
                "7 <- 5.4",
                "8 <- 5.4",
                "9 <- 2.7"
            ]
        },
        "Step 8": {
            "steps": [
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 138 - 13 = 125 (left: 125)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 13 * 138 = 1794 (left: 1794)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 138 / 13 = 10 (left: 10)",
                "6 + 11 = 17 (left: 12 13 17) || 17 * 12 = 204 (left:",
                "11 - 6 = 5 (left: 5 12 13) || 13 - 5 = 8 (left: 8 12)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || 18 / 2 = 9",
                "11 + 12 = 23 (left: 6 13 23) || 6 * 13 = 78 (left: 78 23)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || There are no possible next steps with the input 18.",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || 18 / 2 = 9 (left: 9)",
                "13 - 6 = 7 (left: 7 11  || 7 * 11 = 77 (left: 77)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                40.0,
                1.002,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 0.3",
                "2 <- 8.3",
                "3 <- 8.3",
                "4 <- 5.4",
                "5 <- 8.3",
                "6 <- 5.5",
                "7 <- 6.6",
                "8 <- 1.7",
                "9 <- 6.6"
            ]
        },
        "Step 9": {
            "steps": [
                "11 + 12 = 23 (left: 6 13 23) || 13 - 6 = 7 (left: 7 13 23)",
                "11 + 12 = 23 (left: 6 13 23) || 13 - 6 = 7 (left: 7 13 23)",
                "6 + 11 = 17 (left: 12 13 17) || 17 * 12 = 204 (left: || 17 * 12 = 204 (left: 204 = 204)",
                "6 + 11 = 17 (left: 12 13 17) || 17 * 12 = 204 (left: || 17 - 12 = 5 (left: 5)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 1.18181818182 * 18 = 21.27272727276 (left: 18) || 18 - 2 = 16 (left: 2)",
                "6 + 11 = 17 (left: 12 13 17) || 17 * 12 = 204 (left: || 17 + 12 = 29 (left: 29)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18) || 18 / 1.18181818182 = 15.23636363636 (left: 1.18181818182 15.23636363636) || 1.18181818182 * 15.23636363636 = 18 (left: 18)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 13 * 138 = 1794 (left: 1794)",
                "11 - 12 = -1 (left: 6 -1 13) || 6 + (-1) = 5 (left: -1 5 13) || 13 - -1 = 14 (left: 5 14)",
                "11 * 12 = 132 (left: 6 13 132) || 132 + 6 = 138 (left: 13 138) || 13 + 138 = 151 (left: 151)"
            ]
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Step 0": {
            "steps": [
                "8 - 2 = 6 (left: 2 8 8)",
                "8 - 2 = 6 (left: 2 6 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 4 4 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "8 * 2 = 16 (left: 2 8 16)",
                "2 * 2 = 4 (left: 4 8 8)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                41.0,
                21.0,
                41.0,
                60.0,
                21.0,
                40.0,
                1.002,
                41.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.3",
                "2 <- 0.2",
                "3 <- 0.5",
                "4 <- 0.7",
                "5 <- 0.7",
                "6 <- 0.2",
                "7 <- 0.5",
                "8 <- INIT",
                "9 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "2 + 2 = 4 (left: 4 8 8) || Possible",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)"
            ],
            "Evaluation": [
                60.0,
                41.0,
                0.003,
                40.001,
                20.002,
                0.001,
                3.0,
                0.002,
                41.0,
                20.002
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 0.4",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 0.6",
                "5 <- 1.1",
                "6 <- 1.0",
                "7 <- 1.3",
                "8 <- 0.6",
                "9 <- 0.5"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 5 * 5 = 25 (left: 25)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8)",
                "8 / 2 = 4 (left: 4 4 8) || 4 + 4 = 8 (left: 8 8)",
                "2 + 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)"
            ],
            "Evaluation": [
                0.003,
                2.0,
                0.003,
                41.0,
                40.001,
                0.003,
                20.001,
                60.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.6",
                "1 <- 1.4",
                "2 <- 1.3",
                "3 <- 2.6",
                "4 <- INIT",
                "5 <- 1.0",
                "6 <- 0.7",
                "7 <- 2.7",
                "8 <- 0.2",
                "9 <- 2.7"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12) || 8 * 8 = 64 (left: 64 12)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 + 32 = 40 (left: 8 40)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 5 * 5 = 25 (left: 25) || 25 / 8 = 3.125 (left: 8)",
                "8 - 2 = 6 (left: 2 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8) || 24 + 8 = 32 (left: 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8) || 8 - 24 = -16 (left: -16)"
            ],
            "Evaluation": [
                1.002,
                0.002,
                0.002,
                0.003,
                0.003,
                2.001,
                0.003,
                20.0,
                21.001,
                40.001
            ],
            "Resampling": [
                "0 <- 2.6",
                "1 <- 0.9",
                "2 <- 0.5",
                "3 <- 1.3",
                "4 <- 0.9",
                "5 <- 2.4",
                "6 <- 3.9",
                "7 <- 0.7",
                "8 <- 0.9",
                "9 <- 1.0"
            ]
        },
        "Step 4": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 5 * 5 = 25 (left: 25) || 25 - 8 = 17 (left: 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 + 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 + 8 = 24 (left: 8 24)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 / 8 = 2 (left: 2 8)",
                "2 + 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)"
            ],
            "Evaluation": [
                1.002,
                40.001,
                0.002,
                0.003,
                21.0,
                0.002,
                0.002,
                0.002,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 2.6",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- 2.7",
                "5 <- 0.9",
                "6 <- 4.1",
                "7 <- 2.7",
                "8 <- 3.9",
                "9 <- 0.3"
            ]
        },
        "Step 5": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 5 * 5 = 25 (left: 25) || 25 - 8 = 17 (left: 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8) || 24 + 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 + 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8) || 24 / 8 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 * 8 = 128 (left: 8 128)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)"
            ],
            "Evaluation": [
                41.0,
                40.0,
                1.001,
                20.001,
                0.003,
                0.003,
                60.0,
                20.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 5.7",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 3.9",
                "4 <- 5.1",
                "5 <- 2.4",
                "6 <- 5.9",
                "7 <- 5.0",
                "8 <- 5.0",
                "9 <- 1.0"
            ]
        },
        "Step 6": {
            "steps": [
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 * 8 = 128 (left: 8 128) || 8 + 128 = 136 (left: 8 136)",
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8",
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 / 8 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 8 24)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                3.0,
                0.003,
                2.001,
                0.002,
                41.0,
                2.001,
                40.0,
                1.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 5.6",
                "2 <- 2.6",
                "3 <- 6.6",
                "4 <- 3.9",
                "5 <- 4.1",
                "6 <- 0.2",
                "7 <- 0.3",
                "8 <- 4.9",
                "9 <- 1.1"
            ]
        },
        "Step 7": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8) || 24 / 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 5 * 5 = 25 (left: 25) || 25 + 2 = 27 (left: 2)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 * 8 = 128 (left: 8 128)",
                "2 + 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 + 32 = 40 (left: 40)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                20.001,
                0.003,
                1.002,
                0.0,
                0.003,
                20.002,
                0.002,
                41.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 6.8",
                "2 <- 1.0",
                "3 <- 4.9",
                "4 <- 4.1",
                "5 <- 5.9",
                "6 <- 5.0",
                "7 <- 5.9",
                "8 <- 7.9",
                "9 <- 7.2"
            ]
        },
        "Step 8": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 + 32 = 40 (left: 8 40)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24 8)",
                "2 + 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 * 8 = 128 (left: 8 128) || 8 + 120 = 128 (left: 120)"
            ],
            "Evaluation": [
                41.0,
                0.001,
                20.002,
                0.003,
                0.003,
                41.0,
                0.002,
                0.003,
                60.0,
                22.0
            ],
            "Resampling": [
                "0 <- 8.8",
                "1 <- 8.8",
                "2 <- 8.5",
                "3 <- 8.0",
                "4 <- 8.0",
                "5 <- 8.8",
                "6 <- 8.0",
                "7 <- 8.9",
                "8 <- 4.1",
                "9 <- 8.5"
            ]
        },
        "Step 9": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || Input: 3 6 9",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 / 4 = 2 (left: 2 8)",
                "2 + 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)"
            ]
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Step 0": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13)",
                "2 + 7 = 9 (left: 9 12 13)",
                "13 - 2 = 11 (left: 2 7 ",
                "7 - 2 = 5 (left: 2 5 12)",
                "13 - 12 = 1 (left: 2 7 ",
                "2 + 7 = 9 (left: 9 12 13)",
                "7 - 2 = 5 (left: 2 5 12)",
                "7 * 12 = 84 (left: 2 84 13)",
                "12 - 2 = 10 (left: 2 10 13)",
                "2 + 12 = 14 (left: 14 13 19)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.7",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 + 2 = 14 (left: 7 13 14)",
                "2 * 7 = 14 (left: 12 13 14)",
                "7 + 12 = 19 (left: 2 13 19)",
                "12 + 1 = 13 (left: 2 13 13)",
                "7 * 12 = 84 (left: 2 84 13) || 13 / 2 = 6.5 (",
                "2 * 7 = 14 (left: 14 12 13)",
                "2 * 7 = 14 (left: 14 12 13)",
                "2 + 7 = 9 (left: 9 12 13)",
                "13 - 2 = 11 (left: 12 11 13)",
                "7 + 12 = 19 (left: 2 19 13)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                2.001,
                0.002,
                0.003,
                3.0,
                2.001,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 1.6",
                "1 <- 0.9",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 0.7",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- INIT",
                "9 <- 1.6"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 7 = 14 (left: 14 12 13) || 14 + 12 = 26 (left: 26 13)",
                "2 + 12 = 14 (left: 14 13 19) || 13 / 19 = 0.684210526316 (left: 14)",
                "12 - 2 = 10 (left: ",
                "7 + 12 = 19 (left: 2 13 19)",
                "7 - 2 = 5 (left: 5 12 13)",
                "7 * 12 = 84 (left: 2 84 13) || 84 - 2 = 82 (left: 82 13)",
                "2 + 7 = 9 (left: 9 12 13)",
                "2 + 12 = 14 (left: 14 13 19) || 14 / 13 = 1.08 (left: 1.08 19)",
                "2 * 7 = 14 (left: 12 13 14)",
                "2 * 7 = 14 (left: 14 12 13) || 12 + 13 = 25 (left: 14 25)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.0,
                0.003,
                3.0,
                0.001,
                2.001,
                0.0,
                2.001,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- 1.8",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 2.6",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "7 + 12 = 19 (left: 2 19 13)",
                "2 * 7 = 14 (left: 14 12 13) || 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13)",
                "13 - 2 = 11 (left: 12 11 13) || 12 + 11 = 23 (left: 13 23)",
                "13 - 2 = 11 (left: 7 11 12)",
                "2 * 7 = 14 (left: 14 12 13) || 12 - 13 = -1 (left: 14 -1)",
                "2 + 7 = 9 (left: 9 12 13) || 12 - 9 = 3 (left: 3 13)",
                "7 + 12 = 19 (left: 2 13 19)",
                "2 + 7 = 9 (left: 9 12 13)",
                "7 - 2 = 5 (left: 5 7 12)",
                "2 * 7 = 14 (left: 14 12 13)"
            ],
            "Evaluation": [
                1.002,
                1.001,
                0.003,
                3.0,
                0.003,
                0.003,
                1.002,
                21.001,
                21.001,
                2.001
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.5",
                "2 <- 3.8",
                "3 <- INIT",
                "4 <- 3.8",
                "5 <- 3.8",
                "6 <- 2.4",
                "7 <- 3.8",
                "8 <- 2.9",
                "9 <- 3.8"
            ]
        },
        "Step 4": {
            "steps": [
                "7 - 2 = 5 (left: 5 12 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "2 * 7 = 14 (left: 14 12 13) || 14 * 12 = 168 (left: 168 13)",
                "7 - 2 = 5 (left: 5 7 12) || 7 / 5 = 1.4 (left: 1.4 12)",
                "7 + 12 = 19 (left: 2 13 19)",
                "7 - 2 = 5 (left: 5 7 12) || 7 + 5 = 12 (left: 12 12)",
                "7 - 2 = 5 (left: 5 7 12) || 12 / 5 = 2.4 (left: 2.4 12)",
                "7 - 2 = 5 (left: 5 12 13) || 5 + 12 = 17 (left: 13 17)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12)",
                "2 * 7 = 14 (left: 14 12 13) || 12 + 13 = 25 (left: 14 25) || 14 * 25 = 350 (left: 350)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12)"
            ],
            "Evaluation": [
                1.002,
                0.001,
                0.002,
                1.002,
                20.002,
                1.002,
                0.003,
                60.0,
                0.001,
                40.0
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 4.9",
                "2 <- 4.9",
                "3 <- 2.6",
                "4 <- 3.8",
                "5 <- 4.9",
                "6 <- 2.4",
                "7 <- 4.7",
                "8 <- 1.1",
                "9 <- 3.7"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "2 + 7 = 9 (left: 9 12 13) || 12 / 9 = 1.33 (left: 1.33 13)",
                "7 - 2 = 5 (left: 5 7 12) || 7 / 5 = 1.4 (",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 2 = 5 (left: 5 12 13) || 13 - 5 = 8 (left: 8 13)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "2 * 7 = 14 (left: 12 13 14) || 14 / 12",
                "2 + 7 = 9 (left: 9 12 13) || 9 * 12 = 108 (left: 108 13)"
            ],
            "Evaluation": [
                40.0,
                0.001,
                0.003,
                1.002,
                0.003,
                0.003,
                0.0,
                60.0,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 5.0",
                "2 <- 5.7",
                "3 <- 4.9",
                "4 <- 3.0",
                "5 <- 4.9",
                "6 <- 3.0",
                "7 <- 5.7",
                "8 <- 3.6",
                "9 <- 4.9"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13) || 13 - 12 = 1 (left: 9 1)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "7 + 12 = 19 (left: 2 19 13) || Input: 3 5 7 11",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 + 12 = 19 (left: 2 19 13) || 13 + 2 = 15 (left: 15 13)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 + 12 = 19 (left: 2 13 19) || 13 + 2 = 15 (left: 15 19)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                60.0,
                40.0
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 5.0",
                "2 <- 4.7",
                "3 <- 6.1",
                "4 <- 6.1",
                "5 <- 5.7",
                "6 <- 4.7",
                "7 <- 4.7",
                "8 <- 4.7",
                "9 <- 6.9"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (5 - 7) = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: 2 * (7 - (12 - 13)) = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.0,
                60.0,
                40.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.7",
                "1 <- 7.6",
                "2 <- 4.7",
                "3 <- 7.6",
                "4 <- 7.6",
                "5 <- 7.7",
                "6 <- 6.7",
                "7 <- 4.9",
                "8 <- 5.7",
                "9 <- 7.8"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "2 + 7 = 9 (left: 9 12 13) || 13 - 12 = 1 (left: 9 1) || 9 + 1 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                60.0,
                0.002,
                0.003,
                0.002,
                0.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.7",
                "1 <- 8.8",
                "2 <- 4.4",
                "3 <- 8.8",
                "4 <- 8.9",
                "5 <- 4.9",
                "6 <- 6.1",
                "7 <- 7.6",
                "8 <- 8.8",
                "9 <- 5.0"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13) || 13 - 12 = 1 (left: 9 1) || 9 / 1 = 9 (left: 9)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 + 5 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (12 / 2) = 24",
                "7 - 2 = 5 (left: 5 7 12) || 7 - 5 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (7 - 2) * (7 - 5) * 12 = 24"
            ]
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 6 4 12)",
                "8 + 6 = 14 (left: 14 8 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "6 * 2 = 12 (left: 12 8 12)",
                "12 / 6 = 2 (left: 2 8 12)",
                "6 + 8 = 14 (left: 2 14 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "12 - 6 = 6 (left: 2 6 8)",
                "8 - 6 = 2 (left: 2 8 12)"
            ],
            "Evaluation": [
                41.0,
                1.002,
                1.002,
                22.0,
                1.002,
                1.002,
                3.0,
                2.001,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- 0.3",
                "5 <- 0.0",
                "6 <- 0.0",
                "7 <- 0.3",
                "8 <- INIT",
                "9 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "2 + 6 = 8 (left: 8 8 12) || 12 - 8 = 4 (left: 4",
                "6 * 8 = 48 (left: 2 48 12)",
                "2 + 6 = 8 (left: 8 8 12) || 12 - 8 = ",
                "12 / 2 = 6 (left: 6 4 12) || 6 / 4 = 1.5 (left: 1.5 12)",
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 12 24)",
                "2 + 6 = 8 (left: 8 8 12) || 8 * 8 = 64 (left: 64 12)",
                "8 / 2 = 4 (left: 6 4 ",
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 24 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                21.0,
                0.003,
                0.001,
                0.003,
                1.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 1.8",
                "2 <- 1.3",
                "3 <- 0.0",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 1.3",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 6 = 8 (left: 8 8 12) || Input: 1.5",
                "8 / 2 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "6 * 8 = 48 (left: 2 48 12) || 48 - 2 = 46 (left: 46 12)",
                "12 / 2 = 6 (left: 6 4 12) || 6 + 4 = 10 (left: 10 12)",
                "2 * 6 = 12 (left: 8 12 12)",
                "6 * 8 = 48 (left: 2 48 12) || 48 / 12 = 4 (left: 4 12)",
                "6 * 8 = 48 (left: 2 48 12) || 48 / 2 = 24 (left: 24 12)",
                "8 / 2 = 4 (left: 6 4  || 10 + 5 = 15 (left: 15)",
                "8 / 2 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)",
                "2 + 6 = 8 (left: 8 8 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.001,
                0.0,
                2.001,
                0.003,
                0.003,
                0.003,
                0.001,
                1.002
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 0.3",
                "2 <- 1.8",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 0.0",
                "6 <- 0.3",
                "7 <- 0.0",
                "8 <- 0.3",
                "9 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "8 / 2 = 4 (left: 6 4  || 4 - 6 = -2 (left: -2)",
                "8 / 2 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "12 / 2 = 6 (left: 6 4 12) || 12 - 4 = 8 (left: 6 8)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 24 12)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "6 * 8 = 48 (left: 2 48 12) || 48 - 2 = 46 (left: 46 12)"
            ],
            "Evaluation": [
                60.0,
                1.002,
                0.0,
                0.001,
                60.0,
                0.003,
                2.0,
                40.001,
                21.0,
                0.001
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- 3.4",
                "4 <- 3.4",
                "5 <- 3.4",
                "6 <- 3.8",
                "7 <- 1.3",
                "8 <- 3.4",
                "9 <- 0.3"
            ]
        },
        "Step 4": {
            "steps": [
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 24 12) || 24 - 12 = 12 (left: 12)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12) || 1 * 12 = 12 (left: 12)",
                "6 * 8 = 48 (left: 2 48 12) || 48 / 12 = 4 (left: 2 4)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                0.001,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 4.8",
                "2 <- 3.7",
                "3 <- 1.3",
                "4 <- 0.8",
                "5 <- 4.3",
                "6 <- 4.2",
                "7 <- 0.0",
                "8 <- 1.8",
                "9 <- 4.5"
            ]
        },
        "Step 5": {
            "steps": [
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n11 + 21 = 32 (left: 32)\nAnswer: (3 * 7) - (5 + 6) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27\nAnswer: (3 * 3) * (6 - 9) = 24",
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 24 12) || 24 * 12 = 288 (left: 288)",
                "6 * 8 = 48 (left: 2 48 12) || 48 - 2 = 46 (left: 46 12)",
                "12 - 6 = 6 (left: 2 6 8) || 2 + 6 = 8 (left: 8 8)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || All possible solutions have been found for the given input.",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 3 8\n\n3 * 3 = 9 (left: 8 9)\n8 - 9 = -1 (left: -1)\n-1 * 24 = 24 (left: 24)\n\nAnswer: (3 * 3) + (8 - 9) * 24 = 24",
                "12 / 2 = 6 (left: 6 4 12) || 6 / 4 = 1.5 (left: 1.5 12)",
                "8 / 2 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + (8 - 6)) + 6 = 24"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                0.001,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 4.5",
                "2 <- 4.4",
                "3 <- 3.4",
                "4 <- 5.5",
                "5 <- 3.7",
                "6 <- 4.2",
                "7 <- 1.3",
                "8 <- 5.5",
                "9 <- 4.2"
            ]
        },
        "Step 6": {
            "steps": [
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24)\nAnswer: (3 + 3) * 4 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 5 7 9\nSteps:\n7 - 5 = 2 (left: 3 2 9)\n2 * 9 = 18 (left: 3 18)\n18 / 3 = 6 (left: 6 18)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 - 5) * 9) / 3 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: (8 / 2) * 6 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 3) + (7 + 8)) - 9 = 24",
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 24 12) || 24 / 12 = 2 (left: 2)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 7) * (3 * 4) = 24",
                "6 * 8 = 48 (left: 2 48 12) || 48 - 2 = 46 (left: 12 46)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nAnswer: (3 * 3) * (5 - 9) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + (8 - 6)) * 9 = 24"
            ],
            "Evaluation": [
                60.0,
                0.002,
                0.002,
                1.002,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 4.1",
                "2 <- 3.4",
                "3 <- 4.4",
                "4 <- 6.0",
                "5 <- 6.8",
                "6 <- 6.4",
                "7 <- 5.7",
                "8 <- 5.6",
                "9 <- 6.9"
            ]
        },
        "Step 7": {
            "steps": [
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || All the given inputs can be used to obtain the desired result of 24 using the basic arithmetic operations.",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Overall answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || All possible solutions have been provided.",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: (8 / 2) * 6 = 24 || Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: ((3 * 4) - 8) * 3 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 - 6 = 42 (left: 42)\nAnswer: ((3 + 3) * 8) - 6 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\nAnswer: (3 + 7) + (4 - 3) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 5 7 8\nSteps:\n3 + 7 = 10 (left: 5 8 10)\n5 * 8 = 40 (left: 10 40)\n10 - 40 = -30 (left: -30)\n-30 + 24 = 24 (left: 24)\nAnswer: ((3 + 7) * 8) + 24 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || All possible solutions have been provided.",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 9) - 3) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                1.002,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.9",
                "1 <- 4.2",
                "2 <- 6.6",
                "3 <- 5.8",
                "4 <- 6.6",
                "5 <- 7.7",
                "6 <- 3.7",
                "7 <- 7.5",
                "8 <- 0.0",
                "9 <- 5.6"
            ]
        },
        "Step 8": {
            "steps": [
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Here are possible steps to obtain 24 from the input 2 6 8 12:\n8 / 2 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nTherefore, the answer is 6 * (8 / 2) = 24.",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (6 - 3) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || The answer is: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 5\nSteps:\n3 * 5 = 15 (left: 3 4 15)\n4 + 15 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 5) + 4) - 3 + 8 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || The final equation is: 6 * (8 / 2) = 24.",
                "12 / 2 = 6 (left: 6 4 12) || 6 * 4 = 24 (left: 24 12) || 24 - 12 = 12 (left: 12)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || All possible solutions have been exhausted.",
                "12 / 2 = 6 (left: 6 4 12) || 12 - 6 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 5 6\nSteps:\n3 + 5 = 8 (left: 3 6 8)\n6 / 3 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) / 3) * (6 + 8) = 24"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                1.002,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 8.2",
                "1 <- 8.8",
                "2 <- 7.4",
                "3 <- 6.8",
                "4 <- 4.1",
                "5 <- 8.2",
                "6 <- 8.2",
                "7 <- 7.9",
                "8 <- 8.4",
                "9 <- 8.5"
            ]
        },
        "Step 9": {
            "steps": [
                "12 / 2 = 6 (left: 6 4 12) || 12 - 6 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 4) + (7 + 7)) *",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) * 3 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n9 + 5 = 14 (left: 14 9)\n14 - 9 = 5 (left: 5)\n5 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) + 5 - 9) * 24 = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "12 / 2 = 6 (left: 6 4 12) || 12 - 6 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "12 / 2 = 6 (left: 6 4 12) || 12 - 6 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || The final answer is 6 * (8 / 2) = 24.",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: (8 / 2) * 6 = 24 || Input: 3 3 5 8\n\n3 * 8 = 24 (left: 3 5)\n3 + 5 = 8 (left: 8)\n8 * 8 = 24 (left: 24)\n\nAnswer: (3 * 8) * (3 + 5) = 24",
                "8 / 2 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (8 / 2) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24"
            ]
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Step 0": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 9 = 12 (left: 4 12 13)",
                "4 / 3 = 1.33 (left: 1.33 9 13)",
                "9 - 4 = 5 (left: 3 5 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 * 4 = 12 (left: 9 12 13)",
                "3 + 4 = 7 (left: 7 9 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                0.003,
                2.001,
                1.002,
                20.002,
                1.002,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 0.6",
                "2 <- 0.6",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 0.6",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 0.6",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 3 * 5 = 15 (left: 15 13)",
                "9 - 4 = 5 (left: 3 5 13) || 13 / 3 = ",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8)",
                "4 - 3 = 1 (left: 1 9 13)",
                "9 - 3 = 6 (left: 4 6 13)",
                "9 - 4 = 5 (left: 3 5 13) || 5 * 13 = 65 (left: 3 65)",
                "3 * 4 = 12 (left: 12 9 13)",
                "4 * 3 = 12 (left: 12 9 13)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 3 = 10 (left: 5 10)",
                "3 + 4 = 7 (left: 7 9 13) || 7 / 9 = 0.777777"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                1.002,
                22.0,
                0.0,
                1.002,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- 1.4",
                "7 <- 1.2",
                "8 <- 1.2",
                "9 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "13 - 9 = 4 (left: 3 4 4)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 4 + 10 = 14 (left: 14)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 3 = 6 (left: 4 6 13) || 4 + 6 = 10 (left: 10 13)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                20.001,
                0.002,
                0.003,
                0.001,
                1.002,
                0.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- INIT",
                "6 <- 1.4",
                "7 <- INIT",
                "8 <- 0.9",
                "9 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "3 * 4 = 12 (left: 9 12 13) || 12 - 9 = 3 (left: 3 13)",
                "9 - 3 = 6 (left: 4 6 13) || 13 - 6 = 7 (left: 4 7)",
                "9 - 3 = 6 (left: 4 6 13) || 4 + 6 = 10 (left: 10 13)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "13 - 9 = 4 (left: 3 4 4)",
                "9 - 3 = 6 (left: 4 6 13) || 13 - 6 = 7 (left: 4 7)",
                "4 - 3 = 1 (left: 1 9 13)",
                "3 + 4 = 7 (left: 7 9 13) || 9 - 7 = 2 (left: 2 13)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4)"
            ],
            "Evaluation": [
                0.003,
                1.0,
                0.003,
                60.0,
                0.002,
                1.002,
                1.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 3.9",
                "2 <- 3.3",
                "3 <- INIT",
                "4 <- 3.9",
                "5 <- 3.3",
                "6 <- 1.6",
                "7 <- 1.2",
                "8 <- 3.3",
                "9 <- 3.9"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 8 24)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 + 3 = 12 (left: 4 12 13)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "3 * 4 = 12 (left: 12 9 13) || 12 - 9 = 3 (left: 3 13)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)"
            ],
            "Evaluation": [
                1.002,
                0.002,
                0.003,
                0.003,
                0.003,
                60.0,
                0.001,
                60.0,
                60.0,
                20.002
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 0.7",
                "2 <- 3.9",
                "3 <- 1.4",
                "4 <- 4.8",
                "5 <- 1.2",
                "6 <- 4.5",
                "7 <- 2.2",
                "8 <- 4.5",
                "9 <- 3.3"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "3 + 4 = 7 (left: 7 9 13) || 9 + 13 = 22 (left: 7 22)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "9 - 3 = 6 (left: 4 6 13) || 6 - 4 = 2 (left: 2 13)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.001,
                60.0,
                60.0,
                60.0,
                0.003,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.6",
                "1 <- 3.3",
                "2 <- 5.4",
                "3 <- 4.8",
                "4 <- 5.8",
                "5 <- 3.9",
                "6 <- 3.3",
                "7 <- 5.9",
                "8 <- 5.4",
                "9 <- 4.5"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - 4) * 8 = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 + 4 = 5",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - 4) * 13 = 24"
            ],
            "Evaluation": [
                20.001,
                0.002,
                0.002,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.5",
                "1 <- 6.7",
                "2 <- 6.6",
                "3 <- 6.7",
                "4 <- 6.9",
                "5 <- 5.5",
                "6 <- 5.8",
                "7 <- 6.6",
                "8 <- 6.8",
                "9 <- 4.5"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                21.001,
                60.0,
                40.0
            ],
            "Resampling": [
                "0 <- 6.7",
                "1 <- 6.9",
                "2 <- 4.9",
                "3 <- 7.5",
                "4 <- 7.2",
                "5 <- 7.6",
                "6 <- 6.7",
                "7 <- 5.8",
                "8 <- 5.4",
                "9 <- 4.9"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || Input: 5 10",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 + 4 = 5 (left: 5) ",
                "13 - 9 = 4 (left: 3 4 4) || 3 + 4 = 7 (left: 4 7)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                20.0
            ],
            "Resampling": [
                "0 <- 3.5",
                "1 <- 8.3",
                "2 <- 7.9",
                "3 <- 7.5",
                "4 <- 0.6",
                "5 <- 8.5",
                "6 <- 8.3",
                "7 <- 4.8",
                "8 <- 7.8",
                "9 <- 5.9"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 4) || 3 * 4 = 12 (left: 4 12)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 3 = 10 (left: 5 10)",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - 4) * 13 = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - (13 - 4)) = 24",
                "9 - 4 = 5 (left: 3 5 13) || 13 - 5 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (9 - 4) * 13 = 24",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)"
            ]
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Step 0": {
            "steps": [
                "10 - 4 = 6 (left: 6 10 12)",
                "5 + 10 = 15 (left: 4 15 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "5 * 10 = 50 (left: 4 50 12)",
                "10 / 5 = 2 (left: 4 2 12)",
                "4 + 5 = 9 (left: 9 10 12)",
                "10 + 2 = 12 (left: 4 5 12)",
                "10 + 4 = 14 (left: 5 14 12)",
                "5 * 2 = 10 (left: 4 10 12)"
            ],
            "Evaluation": [
                41.0,
                21.001,
                1.002,
                20.002,
                3.0,
                2.001,
                3.0,
                2.001,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.7",
                "2 <- 0.0",
                "3 <- 0.3",
                "4 <- 0.0",
                "5 <- INIT",
                "6 <- 0.0",
                "7 <- 0.3",
                "8 <- 0.4",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "4 + 5 = 9 (left: 9 10 12)",
                "10 + 2 = 12 (left: 4 5 12) || 5 * 4 = 20 (left: 20 12)",
                "10 - 4 = 6 (left: 6 10 12) || 6 + 10 = 16 (left: 16 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2)",
                "10 - 4 = 6 (left: 6 10 12) || 10 * 12 = 120 (left: 6 120)",
                "12 - 10 = 2 (left: 4 5 2)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12)",
                "4 * 5 = 20 (left: 20 10 12) || 10 - 2 = 8 (left: 8 12)",
                "5 * 10 = 50 (left: 4 50 12) || 4 + 50 = 54 (left: 12 54)",
                "5 * 2 = 10 (left: 4 10 12) || 10 - 4 = 6 (left: 6 10 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                20.0,
                0.002,
                1.001,
                2.001,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 0.0",
                "5 <- 0.1",
                "6 <- 0.1",
                "7 <- 0.0",
                "8 <- 0.0",
                "9 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40)",
                "5 * 10 = 50 (left: 4 50 12)",
                "12 / 4 = 3 (left: 3 10 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 / 2 = 10 (left: 10)",
                "10 - 4 = 6 (left: 6 10 12) || 10 + 12 = 22 (left: 6 22)",
                "5 + 10 = 15 (left: 4 15 12) || 15 * 12 = ",
                "5 + 10 = 15 (left: 4 15 12) || 15 - 4 = 11 (left: 11 12)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12)",
                "10 - 4 = 6 (left: 6 10 12) || 6 + 10 = 16 (left: 16 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 40)"
            ],
            "Evaluation": [
                40.0,
                2.0,
                1.002,
                0.001,
                0.002,
                0.003,
                0.002,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.7",
                "2 <- 2.7",
                "3 <- 0.1",
                "4 <- 0.3",
                "5 <- 2.0",
                "6 <- 2.0",
                "7 <- 2.0",
                "8 <- INIT",
                "9 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 + 40 = 42 (left: 42)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12) || 60 / 12 = 5 (left: 5)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12) || 60 * 12 = 720 (left: 720)",
                "5 + 10 = 15 (left: 4 15 12) || 4 * 15 = 60 (left: 60 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 * 40 = 80 (left: 80)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 * 40 = 80 (left: 80)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 40 / 2 = 20 (left: 20)",
                "10 - 4 = 6 (left: 6 5 12)",
                "10 - 4 = 6 (left: 6 10 12) || 10 * 12 = 120 (left: 6 120)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                1.002,
                60.0,
                3.0,
                0.003,
                60.0,
                22.0,
                2.001,
                3.0
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.7",
                "2 <- 3.3",
                "3 <- 3.6",
                "4 <- 2.0",
                "5 <- 3.7",
                "6 <- 1.3",
                "7 <- 0.3",
                "8 <- 3.6",
                "9 <- 2.7"
            ]
        },
        "Step 4": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12) || 60 - 12 = 48 (left: 48)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 + 40 = 42 (left: 42)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 * 40 = 80 (left: 40 80)",
                "10 - 4 = 6 (left: 6 10 12) || 6 + 10 = 16 (left: 16 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 40)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 40 / 2 = 20 (left: 20)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12) || Input: 5 10 15"
            ],
            "Evaluation": [
                40.001,
                0.003,
                20.002,
                20.002,
                0.003,
                0.003,
                60.0,
                0.002,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 4.8",
                "1 <- 2.0",
                "2 <- 4.8",
                "3 <- 2.7",
                "4 <- 3.3",
                "5 <- 3.8",
                "6 <- 3.3",
                "7 <- 2.0",
                "8 <- 2.7",
                "9 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 40 / 2 = 20 (left: 20)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12) || 60 * 12 = 720 (left: 720)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "5 + 10 = 15 (left: 4 15 12) || 4 * 15 = 60 (left: 60 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 2 + 12 = 14",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 + 40 = 42 (left: 40)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 10 = 60 (left: 60 12) || 60 + 12 = 72 (left: 72)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 - 12.5 = -0.5 (left: -0.5)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                0.002,
                21.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 0.3",
                "2 <- 4.6",
                "3 <- 5.9",
                "4 <- 4.8",
                "5 <- 4.8",
                "6 <- 4.8",
                "7 <- 2.0",
                "8 <- 4.6",
                "9 <- 5.9"
            ]
        },
        "Step 6": {
            "steps": [
                "12 / 4 = 3 (left: 3 10 12) || 3 * 10 = 30 (left: 30 12)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || Input: 5 10 15",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                0.003,
                0.002,
                0.003,
                0.001,
                0.003,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 3.3",
                "2 <- 0.3",
                "3 <- 3.3",
                "4 <- 5.9",
                "5 <- 2.0",
                "6 <- 3.7",
                "7 <- 6.2",
                "8 <- 6.1",
                "9 <- 5.8"
            ]
        },
        "Step 7": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12) || 20 - 10 = 10 (left: 10 12)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 40 / 2 = 20 (left: 20)",
                "10 - 4 = 6 (left: 6 10 12) || 10 - 6 = 4 (left: 4 12)",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (4 * 5) / (10 / 12) = 24",
                "4 * 5 = 20 (left: 20 10 12) || 20 / 10 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12) || 12 - 10 = 2 (left: 20 2) || 20 * 2 = 40 (left: 2 40) || 2 * 40 = 80 (left: 40)"
            ]
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Step 0": {
            "steps": [
                "7 + 2 = 9 (left: 1 9 ",
                "1 + 2 = 3 (left: 3 7 11)",
                "2 * 7 = 14 (left: 1 14 11)",
                "11 - 7 = 4 (left: 1 2 4)",
                "2 * 7 = 14 (left: 1 14 11)",
                "2 * 7 = 14 (left: 1 14 11)",
                "1 + 2 = 3 (left: 3 7 11)",
                "1 + 2 = 3 (left: 3 7 11)",
                "1 + 2 = 3 (left: 3 7 11)",
                "2 * 7 = 14 (left: 1 14 11)"
            ],
            "Evaluation": [
                41.0,
                0.003,
                1.002,
                2.001,
                0.003,
                0.003,
                0.003,
                0.003,
                20.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 0.8",
                "3 <- 0.8",
                "4 <- 0.8",
                "5 <- INIT",
                "6 <- 0.8",
                "7 <- 0.8",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 10)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 3 = 8 (left: 7 8)",
                "1 + 2 = 3 (left: 3 7 11) || 7 / 3 = 2 (left: 2 11)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 7 = 4 (left: 3 4)",
                "1 + 2 = 3 (left: 3 7 11)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 3 = 8 (left: 7 8)",
                "1 + 2 = 3 (left: 3 7 11) || 3 + 7 = 10 (left: 10 11)",
                "11 - 1 = 10 (left: 2 7 10)",
                "7 - 2 = 5 (left: 1 5 "
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.003,
                21.0,
                0.003,
                0.003,
                0.002,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- 1.4",
                "5 <- 1.8",
                "6 <- 1.8",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || Possible next steps:",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 7 = 4 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "11 - 1 = 10 (left: 2 7 10) || 7 / 2 = 3.5 (left: 3.5 10)",
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left:",
                "11 - 1 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 8 10)",
                "2 * 7 = 14 (left: 1 14 11)"
            ],
            "Evaluation": [
                0.002,
                40.001,
                0.001,
                0.003,
                0.003,
                0.003,
                0.0,
                0.002,
                20.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 1.4",
                "3 <- 1.8",
                "4 <- 0.2",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 2.8",
                "8 <- 1.4",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)",
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 10)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 7 = 4 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "11 - 1 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "2 * 7 = 14 (left: 1 14 11) || Input: 3 5 7",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5)",
                "2 + 7 = 9 (left: 1 9 11)",
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 8 10) || 18 * 2 = 36",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 7 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 7 = 7 (left: 2 7 11)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.001,
                1.001,
                0.003,
                40.0,
                1.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.8",
                "1 <- 1.8",
                "2 <- 3.5",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 1.8",
                "6 <- 0.0",
                "7 <- 3.5",
                "8 <- INIT",
                "9 <- 3.5"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10)",
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 9 10)",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "7 - 2 = 5 (left: 1 5 ",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.001,
                60.0,
                0.001,
                0.001,
                2.001,
                20.001,
                0.003,
                0.001,
                1.001,
                1.0
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 2.1",
                "2 <- 4.5",
                "3 <- 3.5",
                "4 <- 0.8",
                "5 <- 2.8",
                "6 <- 4.5",
                "7 <- 4.1",
                "8 <- 1.4",
                "9 <- 4.1"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)",
                "7 + 11 = 18 (left: 1 2 18) || 18 - 1 = 17 (left: 2 17)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10) || 5 + 10 = 15 (left: 10 15)",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "1 + 2 = 3 (left: 3 7 11) || 3 + 7 = 10 (left: 10 11)",
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 8 10) || 10 / 8 = 1.25 (left: 1.25)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10) || 5 * 10 = 50 (left: 50)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 7 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)"
            ],
            "Evaluation": [
                20.0,
                0.003,
                0.003,
                0.0,
                0.002,
                0.003,
                0.002,
                0.001,
                0.002,
                0.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 2.1",
                "3 <- 5.0",
                "4 <- 0.8",
                "5 <- 3.5",
                "6 <- 1.4",
                "7 <- 4.5",
                "8 <- 4.1",
                "9 <- 0.0"
            ]
        },
        "Step 6": {
            "steps": [
                "7 + 2 = 9 (left: 1 9  || 9 / 1 = 9 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 10)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4) || 1.4 - 2 = -0.6 (left: -0.6)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 3 = 8 (left: 8 11)",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)",
                "1 + 2 = 3 (left: 3 7 11) || 11 - 7 = 4 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10) || 5 * 10 = 50 (left: 50)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                2.001,
                0.002,
                0.0,
                0.003,
                0.003,
                0.002,
                22.0
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 6.9",
                "2 <- 0.0",
                "3 <- 4.1",
                "4 <- 6.2",
                "5 <- 5.0",
                "6 <- 4.1",
                "7 <- 6.2",
                "8 <- 1.8",
                "9 <- 5.0"
            ]
        },
        "Step 7": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 1 * 36 = 36 (left: 36)",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 9 - 3 = 6 (left: 6)",
                "7 + 2 = 9 (left: 1 9  || 9 / 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 36 - 1 = 35 (left: 35)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4) || 1.4 * 2 = 2.8 (left: 2.8)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 36 / 1 = 36 (left: 36)",
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 7 8)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4) || 1.4 / 8 = 0.175 (left: 8)"
            ],
            "Evaluation": [
                20.0,
                0.003,
                0.002,
                0.001,
                0.003,
                0.002,
                40.0,
                0.003,
                21.001,
                20.001
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 0.0",
                "2 <- 4.5",
                "3 <- 1.8",
                "4 <- 3.6",
                "5 <- 5.0",
                "6 <- 7.8",
                "7 <- 6.2",
                "8 <- 4.5",
                "9 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "7 + 2 = 9 (left: 1 9  || 1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10) || 10 - 5 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10)",
                "2 + 7 = 9 (left: 1 9 11) || 11 - 9 = 2 (left: 1 2)",
                "11 - 1 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4) || There is only one number given, so there are no possible next steps as there are not enough numbers to perform any operations.",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 1 + 36 = 37 (left: 37)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10) || 10 + 5 = 15 (left: 15)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 1 + 36 = 37 "
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.002,
                0.002,
                0.003,
                60.0,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 8.6",
                "1 <- 8.6",
                "2 <- 6.2",
                "3 <- 7.6",
                "4 <- 8.6",
                "5 <- 8.6",
                "6 <- 4.5",
                "7 <- 8.6",
                "8 <- 3.5",
                "9 <- 7.9"
            ]
        },
        "Step 9": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 36 / 1 = 36 (left: 36) || There are no possible next steps with just the number 36.",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 2 7 10) || 7 - 2 = 5 (left: 5 10) || 5 * 10 = 50 (left: 50)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 2 7 10) || 10 / 2 = 5 (left: 2 5) || 2 - 5 = -3 (left: -3)",
                "11 - 1 = 10 (left: 2 7 10) || 10 - 2 = 8 (left: 8 10) || 8 * 10 = 80 (left: 80)"
            ]
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Step 0": {
            "steps": [
                "6 - 4 = 2 (left: 2 5 8)",
                "4 + 5 = 9 (left: 6 8 9)",
                "4 + 5 = 9 (left: 6 8 9)",
                "6 * 8 = 48 (left: 4 5 ",
                "4 / 5 = 0.8 (left: 0.8 6 8)",
                "5 + 6 = 11 (left: 4 8 11)",
                "5 * 6 = 30 (left: 4 8 30)",
                "6 + 8 = 14 (left: 4 5 14)",
                "5 + 6 = 11 (left: 4 8 11)",
                "6 + 8 = 14 (left: 4 5 14)"
            ],
            "Evaluation": [
                2.0,
                1.002,
                3.0,
                0.001,
                2.001,
                2.001,
                2.0,
                20.002,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.1",
                "5 <- INIT",
                "6 <- 0.5",
                "7 <- 0.2",
                "8 <- 0.7",
                "9 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 8 = 14 (left: 4 5 14) || 5 * 4 = 20 (left: 20 14)",
                "6 * 8 = 48 (left: 4 5 ",
                "4 + 5 = 9 (left: 6 8 9)",
                "5 * 6 = 30 (left: 4 8 30)",
                "4 + 5 = 9 (left: 6 8 9) || 6 / 8 = 0.75 (left: 0.75 9)",
                "5 * 6 = 30 (left: 4 8 30)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8)",
                "4 + 5 = 9 (left: 6 8 9) || 6 * 8 = 48 (left: 9 48)",
                "6 + 8 = 14 (left: 4 5 14) || 5 * 4 = 20 (left: 20 14)",
                "4 + 5 = 9 (left: 6 8 9) || Input:"
            ],
            "Evaluation": [
                0.003,
                0.0,
                2.001,
                3.0,
                1.001,
                2.0,
                60.0,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.6",
                "1 <- 0.7",
                "2 <- 1.5",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 0.2",
                "9 <- 1.6"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || Input: 5 10",
                "6 + 8 = 14 (left: 4 5 14) || 14 / 4 = 3.5 (left: 3.5 14)",
                "5 * 6 = 30 (left: 4 8 30) || 30 - 8 = 22 (left: 4 22)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)",
                "5 * 6 = 30 (left: 4 8 30)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || Input: 5 10",
                "4 + 5 = 9 (left: 6 8 9) || 8 - 6 = 2 (left: 2 9)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || Possible next steps:"
            ],
            "Evaluation": [
                0.003,
                0.003,
                21.001,
                0.002,
                1.002,
                0.002,
                60.0,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.6",
                "1 <- 1.6",
                "2 <- 2.2",
                "3 <- 2.6",
                "4 <- 0.7",
                "5 <- 1.6",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- INIT",
                "9 <- 1.6"
            ]
        },
        "Step 3": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || Possible next steps:",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 * 6 = 30 (left: 4 8 30) || 30 - 8 = 22 (left: 4 22) || 22 / 4 = 5.5 (left: 5.5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "6 + 8 = 14 (left: 4 5 14) || 14 - 4 = 10 (left: 10 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 - 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - (8 - 4) = 24",
                "4 + 5 = 9 (left: 6 8 9)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.001,
                0.002,
                0.002,
                41.0,
                60.0,
                60.0,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 3.7",
                "4 <- 3.9",
                "5 <- 3.9",
                "6 <- 3.9",
                "7 <- 1.6",
                "8 <- 3.1",
                "9 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 8 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 8 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24 8)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - 8 * 4 = 24",
                "5 * 6 = 30 (left: 4 8 30) || 30 - 4 = 26 (left: 8 26 30)"
            ],
            "Evaluation": [
                40.0,
                21.001,
                0.002,
                0.002,
                60.0,
                2.0,
                0.002,
                2.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 4.4",
                "2 <- 4.9",
                "3 <- 3.9",
                "4 <- 4.4",
                "5 <- 3.9",
                "6 <- 3.1",
                "7 <- 4.4",
                "8 <- 1.6",
                "9 <- 3.5"
            ]
        },
        "Step 5": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 + 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 + 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - 4 * 8 = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "4 + 5 = 9 (left: 6 8 9) || 6 + 8 = 14 (left: 14 9)"
            ],
            "Evaluation": [
                0.001,
                60.0,
                60.0,
                0.003,
                0.003,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.9",
                "1 <- 4.9",
                "2 <- 5.8",
                "3 <- 5.2",
                "4 <- 5.1",
                "5 <- 3.6",
                "6 <- 4.4",
                "7 <- 5.8",
                "8 <- 3.5",
                "9 <- 5.1"
            ]
        },
        "Step 6": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 + 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - 8) * 4 = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 - 8) = 24",
                "4 + 5 = 9 (left: 6 8 9) || 8 - 6 = 2 (left: 2 9)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) - 8 * 4 = 24"
            ],
            "Evaluation": [
                0.0,
                0.002,
                0.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.6",
                "1 <- 6.7",
                "2 <- 6.8",
                "3 <- 6.5",
                "4 <- 3.1",
                "5 <- 1.6",
                "6 <- 5.8",
                "7 <- 6.3",
                "8 <- 6.7",
                "9 <- 6.8"
            ]
        },
        "Step 7": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 + 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 - 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 / 8 = 0.375 (left: 0.375)"
            ],
            "Evaluation": [
                60.0,
                0.002,
                0.003,
                0.002,
                0.002,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.8",
                "1 <- 3.6",
                "2 <- 7.9",
                "3 <- 5.6",
                "4 <- 4.8",
                "5 <- 7.6",
                "6 <- 3.9",
                "7 <- 6.6",
                "8 <- 4.1",
                "9 <- 6.9"
            ]
        },
        "Step 8": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (4 + 8) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 - 8 = -5 (left: -5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 8 24) || 24 - 8 = 16 (left: 16)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)"
            ],
            "Evaluation": [
                60.0,
                0.0,
                60.0,
                0.0,
                0.002,
                0.001,
                0.001,
                21.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.7",
                "1 <- 5.2",
                "2 <- 8.8",
                "3 <- 7.6",
                "4 <- 7.8",
                "5 <- 3.6",
                "6 <- 3.6",
                "7 <- 7.6",
                "8 <- 6.4",
                "9 <- 5.7"
            ]
        },
        "Step 9": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 8 11)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 5 + 10 = 15 (left: 10 15)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (5 + 6) * (8 - 4) = 24",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 8 24)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "5 + 6 = 11 (left: 4 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)"
            ]
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Step 0": {
            "steps": [
                "6 * 10 = 60 (left: 12 60 13)",
                "12 + 6 = 18 (left: 10 13 18)",
                "6 + 10 = 16 (left: 12 13 16)",
                "10 * 12 = 120 (left: 6 120 13)",
                "6 + 10 = 16 (left: 12 13 16)",
                "10 + 12 = 22 (left: 6 22 13)",
                "12 + 1 = 13 (left: 6 10 13)",
                "10 * 12 = 120 (left: 6 120 13)",
                "12 - 6 = 6 (left: 6 10 ",
                "10 + 12 = 22 (left: 6 22 13)"
            ],
            "Evaluation": [
                3.0,
                1.002,
                2.0,
                2.001,
                1.002,
                22.0,
                1.002,
                3.0,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.6",
                "4 <- 0.5",
                "5 <- 0.2",
                "6 <- 0.5",
                "7 <- 0.5",
                "8 <- 0.5",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 132 13)",
                "12 + 13 = 25 (left: 6 10 25)",
                "10 * 6 = 60 (left: 12 13 60)",
                "12 + 1 = 13 (left: 6 10 13) || 6 + 10 = 16 (left: 16 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 + 22 = 28 (left: 13 28)",
                "6 + 10 = 16 (left: 12 13 16) || 16 - 12 = 4 (left: 13 4)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 13 = 9 (left: 6 9)",
                "6 + 10 = 16 (left: 12 16 13)"
            ],
            "Evaluation": [
                1.001,
                1.002,
                2.001,
                0.003,
                0.003,
                0.002,
                0.002,
                1.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.5",
                "4 <- 0.5",
                "5 <- 0.5",
                "6 <- 0.9",
                "7 <- 0.3",
                "8 <- 0.7",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13)",
                "6 * 10 = 60 (left: 12 60 13)",
                "10 + 12 = 22 (left: 6 22 13)",
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 + 12 = 22 (left: 6 22 13) || 6 / 22 = ",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 * 12 = 120 (left: 6 120 13) || 13 * 6 = 78 (left: 78 13)",
                "10 * 12 = 120 (left: 6 120 13) || 120 - 6 = 114 (left: 114 13)",
                "10 / 6 = 1.67 (left: 1.67 12 13)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                3.0,
                0.002,
                0.002,
                0.003,
                0.003,
                0.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 0.5",
                "2 <- 0.7",
                "3 <- INIT",
                "4 <- 0.5",
                "5 <- 0.5",
                "6 <- 2.9",
                "7 <- 1.2",
                "8 <- 0.5",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 * 12 = 120 (left: 6 120 13) || 20 / 6 = 3.33 (",
                "12 * 13 = 156 (left: 6 10 ",
                "10 + 12 = 22 (left: 6 22 13) || 13 - 6 = ",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 6 = 16 (left: 16 13)",
                "10 / 6 = 1.67 (left: 1.67 12 13) || 1.67 * 12 = 20.04 (left: 13 20.04)",
                "10 * 6 = 60 (left: 12 13 60) || 13 * 60 = 780 (left: 12 780)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "13 - 6 = 7 (left: 7 10 "
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                1.002,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                1.001
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- INIT",
                "2 <- 0.5",
                "3 <- 0.1",
                "4 <- INIT",
                "5 <- 3.9",
                "6 <- INIT",
                "7 <- 2.2",
                "8 <- 0.2",
                "9 <- 1.1"
            ]
        },
        "Step 4": {
            "steps": [
                "10 * 12 = 120 (left: 6 120 13) || 13 - 6 = 7 (left: 7 13)",
                "10 - 6 = 4 (left: 4 12 13)",
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13)",
                "12 + 6 = 18 (left: 10 13 18) || 10 + 13 = 23 (left: 23 18)",
                "10 + 12 = 22 (left: 6 22 13)",
                "13 - 6 = 7 (left: 7 10  || 10 / 7 = 1.43 (left: 1.43)",
                "6 * 10 = 60 (left: 12 13 60)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "6 + 10 = 16 (left: 12 13 16) || 12 + 13 = 25 (left: 16)",
                "12 + 13 = 25 (left: 6 10 25) || 6 * 10 = 60 (left: 60 25)"
            ],
            "Evaluation": [
                0.001,
                1.002,
                0.002,
                0.002,
                1.001,
                0.002,
                1.002,
                0.003,
                0.001,
                2.0
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- 4.6",
                "2 <- 2.9",
                "3 <- INIT",
                "4 <- 2.2",
                "5 <- 0.0",
                "6 <- 2.2",
                "7 <- 4.9",
                "8 <- 2.2",
                "9 <- 0.5"
            ]
        },
        "Step 5": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13) || 13 - 3.67 = 9.33 (left: 9.33)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60)",
                "10 / 6 = 1.67 (left: 1.67 12 13) || 12 - 1.67 = 10.33 (left: 10.33 13)",
                "12 + 6 = 18 (left: 10 13 18)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 6 = 16 (left: 16 13)",
                "6 * 10 = 60 (left: 12 60 13) || 60 - 13 = 47 (left: 47)",
                "10 + 12 = 22 (left: 6 22 13) || 6 + 22 = 28 (left: 13 28)",
                "12 + 13 = 25 (left: 6 10 25) || 6 * 10 = 60 (left: 60 25) || 60 * 25 = 1500 (left: 1500)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 6 = 16 (left: 16 13)",
                "10 + 12 = 22 (left: 6 22 13) || 13 - 6 = "
            ],
            "Evaluation": [
                0.003,
                41.0,
                1.002,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 5.1",
                "2 <- 0.9",
                "3 <- 0.5",
                "4 <- 5.1",
                "5 <- 5.1",
                "6 <- 0.9",
                "7 <- 5.1",
                "8 <- 2.9",
                "9 <- 5.1"
            ]
        },
        "Step 6": {
            "steps": [
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 / 60 = 0.41666666666667 (left: 0.41666666666667)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 * 60 = 1500 (left: 1500)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 13 = 9 (left: 6 9)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 - 60 = -35 (left: -35)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 10 * 5 = 50 (left: 50)",
                "10 + 12 = 22 (left: 6 22 13) || 22 / 6 = 3.67 (left: 3.67 13)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 - 60 = -35 (left: -35)",
                "10 / 6 = 1.67 (left: 1.67 12 13) || 12 / 1.67 = 7.19 (left: 7",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 60 - 25 = 35 (left: 35)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 5.1",
                "2 <- 5.1",
                "3 <- 5.1",
                "4 <- 4.1",
                "5 <- INIT",
                "6 <- 3.9",
                "7 <- 5.1",
                "8 <- 5.1",
                "9 <- 0.4"
            ]
        },
        "Step 7": {
            "steps": [
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 / 60 = 0.4167 (left: 0.4167)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 - 60 = -35 (left: -35)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 + 60 = 85 (left: 85)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 60 / 25 = 2.4 (left: 2.4)",
                "10 - 6 = 4 (left: 4 12 13) || 12 / 4 = 3 (left: 3 13)",
                "12 - 6 = 6 (left: 6 10 13)",
                "13 - 6 = 7 (left: 7 10  || 7 * 10 = 70 (left: 70)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 * 60 = 1500 (left: 1500)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 - 60 = -35 (left: -35)",
                "6 + 10 = 16 (left: 12 13 16) || 13 - 12 = 1 (left: 1 16)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                3.0,
                0.002,
                0.003,
                0.001,
                1.002
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 7.5",
                "2 <- 5.3",
                "3 <- 7.5",
                "4 <- 3.6",
                "5 <- 5.1",
                "6 <- 7.5",
                "7 <- 0.9",
                "8 <- 1.2",
                "9 <- 5.1"
            ]
        },
        "Step 8": {
            "steps": [
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 / 60 = 0.4166666666666667 (left: 0.4166666666666667)",
                "12 - 6 = 6 (left: 6 10 13) || 10 + 13 = 23 (left: 6 23)",
                "12 + 6 = 18 (left: 10 13 18) || 13 * 10 = 130 (left: 18 130)",
                "12 - 6 = 6 (left: 6 10 13) || 10 + 13 = 23 (left: 6 23)",
                "10 / 6 = 1.67 (left: 1.67 12 13) || 1.67 * 12 = 20.04 (left: 13 20.04) || 13 * 20.04 = 260.52 (left: 260.52)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 60 / 25 = 2.4 (left: 2.4)",
                "12 - 6 = 6 (left: 6 10 13) || 6 / 10 = 0.6 (",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 * 6 = 60 (left: 12 13 60) || 12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 60)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 * 60 = 1500 (left: 1500)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 5.2",
                "2 <- 5.1",
                "3 <- 7.5",
                "4 <- 5.1",
                "5 <- 0.5",
                "6 <- 0.5",
                "7 <- 5.1",
                "8 <- 5.1",
                "9 <- 5.1"
            ]
        },
        "Step 9": {
            "steps": [
                "12 + 13 = 25 (left: 6 10 25) || 6 * 10 = 60 (left: 60 25) || 60 + 25 = 85 (left: 85)",
                "10 / 6 = 1.67 (left: 1.67 12 13) || 12 - 1.67 = 10.33 (left: 10.33 13) || 13 - 10.33 = 2.67 (left: 2.67 13)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 * 60 = 1500 (left: 1500)",
                "12 - 6 = 6 (left: 6 10 13) || 10 + 13 = 23 (left: 6 23)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 * 60 = 1500 (left: 1500)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 6 = 16 (left: 16 13)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 13 = 9 (left: 6 9)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 - 60 = -35 (left: -35)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 - 60 = -35 (left: -35)",
                "6 * 10 = 60 (left: 12 13 60) || 12 + 13 = 25 (left: 25 60) || 25 * 60 = 1500 (left: 1500)"
            ]
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Step 0": {
            "steps": [
                "9 - 3 = 6 (left: 1 6 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "1 * 3 = 3 (left: 3 9 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "3 * 9 = 27 (left: 1 9 27)",
                "3 * 9 = 27 (left: 1 9 27)",
                "9 / 3 = 3 (left: 1 3 9)",
                "9 - 3 = 6 (left: 1 6 9)",
                "9 - 3 = 6 (left: 1 6 9)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                20.002,
                2.001,
                60.0,
                20.002,
                0.003,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.5",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.2",
                "8 <- 0.2",
                "9 <- 0.5"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 3 = 3 (left: 3 9 9) || Input: 4 5 5 20",
                "1 * 3 = 3 (left: 3 9 9)",
                "9 - 1 = 8 (left: 3 8 9) || 8 - 3 = 5 (left: 5 8 9)",
                "9 - 1 = 8 (left: 3 8 9) || 9 - 3 = 6 (left: 6 8)",
                "3 * 9 = 27 (left: 1 9 27) || 9 * 3 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 9 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "1 * 3 = 3 (left: 3 9 9) || 9 / 3 = 3 (left: 3 9)",
                "1 * 3 = 3 (left: 3 9 9) || 3 * 9 = 27 (left: 9 27)",
                "3 * 9 = 27 (left: 1 9 27) || 9 * 3 = 27 (left: 1 27)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                0.002,
                20.002,
                2.001,
                60.0,
                0.003,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.2",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.4",
                "5 <- 1.6",
                "6 <- 0.4",
                "7 <- INIT",
                "8 <- 1.6",
                "9 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 9 - 3 = 6 (left: 8 6)",
                "1 * 3 = 3 (left: 3 9 9) || 3 + 9 = 12 (left: 9 12)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 8 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "9 - 1 = 8 (left: 3 8 9) || ",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9)",
                "9 - 1 = 8 (left: 3 8 9) || Input: 5 12",
                "9 - 3 = 6 (left: 1 6 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 - 1 = 26 (left: 26 9)",
                "1 * 3 = 3 (left: 3 9 9) || 9 - 3 = 6 (left: 6 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                2.0,
                20.002,
                60.0,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 0.2",
                "2 <- 2.5",
                "3 <- 1.6",
                "4 <- 1.4",
                "5 <- 2.4",
                "6 <- 0.4",
                "7 <- 0.5",
                "8 <- 1.5",
                "9 <- 2.5"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 3 = 3 (left: 3 9 9) || 3 + 9 = 12 (left: 9 12)",
                "1 * 3 = 3 (left: 3 9 9) || 9 / 3 = 3 (left: 3 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36)",
                "3 * 9 = 27 (left: 1 27 9) || 9 - 1 = 8 (left: 8 9)",
                "3 * 9 = 27 (left: 1 9 27) || 9 * 3 = 27 (left: 1 27) || 1 * 27 = 27 (left: 27)",
                "9 - 1 = 8 (left: 3 8 9) ||  || There are no more possible next steps.",
                "9 - 1 = 8 (left: 3 8 9) || 3 * 8 = 24 (left: 8 9 24)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 - 9 = 18 (left: 18)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                1.002,
                20.001,
                0.003,
                2.0,
                60.0,
                22.0,
                20.001
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 3.4",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 3.7",
                "5 <- 0.4",
                "6 <- 0.4",
                "7 <- 3.9",
                "8 <- 1.6",
                "9 <- 0.2"
            ]
        },
        "Step 4": {
            "steps": [
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 / 3 = 12",
                "3 * 9 = 27 (left: 1 9 27) || 9 * 3 = 27 (left: 1 27) || 1 * 27 = 27 (left: 27) || 27 / 2 = 13.5 (left: 13.5)",
                "9 - 1 = 8 (left: 3 8 9) || 8 - 3 = 5 (left: 5 9)",
                "9 - 1 = 8 (left: 3 8 9) || 9 + 3 = 12 (left: 8 9 12)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 + 27 = 36 (left: 36)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9)",
                "9 - 1 = 8 (left: 3 8 9) || 8 - 3 = 5 (left: 5 8 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 - 9 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "3 * 9 = 27 (left: 1 27 9) || 27 - 1 = 26 (left: 26 9)",
                "1 * 3 = 3 (left: 3 9 9) || 9 - 3 = 6 (left: 6 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                22.0,
                60.0,
                40.0,
                2.001,
                0.003,
                0.003,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- 4.4",
                "2 <- 3.7",
                "3 <- 3.7",
                "4 <- 3.2",
                "5 <- 3.7",
                "6 <- 4.4",
                "7 <- 4.3",
                "8 <- 0.5",
                "9 <- 4.3"
            ]
        },
        "Step 5": {
            "steps": [
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 * 3 = 27 (left: 27)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9) || 9 / 2.67 = 3.36 (left: 3.36)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 27 / 9 = 3 (left: 3)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 27 / 9 = 3 (left: 3)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 / 3 = 12 (left: 12)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 4 + 16 = 20 (left: ",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9) || 2.67 * 9 = 24.03 (left: 9)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 + 27 = 36 (left: 36) || 36 / 2 = 18",
                "3 * 9 = 27 (left: 1 9 27) || 27 - 1 = 26 (left: 9 26)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 + 27 = 36 (left: 36) || 36 / 2 = 18"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.0,
                0.0,
                0.003,
                0.003,
                0.003,
                40.001
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 4.9",
                "2 <- 2.5",
                "3 <- 4.2",
                "4 <- 4.3",
                "5 <- 3.2",
                "6 <- 4.9",
                "7 <- 3.9",
                "8 <- 0.5",
                "9 <- 4.4"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 9 + 3 = 12 (left: 8 9 12) || 9 - 4 = 5 (left: 5 12)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 9 - 27 = -18 (left: -18)",
                "9 - 1 = 8 (left: 3 8 9) || 9 + 3 = 12 (left: 8 9 12) || 8 + 9 = 17 (left: 17 12)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 + 27 = 36 (left: 36) || There is only one number, so there are no possible next steps.",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 + 2 = 38",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1.8 (left: 1.8 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 - 9 = 18 (left: 18) || No possible next steps with the input 18.",
                "3 * 9 = 27 (left: 1 9 27) || 9 + 1 = 10 (left: 10 27)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9) || 9 / 2.67 = 3.36 (left: 3.36)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.1",
                "1 <- 6.1",
                "2 <- 3.4",
                "3 <- 4.2",
                "4 <- 0.4",
                "5 <- 6.1",
                "6 <- 3.2",
                "7 <- 5.9",
                "8 <- 6.1",
                "9 <- 2.5"
            ]
        },
        "Step 7": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 9 10)",
                "3 * 9 = 27 (left: 1 9 27) || 9 * 3 = 27 (left: 1 27) || 1 * 27 = 27 (left: 27) || 27 - 2 = 25 (left: 2 25)",
                "9 - 1 = 8 (left: 3 8 9) || 9 + 3 = 12 (left: 8 9 12) || 8 + 9 = 17 (left: 12 17)",
                "9 - 1 = 8 (left: 3 8 9) || 3 + 8 = 11 (left: 8 9 11)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 / 2 = 18",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 / 8 = 4",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 * 9 = 243 (left: 243)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                3.0,
                0.003,
                0.003,
                0.003,
                3.0,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 4.4",
                "2 <- 3.2",
                "3 <- 4.3",
                "4 <- 6.1",
                "5 <- 5.9",
                "6 <- 6.1",
                "7 <- 4.4",
                "8 <- 3.9",
                "9 <- 7.8"
            ]
        },
        "Step 8": {
            "steps": [
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || There are no possible next steps as there is only one number in the input.",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9) || 9 - 2.67 = 6.33 (left: 6.33)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 / 2 = 18",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 + 27 = 36 (left: 36) || 36 / 2 = 18",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 + 9 = 36 (left: 36) || 36 / 2 = 18",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9) || 2.67 + 9 = 11.67 (left: 11.67)",
                "3 * 9 = 27 (left: 1 27 9) || 27 / 1 = 27 (left: 27 9) || 27 - 9 = 18 (left: 18) || There are no possible next steps as there are no other numbers to combine or operate with.",
                "3 * 9 = 27 (left: 1 27 9) || 9 / 1 = 9 (left: 9 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                20.002
            ],
            "Resampling": [
                "0 <- 6.1",
                "1 <- 1.6",
                "2 <- 8.8",
                "3 <- 6.1",
                "4 <- 8.9",
                "5 <- 0.4",
                "6 <- 8.8",
                "7 <- 4.4",
                "8 <- 4.3",
                "9 <- 0.5"
            ]
        },
        "Step 9": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "3 * 9 = 27 (left: 1 27 9) || 1 + 27 = 28 (left: 9 28)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 4 + 16 = 20 (left: 20)",
                "9 - 1 = 8 (left: 3 8 9) || 8 - 3 = 5 (left: 5 8 9)",
                "1 + 3 = 4 (left: 4 9 9) || 9 - 4 = 5 (left: 5 9 9) || 9 / 5 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9) || 9 / 2.67 = 3.36 (left: 3.36)",
                "3 * 9 = 27 (left: 1 9 27) || 9 / 1 = 9 (left: 9 27) || 9 + 27 = 36 (left: 36) || 36 / 2 = 18",
                "3 * 9 = 27 (left: 1 9 27) || 9 -"
            ]
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Step 0": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 1 4 ",
                "1 + 4 = 5 (left: 4 5 11)",
                "4 * 1 = 4 (left: 4 11 4)",
                "1 + 4 = 5 (left: 4 5 11)",
                "1 * 4 = 4 (left: 4 4 11)",
                "11 + 1 = 12 (left: 4 4 12)",
                "11 - 4 = 7 (left: 4 4 7)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 4 = 7 (left: 1 4 "
            ],
            "Evaluation": [
                2.001,
                0.002,
                2.001,
                3.0,
                2.001,
                2.0,
                21.001,
                22.0,
                40.0,
                20.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 0.8",
                "2 <- INIT",
                "3 <- 0.7",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- 0.2",
                "9 <- 0.8"
            ]
        },
        "Step 1": {
            "steps": [
                "11 + 1 = 12 (left: 4 4 12) || 4 * 4 = 16 (left: 16 12)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "11 - 4 = 7 (left: 1 4 ",
                "11 - 4 = 7 (left: 4 4 7) || 7 - 4 = 3 (left: 4 3)",
                "1 + 4 = 5 (left: 4 5 11)",
                "4 + 1 = 5 (left: 4 4 5)",
                "11 / 1 = 11 (left: 4 4 ",
                "11 - 4 = 7 (left: 1 4  || 1 * 4 = 4 (left: 4)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55)",
                "11 - 1 = 10 (left: 4 4 10) || 4 - 4 = "
            ],
            "Evaluation": [
                1.002,
                60.0,
                20.001,
                1.001,
                1.002,
                1.002,
                1.002,
                0.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.8",
                "2 <- INIT",
                "3 <- 0.6",
                "4 <- 0.7",
                "5 <- 0.8",
                "6 <- 1.1",
                "7 <- 0.9",
                "8 <- 1.8",
                "9 <- 1.8"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 4 = 7 (left: 1 4  || 1 + 4 = 5 (left: 5)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 + 1 = 12 (left: 4 4 12) || 12 - 4 = 8 (left: 4 8)",
                "11 - 4 = 7 (left: 4 4 7) || 7 + 4 = 11 (left: 4 11)",
                "11 - 1 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "11 - 4 = 7 (left: 1 4  || 4 / 1 = 4 (left: 4)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 - 4 = 51 (left: 51)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 / 4 = 13.75 (left: 13.75)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                22.0,
                0.003,
                0.002,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 0.9",
                "3 <- 1.8",
                "4 <- 0.5",
                "5 <- 1.1",
                "6 <- INIT",
                "7 <- 0.8",
                "8 <- INIT",
                "9 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "1 * 4 = 4 (left: 4 4 11) || 11 * 4 = ",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)",
                "4 / 1 = 4 (left: 4 4 11)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || Possible next steps:"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                60.0,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 3.7",
                "2 <- INIT",
                "3 <- 3.6",
                "4 <- 2.1",
                "5 <- INIT",
                "6 <- 1.1",
                "7 <- 0.8",
                "8 <- INIT",
                "9 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "4 - 1 = 3 (left: 3 4 11) || 4 * 3 = 12 (left: 12 11)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "4 * 1 = 4 (left: 4 4 11)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 10 4)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                3.0,
                0.002,
                0.003,
                2.001,
                40.0,
                1.002,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 3.7",
                "1 <- INIT",
                "2 <- 4.2",
                "3 <- 0.9",
                "4 <- 1.1",
                "5 <- 4.6",
                "6 <- 3.6",
                "7 <- 3.5",
                "8 <- 4.8",
                "9 <- 3.7"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "4 + 1 = 5 (left: 5 4 11)",
                "4 - 1 = 3 (left: 3 4 11) || 4 * 3 = 12 (left: 12 11)",
                "11 - 4 = 7 (left: 1 4  || 1 + 4 = 5 (left: 5)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10) || 4 - 4 = 0 (left:",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (11 - 1) + 4 = 24",
                "11 - 1 = 10 (left: 4 10 4) || 10 - 4 = 6 (left: 6 4)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.001,
                22.0,
                0.003,
                0.003,
                1.001,
                1.001,
                60.0,
                0.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 3.6",
                "2 <- 0.6",
                "3 <- 4.8",
                "4 <- 5.9",
                "5 <- 5.9",
                "6 <- 1.8",
                "7 <- 3.7",
                "8 <- 1.1",
                "9 <- 2.1"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4)",
                "11 + 1 = 12 (left: 4 4 12) || 4 + 4 = 8 (left: 8 12)",
                "11 - 1 = 10 (left: 4 10 4) || 10 / 4 = 2.5 (left: 2.5 4)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 / 55 \u2248 0.07273 (left: 0.07273)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 - 4 = 51 (left: 51)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11"
            ],
            "Evaluation": [
                41.0,
                1.001,
                40.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- 4.8",
                "1 <- 4.8",
                "2 <- 5.1",
                "3 <- 3.6",
                "4 <- 5.6",
                "5 <- 3.5",
                "6 <- 6.2",
                "7 <- 3.5",
                "8 <- 4.8",
                "9 <- 3.6"
            ]
        },
        "Step 7": {
            "steps": [
                "11 - 1 = 10 (left: 4 10 4) || 4 + 10 = 14 (left: 4 14 4)",
                "11 - 1 = 10 (left: 4 10 4) || 4 * 10 = 40",
                "4 + 1 = 5 (left: 5 4 11) || 11 - 5 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10) || Possible",
                "11 - 1 = 10 (left: 4 10 4) || 10 - 4 = 6 (left: 6 4) || 6 - 4 = 2 (left: 2)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 10 4) || 10 / 4 = 2.5 (left: 2.5 4) || 4 / 2.5 = 1.6 (left: 1.6)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 10 4) || 4 * 10 = 40 (left: 4 40)",
                "11 - 1 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)"
            ],
            "Evaluation": [
                21.001,
                0.003,
                60.0,
                0.003,
                0.001,
                0.002,
                0.002,
                0.003,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 7.9",
                "1 <- 4.6",
                "2 <- 6.2",
                "3 <- 5.8",
                "4 <- 7.2",
                "5 <- 7.9",
                "6 <- 5.8",
                "7 <- 3.5",
                "8 <- 2.1",
                "9 <- 5.6"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (11 - 1) - 4 = 24",
                "11 - 1 = 10 (left: 4 10 4) || 10 / 4 = 2.5 (left: 2.5 4) || 4 - 2.5 = 1.5 (left: 1.5)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "4 + 1 = 5 (left: 5 4 11) || 11 - 5 = 6 (left: 4 6) || Possible next steps:",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 / 10 = 0.1 (left: 0.1)",
                "11 - 1 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: no valid numbers left)",
                "11 - 1 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "11 - 1 = 10 (left: 4 10 4) || 10 - 4 = 6 (left: 6 4) || 6 - 4 = 2 (left: 2)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                20.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.6",
                "1 <- 0.9",
                "2 <- 2.2",
                "3 <- 7.9",
                "4 <- 8.9",
                "5 <- 5.9",
                "6 <- 8.8",
                "7 <- 5.6",
                "8 <- 2.1",
                "9 <- 4.2"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 1 = 10 (left: 4 10 4) || 10 - 4 = 6 (left: 6 4) || 6 - 4 = 2 (left: 2)",
                "11 - 4 = 7 (left: 1 4  || 1 * 4 = 4 (left: 4)",
                "4 - 1 = 3 (left: 3 4 11) || 11 - 3 = 8 (left: 4 8)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 4 10 4) || 10 - 4 = 6 (left: 6 4)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 / 4 = 13.75 (left: 13.75)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 4 10 4) || 10 - 4 = 6 (left: 6 4) || 6 * 4 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "4 - 1 = 3 (left: 3 4 11) || 3 + 4 = 7 (left: 7 11)"
            ]
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Step 0": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10)",
                "9 / 3 = 3 (left: 2 3 ",
                "3 / 9 = 0.3333333333333333 (",
                "9 + 2 = 11 (left: 3 11 10)",
                "2 * 9 = 18 (left: 3 10 18)",
                "9 + 2 = 11 (left: 3 11 10)",
                "9 + 2 = 11 (left: 3 11 10)",
                "10 - 2 = 8 (left: 3 9 8)",
                "9 / 3 = 3 (left: 2 3 ",
                "2 + 3 = 5 (left: 5 9 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                3.0,
                3.0,
                2.001,
                3.0,
                0.002,
                41.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.9",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.9",
                "5 <- 0.9",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10)",
                "2 + 3 = 5 (left: 5 9 10) || 10 - 5 = 5 (left: 5 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "3 * 2 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14)",
                "2 + 3 = 5 (left: 5 9 10) || 10 / 5 = ",
                "2 * 9 = 18 (left: 3 18 10)",
                "10 - 2 = 8 (left: 3 8 9)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10) || 10 / 5 = 2"
            ],
            "Evaluation": [
                40.0,
                0.003,
                2.001,
                3.0,
                60.0,
                0.003,
                2.001,
                60.0,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 1.4",
                "2 <- 1.0",
                "3 <- 0.9",
                "4 <- 1.7",
                "5 <- 1.4",
                "6 <- 1.0",
                "7 <- 0.9",
                "8 <- 1.8",
                "9 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 14 24)",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10) || 10 / 4 = 2.5 (left: 2.5 10)",
                "2 + 3 = 5 (left: 5 9 10) || 9 * 5 = 45 (left: 10 45)",
                "10 - 2 = 8 (left: 3 8 9) || 8 - 3 = 5 (left: 5 9)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10) || 4 * 10 = 40 (left: 40)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14)",
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.002,
                1.002,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 2.7",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 2.7",
                "4 <- 2.8",
                "5 <- 1.4",
                "6 <- 2.8",
                "7 <- 1.4",
                "8 <- 1.7",
                "9 <- 2.5"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19) || 10 + 2 = 12 (left: 12 6)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19) || 5 * 19 = 95 (left: 95)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || Input: 24 4 140 1.4",
                "10 - 2 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 8 9)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: ((2 + 3) + 9) + 10 = 24"
            ]
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Step 0": {
            "steps": [
                "13 - 3 = 10 (left: 1 2 10)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13)",
                "3 * 2 = 6 (left: 1 6 13)",
                "3 * 2 = 6 (left: 1 6 13)",
                "1 + 2 = 3 (left: 3 3 13)",
                "1 + 2 = 3 (left: 3 3 13)",
                "13 - 3 = 10 (left: 1 2 10)",
                "13 - 1 = 12 (left: 2 3 12)",
                "13 - 1 = 12 (left: 2 3 12)"
            ],
            "Evaluation": [
                1.002,
                3.0,
                3.0,
                0.003,
                2.001,
                2.001,
                1.001,
                2.001,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.5",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 3 = 5 (left: 1 5 13)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13) || 13 / 3 = 4 (left: 4 13)",
                "1 + 2 = 3 (left: 3 3 13)",
                "2 * 3 = 6 (left: 1 6 13)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13)",
                "3 + 1 = 4 (left: 2 4 13)",
                "13 - 3 = 10 (left: 1 2 10)",
                "2 * 3 = 6 (left: 1 6 13)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                0.003,
                21.001,
                2.001,
                1.001,
                22.0,
                3.0,
                3.0,
                2.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 1.3",
                "9 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 3 = 10 (left: 1 2 ",
                "2 * 3 = 6 (left: 1 6 13)",
                "13 - 3 = 10 (left: 1 2 10) || 2 + 10 = 12 (left: 1 12)",
                "1 + 2 = 3 (left: 3 3 13)",
                "1 + 2 = 3 (left: 3 3 13) || 3 + 3 = 6 (left: 6 13)",
                "1 + 2 = 3 (left: 3 3 13) || 3 - 3 = 0 (left: 0 13)",
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 3 = 9 (left: 9 13)",
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)"
            ],
            "Evaluation": [
                1.002,
                20.002,
                0.002,
                0.001,
                2.001,
                2.001,
                0.001,
                0.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.4",
                "2 <- 0.0",
                "3 <- 0.7",
                "4 <- 1.6",
                "5 <- 1.3",
                "6 <- 0.2",
                "7 <- 1.4",
                "8 <- 0.4",
                "9 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)",
                "3 * 2 = 6 (left: 1 6 13) || 1 + 6 = 7 (left: 7 13)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20)",
                "13 - 3 = 10 (left: 1 2 10) || 1 + 2 = 3 (left: 3 10)",
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left:",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 3 = 9 (left:",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 3 = 9 (left: 9 13)",
                "2 * 3 = 6 (left: 1 6 13) || 1 + 6 = 7 (left: 7 13)",
                "3 * 2 = 6 (left: 1 6 13) || 6 * 13 = 78 (left: 1 78)",
                "13 - 3 = 10 (left: 1 2  || 1 * 2 = 2 (left: 2)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                60.0,
                0.002,
                1.001,
                0.003,
                0.003,
                0.0,
                1.001,
                0.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- 3.8",
                "3 <- 3.2",
                "4 <- 1.0",
                "5 <- 2.5",
                "6 <- 2.1",
                "7 <- 3.2",
                "8 <- 3.2",
                "9 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13) || 3 + 3 = 6 (left: 6 13)",
                "3 + 1 = 4 (left: 4 2 ",
                "3 * 2 = 6 (left: 1 6 13) || 6 * 13 = 78 (left: 1 78) || 1 + 78 = 79 (left: 79)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20)",
                "2 + 3 = 5 (left: 1 5 13) || 5 / 1 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 3 13) || 3 + 3 = 6 (left: 6 13) || 6 / 13 = 0.46 (left: 0.46)",
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "1 + 2 = 3 (left: 3 3 13) || 3 / 3 = 1 (left: 1 13)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.002,
                1.002,
                0.003,
                20.001,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 4.6",
                "2 <- 4.6",
                "3 <- 1.6",
                "4 <- 4.6",
                "5 <- 3.2",
                "6 <- 1.6",
                "7 <- 2.1",
                "8 <- 3.2",
                "9 <- 3.2"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 3 = 10 (left: 1 2  || 1 * 2 = 2 (left: 2)",
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || 0.5 * 2 = 1 (left: 1)",
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || 0.5 + 2 = 2.5 (left: 2.5)",
                "1 + 2 = 3 (left: 3 3 13) || Input: 5 6 7 8",
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || There is only one possible next step:",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 3 = 9 (left: 9 10)",
                "13 - 3 = 10 (left: 1 2  || Possible next steps:",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 * 1 = 20 (left: 20)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 3.2",
                "2 <- 1.8",
                "3 <- 3.2",
                "4 <- 1.3",
                "5 <- 3.2",
                "6 <- 0.0",
                "7 <- 3.2",
                "8 <- 3.2",
                "9 <- 1.6"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12) || 12 / 3 = 4 (left:",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 1 19)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 21)",
                "1 + 2 = 3 (left: 3 3 13) || Input: 4 5 6 7",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 1 = 9 (left: 2 9)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 * 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20)",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 3 = 9 (left: 9 13)"
            ],
            "Evaluation": [
                0.0,
                1.002,
                40.0,
                0.002,
                0.003,
                0.002,
                0.001,
                0.001,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 6.2",
                "2 <- 4.6",
                "3 <- 3.2",
                "4 <- 3.2",
                "5 <- 6.2",
                "6 <- 6.2",
                "7 <- 6.2",
                "8 <- 3.2",
                "9 <- 0.2"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || There is only one possible next step for the input 0.5: 0.5 + 0.5 = 1.",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || 0.5 * 0.5 = 0.25 (left: 0.25)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 1 19)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19 20)",
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.001,
                0.002,
                1.001,
                0.002,
                0.002,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 4.6",
                "5 <- 3.2",
                "6 <- 3.2",
                "7 <- 2.1",
                "8 <- 2.1",
                "9 <- 1.3"
            ]
        },
        "Step 8": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || 0.5 * 0.5 = 0.25",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "13 - 3 = 10 (left: 1 2  || 1 + 2 = 3 (left: 3) ",
                "13 - 3 = 10 (left: 1 2  || 1 * 2 = 2 (left: 2)",
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.001,
                0.003,
                60.0,
                0.003,
                0.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 3.2",
                "2 <- 8.5",
                "3 <- 8.5",
                "4 <- 8.5",
                "5 <- 8.5",
                "6 <- 8.5",
                "7 <- 8.5",
                "8 <- 8.5",
                "9 <- 3.2"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 3 = 10 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || There are no possible next steps with the input 0.5.",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 21)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || 1 + 20 = 21 (left: 20) ",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20)",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 1 20) || Input: 4 10 2",
                "13 - 3 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 / 1 = 20 (left: 20 20)"
            ]
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Step 0": {
            "steps": [
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "1 + 6 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 + 1 = 7 (left: 6 6 7)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "1 + 6 = 7 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 ",
                "6 - 1 = 5 (left: 5 6 "
            ],
            "Evaluation": [
                3.0,
                3.0,
                2.001,
                22.0,
                3.0,
                1.001,
                1.002,
                3.0,
                0.001,
                0.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.3",
                "7 <- INIT",
                "8 <- 0.3",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 1 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 ",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 ",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "1 * 6 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6) || Input: 3 9 5 1",
                "6 - 1 = 5 (left: 5 6 6)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                20.002,
                2.0,
                2.001,
                0.003,
                40.0,
                1.001,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 1.6",
                "2 <- 0.3",
                "3 <- 1.6",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 0.4",
                "9 <- 1.6"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 5 * 6 = 30 (left: 30)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 + 1 = 7 (left: 6 6 7) || 6 / 7 = 0.8571428571428571 (",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.0,
                0.003,
                2.001,
                0.002,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.6",
                "2 <- 1.2",
                "3 <- 1.6",
                "4 <- 2.5",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 1.2",
                "8 <- 1.9",
                "9 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 ",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6  || 6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 * 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 6 36)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6  || 6 / 6 = 1 (left: 1) ",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 5 6 6) || 5 - 6 = -1 (left: -1 6)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                1.001
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 3.8",
                "2 <- 0.1",
                "3 <- 3.8",
                "4 <- 1.6",
                "5 <- 3.8",
                "6 <- 1.2",
                "7 <- 0.3",
                "8 <- 1.6",
                "9 <- 2.5"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 3 + 5 = 8 (left: 7 8)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6  || 6 + 6 = 12 (left: 12)",
                "6 - 1 = 5 (left: 5 6 6) || 5 * 6 = 30 (left: 30)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.001,
                0.003,
                0.001,
                0.002,
                0.002,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 4.9",
                "4 <- 1.6",
                "5 <- 1.6",
                "6 <- 1.2",
                "7 <- 3.8",
                "8 <- 4.9",
                "9 <- 3.8"
            ]
        },
        "Step 5": {
            "steps": [
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 / 1 = 6 (left: 6 6  || 6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || Possible next steps:",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.002,
                0.0,
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                0.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 1.6",
                "2 <- 4.9",
                "3 <- 4.9",
                "4 <- 1.2",
                "5 <- 4.9",
                "6 <- 3.8",
                "7 <- 0.1",
                "8 <- 3.8",
                "9 <- 0.1"
            ]
        },
        "Step 6": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6)",
                "6 / 1 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined ",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || Input: 4 5 6 7"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                20.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 4.9",
                "2 <- 0.3",
                "3 <- 4.9",
                "4 <- 0.2",
                "5 <- 1.2",
                "6 <- 3.8",
                "7 <- 3.8",
                "8 <- 1.3",
                "9 <- 1.2"
            ]
        },
        "Step 7": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || Possible next steps:",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "1 + 6 = 7 (left: 6 6 7) || 7 + 6 = 13 (left: 6 13)",
                "6 / 1 = 6 (left: 6 6  || 6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "6 / 1 = 6 (left: 6 6 6) || 5 * 7 = 35 (left: 3 35)",
                "6 / 1 = 6 (left: 6 6  || 6 - 6 = 0 (left: 0) "
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.001,
                0.002,
                0.002,
                0.003,
                21.001,
                0.002,
                20.002
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 6.3",
                "2 <- 4.9",
                "3 <- 4.9",
                "4 <- 7.9",
                "5 <- 1.1",
                "6 <- 6.3",
                "7 <- 3.8",
                "8 <- 6.4",
                "9 <- 6.3"
            ]
        },
        "Step 8": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (left: 0 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (division by zero is undefined)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 0 * 6 = 0 (left: 6)",
                "6 / 1 = 6 (left: 6 6  || 6 + 6 = 12 (left: 12)",
                "6 - 1 = 5 (left: 5 6 6) || Input: 10 5 5",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 10 - 4 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 / 1 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36) || No possible next steps with the input of 36.",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 8.9",
                "1 <- 8.0",
                "2 <- 6.4",
                "3 <- 8.9",
                "4 <- 8.0",
                "5 <- 8.0",
                "6 <- 8.0",
                "7 <- 8.0",
                "8 <- 8.9",
                "9 <- 7.7"
            ]
        },
        "Step 9": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 0 * 6 = 0 (left: 0)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined ",
                "6 / 1 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36) || 36 is a prime number, so there are no possible arithmetic operations to perform on it.",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (division by zero is undefined)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 * 0 = 0 (left: 0)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 / 0 = undefined (left: 0 6) || Input: 5 9 3",
                "6 * 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 5 * 7 = 35 (left: 3 35) || 3 - 35 = -32 (left: -32)"
            ]
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}