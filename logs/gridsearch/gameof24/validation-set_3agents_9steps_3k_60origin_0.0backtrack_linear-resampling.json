{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11 -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11 -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 = 1"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 11 12"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 + 11 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 + 11 = 20 (left: 12 20) -> 20 - 12 = 8 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 * 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 11 -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 = 1"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 + 1 = 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 + 1 = 5 -> 4 / 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 + 1 = 5 -> 4 / 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 * 1 = 4 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number left, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There is only one number left, so there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There is only one number left, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 = 1"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4 -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 = 1"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 * 1 = 4 (left: 4 1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 * 1 = 4 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 1"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 * 1 = 4 (left: 4 1) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 1"
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19) -> 48 + 19 = 67 (left: 67)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 54"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55) -> 55 + 55 = 110",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 9 12"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12) -> 12 - 9 = 3 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12) -> 12 - 9 = 3 (left: 2 3 12) -> 12 - 3 = 9 (left: 2 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83) -> 17 * 6 = 102 (left: 102)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 + 10 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 + 10 = 25 (left: 11 25) -> 25 - 11 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 + 10 = 25 (left: 11 25) -> 25 - 11 = 14 (left: 14) -> Input cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 9 12"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12) -> 9 + 12 = 21 (left: 2 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12) -> 9 + 12 = 21 (left: 2 21) -> 2 + 21 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 9 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 - 1.83 = 9.17 (left: 9.17 19) -> 9.17 / 19 = 0.4826 (left: 0.4826)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 19"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 9 12"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12) -> 2 * 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left:  -> It seems like you haven't provided any input for me to work with. Could you please provide the numbers you'd like me to use in the next steps? -> 6 / 3 = 2 (left: 2 9 12) -> 2 * 9 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Input cannot be further manipulated."
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 = 2.2 (left: 2.2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 = 2.2 (left: 2.2 8) -> 2.2 * 8 = 17.6 (left: 17.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 = 2.2 (left: 2.2 8) -> 2.2 * 8 = 17.6 (left: 17.6) -> There are no possible next steps for the input 17.6 as it is a single number and not an equation with multiple numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.1818181818181819 - 2 = -0.8181818181818181"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819) -> 1.1818181818181819 - 2 = -0.8181818181818181 -> 1.1818181818181819 * 2 = 2.3636363636363638 (left: -0.8181818181818181 2.3636363636363638)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819) -> 1.1818181818181819 - 2 = -0.8181818181818181 -> 1.1818181818181819 * 2 = 2.3636363636363638 (left: -0.8181818181818181 2.3636363636363638) -> -0.8181818181818181 * 2.3636363636363638 = -1.9318181818181817 (left: -1.9318181818181817)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.14545454545454545 + 2 = 2.1454545454545456"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819) -> 1.1818181818181819 - 2 = -0.8181818181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.14545454545454545 + 2 = 2.1454545454545456"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 / 11 = 0.14545454545454545 (left: 0.14545454545454545) -> 0.14545454545454545 + 2 = 2.1454545454545456 -> 2 - 0.14545454545454545 = 1.8545454545454545 (left: 0.14545454545454545 1.8545454545454545)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 / 11 = 0.14545454545454545 (left: 0.14545454545454545) -> 0.14545454545454545 + 2 = 2.1454545454545456 -> 2 - 0.14545454545454545 = 1.8545454545454545 (left: 0.14545454545454545 1.8545454545454545) -> 0.14545454545454545 / 1.8545454545454545 = 0.07857142857142857 (left: 0.07857142857142857 1.8545454545454545)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 8 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 / 11 = 0.14545454545454545 (left: 0.14545454545454545)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 / 11 = 0.14545454545454545 (left: 0.14545454545454545) -> 0.14545454545454545 + 2 = 2.1454545454545456",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 17.6 as it is a single number and not an equation with multiple numbers to operate on."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 = 2.2 (left: 2.2 8) -> 2.2 * 8 = 17.6 (left: 17.6) -> There are no possible next steps for the input 17.6 as it is a single number and not an equation with multiple numbers to operate on. -> There are no possible next steps for the input 17.6 as it is a single number and not an equation with multiple numbers to operate on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 = 2.2 (left: 2.2 8) -> 2.2 * 8 = 17.6 (left: 17.6) -> There are no possible next steps for the input 17.6 as it is a single number and not an equation with multiple numbers to operate on. -> There are no possible next steps for the input 17.6 as it is a single number and not an equation with multiple numbers to operate on. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.1818181818181819 - 2 = -0.8181818181818181"
                }
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33333333333 (left: 1 3.33333333333) -> 3 -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no more possible next steps with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no more possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input given."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> Possible next steps: -> There are no possible next steps for the input given. -> There are no possible next steps for the input given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> Possible next steps: -> There are no possible next steps for the input given. -> There are no possible next steps for the input given. -> There are no possible next steps for the input given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 3 + 9 = 12 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> Possible next steps: -> There are no possible next steps for the input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 2.5."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5. -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5. -> There are no possible next steps with the input of 2.5. -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 = 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 = 4) -> There are no possible next steps for the input 4 = 4 as it is already a completed equation with no operators.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 = 4) -> There are no possible next steps for the input 4 = 4 as it is already a completed equation with no operators. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.75 10.75"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75) -> 1.75 / 0.25 = 7 (left: 7 3.75) -> 7 + 3.75 = 10.75 (left: 3.75 10.75) -> 10.75 / 3.75 = 2.86666666667 (left: 2.86666666667)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.75 + 2 = 3.75"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 / 1.75 = 1.14285714286 (left: 1.14285714286 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25 -> 1.75 / 2 = 0.875 (left: 0.875 -0.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 - 2 = -0.25 -> 1.75 / 2 = 0.875 (left: 0.875 -0.25) -> 0.875 * -0.25 = -0.21875 (left: -0.21875)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.75 + 2 = 3.75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.75 10.75"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75) -> 1.75 / 0.25 = 7 (left: 7 3.75) -> 7 + 3.75 = 10.75 (left: 3.75 10.75) -> 3.75 * 10.75 = 40.3125 (left: 40.3125)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 5 - 2 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.75 + 2 = 3.75"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75) -> 1.75 / 0.25 = 7 (left: 7 3.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75) -> 1.75 / 0.25 = 7 (left: 7 3.75) -> 7 + 3.75 = 10.75 (left: 3.75 10.75)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.75 10.75"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75) -> 1.75 / 0.25 = 7 (left: 7 3.75) -> 7 + 3.75 = 10.75 (left: 3.75 10.75) -> Input: 5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 - 1.75 = 0.25 (left: 0.25 1.75 3.75) -> 1.75 / 0.25 = 7 (left: 7 3.75) -> 7 + 3.75 = 10.75 (left: 3.75 10.75) -> Input: 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 / 15.16666666667 = 0.857142857",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 / 15.16666666667 = 0.857142857 -> There are no possible next steps for this input as it already represents a division calculation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 / 15.16666666667 = 0.857142857 -> There are no possible next steps for this input as it already represents a division calculation. -> There are no possible next steps for this input as it already represents a division calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 * 15.16666666667 = 197.16666666671 (left: 15.16666666667 197.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 * 15.16666666667 = 197.16666666671 (left: 15.16666666667 197. -> 197 + 15.16666666667 = 212.16666666667 (left: 15.16666666667)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 - 13 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 - 13 = -18 (left: -18) -> There are no possible next steps for the input -18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 + 15.16666666667 = 28.16666666667 (left: 28.16666666667)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 12 "
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 1 = 2.71 (left: 2.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 + 15.16666666667 = 28.16666666667 (left: 15.16666666667 28.16666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 + 15.16666666667 = 28.16666666667 (left: 15.16666666667 28.16666666667) -> 15.16666666667 + 28.16666666667 = 43.33333333334 (left: 28.16666666667 43.33333333334)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91) -> -91 + 2 = -89 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 15.16666666667 / 13 = 1.166666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 15.16666666667 / 13 = 1.166666666 -> 15.16666666667 - 13 = 2.16666666667 (left: 2.16666666667)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -18."
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 - 13 = -18 (left: -18) -> There are no possible next steps for the input -18. -> -18 - 2 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "13 15.16666666667"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 - 15.16666666667 = -2.16666666667 (left: -2.16666666667 15.16666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 - 15.16666666667 = -2.16666666667 (left: -2.16666666667 15.16666666667) -> -2.16666666667 / 15.16666666667 = -0.142857142857 (left: -0.142857142857) ",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "13 15.16666666667"
                }
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 / 2 = 11"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation. -> Please provide at least two numbers to perform an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations. -> - Multiply the numbers",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations. -> - Multiply the numbers -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 11 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue. -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue. -> 3 + 5 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 16 13"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.8571428571428572 (left: 1.857",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.8571428571428572 (left: 1.857 -> 1.857 + 2 = 3.857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.857 + 2 = 3.857"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.8571428571428572 (left: 1.857 -> 1.857 + 2 = 3.857 -> 1.857 * 2 = 3.714 (left: 3.714)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "35 + 2 = 37"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 + 2 = 37 -> 2 + 35 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3 -> 13 + 10 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 16 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 16 13"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "35 + 2 = 37"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 + 2 = 37 -> 35 / 2 = 17.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 + 22 = 35 (left: 35) -> 35 + 2 = 37 -> 35 / 2 = 17.5 -> 35 - 2 = 33 (left: 33 / 2 = 16.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> 75 - 2 = 73 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 16 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 16 13"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 * 22 = 286 (left: 286)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22) -> 13 * 22 = 286 (left: 286) -> 28 - 6 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.857 + 2 = 3.857"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.8571428571428572 (left: 1.857 -> 1.857 + 2 = 3.857 -> 2 * 1.857 = 3.714",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.8571428571428572 (left: 1.857 -> 1.857 + 2 = 3.857 -> 2 * 1.857 = 3.714 -> 3.714 + 2 = 5.714",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 / 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 / 6"
                }
            },
            "Step 4": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.666666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.666666666666666 -> There are no possible next steps with the input of 2.666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 2.666666666666666."
                }
            },
            "Step 7": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.666666666666666 -> There are no possible next steps with the input of 2.666666666666666. -> There are no possible next steps with the input of 2.666666666666666.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.666666666666666 -> There are no possible next steps with the input of 2.666666666666666. -> There are no possible next steps with the input of 2.666666666666666. -> There are no possible next steps with the input of 2.666666666666666.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 / 6"
                }
            },
            "Step 4": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10) -> 10 - 0 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number provided in the input (1.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714) -> There are no possible next steps for the input 2.85714.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 / 6"
                }
            },
            "Step 4": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number provided in the input (1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 6 -> 4 / 6 = 0.6666666666666666 -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10) -> 10 * 0 = 0 (left: 0 10)",
                "Pruning": null
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 + 8 = 26",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 + 8 = 26 -> 18 - 8 = 10 (left: 10 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 1 + 2 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 11 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12) -> 12 / 9.16667 = 1.31004 (left: 1.31004)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.31004"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12) -> 12 / 9.16667 = 1.31004 (left: 1.31004) -> 1.31004 + 2 = 3.31004",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 11 + 0 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 11 + 0 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 11 + 0 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 11 + 0 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-90 + 2 = -88"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 - 99 = -90 (left: -90) -> -90 + 2 = -88 -> -90 - 2 = -92 (left: -92)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 6"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-90 + 2 = -88"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 - 99 = -90 (left: -90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 - 99 = -90 (left: -90) -> -90 + 2 = -88",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as the input is a single number."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-90 + 2 = -88"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 5 * 16 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 5 * 16 = 80 (left: 80) -> 80 * 2 = 160 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 5 * 16 = 80 (left: 80) -> 80 * 2 = 160 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 4.333."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333. -> There are no possible next steps for the input 4.333 as it is not an integer value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333. -> There are no possible next steps for the input 4.333 as it is not an integer value. -> There are no possible next steps for the input 4.333 as it is not an integer value.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 * 2 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 * 2 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 * 2 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 4.333."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333. -> There are no possible next steps for the input 4.333 as it is not a whole number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333. -> There are no possible next steps for the input 4.333 as it is not a whole number. -> 4.333 is not a whole number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 - 13 = - -> 2 - 13 = -11 -> 2 + 13 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 2 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 5 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 5 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 5 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 4.333."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333. -> There are no possible next steps for the input 4.333 as it is not a whole number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 - 2 = 3 (left: 3 13) -> 13 / 3 = 4.333 (left: 4.333) -> There are no possible next steps for the input 4.333. -> There are no possible next steps for the input 4.333 as it is not a whole number. -> 4.333 is not a whole number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 10 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 10 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 8 + 16 = 24 (left: 8 16 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 8 + 16 = 24 (left: 8 16 24) -> 8 + 16 = 24 (left: 24 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 =  -> 10 - 4 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 10 - 4 =  -> 10 - 4 = 6 -> 10 - 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 8 + 8 + 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 12 + 25 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 12 + 25 = 37 (left: 37) -> 37 + 8 = 45 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 45 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1.361111111111111 1.2777777777777776"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111 -> 0.6388888888888888 * 2 = 1.2777777777777776 (left: -1.361111111111111 1.2777777777777776) -> -1.361111111111111 * 1.2777777777777776 = -1.74074074074074 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111 -> 0.6388888888888888 * 2 = 1.2777777777777776 (left: -1.361111111111111 1.2777777777777776) -> -1.361111111111111 * 1.2777777777777776 = -1.74074074074074 ( -> -1.361111111111111 + 1.2777777777777776 = -0.0833333333333334",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "11 12 36"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 45 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1.361111111111111 1.2777777777777776"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111 -> 0.6388888888888888 * 2 = 1.2777777777777776 (left: -1.361111111111111 1.2777777777777776) -> -1",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.6388888888888888 - 2 = -1.361111111111111"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111 -> 0.6388888888888888 + 2 = 2.6388888888888888 (left: -1.361111111111111 2.6388888888888888)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 45 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> There are no possible next steps for the input 45 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.6388888888888888 - 2 = -1.361111111111111"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111 -> 0.6388888888888888 * 2 = 1.2777777777777776 (left: -1.361111111111111 1.2777777777777776)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-1.361111111111111 1.2777777777777776"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 / 36 = 0.6388888888888888 (left: 0.6388888888888888) -> 0.6388888888888888 - 2 = -1.361111111111111 -> 0.6388888888888888 * 2 = 1.2777777777777776 (left: -1.361111111111111 1.2777777777777776) -> ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 45 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45 as it is a single number. -> 45 + 2 = 47",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 + 8 = 9.55555555556 (left: 8 9.55555555556)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9.55555555556"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 + 8 = 9.55555555556 (left: 8 9.55555555556) -> 8 + 9.55555555556 = 17.55555555556 (left: 17.55555555556)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps: -> - 8 / 7 = 1.14285714286 (left: 1.14285714286 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 - 9 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 - 9 = -7 (left: -7) -> 7 * (-7) = -49 (left: )",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9.55555555556"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 + 8 = 9.55555555556 (left: 8 9.55555555556) -> 8 - 9.55555555556 = -1.55555555556 (left: -1.55555555556 9.55555555556)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 + 8 = 9.55555555556 (left: 8 9.55555555556) -> 8 - 9.55555555556 = -1.55555555556 (left: -1.55555555556 9.55555555556) -> -1.55555555556 / 9.55555555556 = -0.162790697674 (left: -0.162790697674)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 + 2 = -100 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There is only one possible next step: 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9.55555555556"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 + 8 = 9.55555555556 (left: 8 9.55555555556) -> 8 - 9.55555555556 = -1.55555555556 (left: -1.55555555556 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 + 8 = 9.55555555556 (left: 8 9.55555555556) -> 8 - 9.55555555556 = -1.55555555556 (left: -1.55555555556 9. -> 9 / -1.55555555556 = -5.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 12 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 * 14 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 * 14 = 168 (left: 168) -> 1 + 68 = 69 (left: 68 69)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "68 69"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 * 14 = 168 (left: 168) -> 1 + 68 = 69 (left: 68 69) -> 68 + 69 = 137 (left: 137)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "68 69"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 * 14 = 168 (left: 168) -> 1 + 68 = 69 (left: 68 69) -> 68 * 69 = 4692 (left: 4692)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided. -> 3 - 1 = 2 (left: 2",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "68 69"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: -> 12 / 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "68 69"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 * 14 = 168 (left: 168) -> 1 + 68 = 69 (left: 68 69) -> 68 + 69 = 137 (left: 137)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 12 + 36 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 11 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 38 - 3 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 20"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 11 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 * 3 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 * 3 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 * 3 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 11 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23) -> 5 + 7 = 12 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 12 - 1.22 = 10.78 (left: 10.78)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 11 12"
                }
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There is only one possible next step for 240:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 4.8."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 - 20 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 - 20 = -8 (left: -8) -> -8 / 2 = -4 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.66666666667 12 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333 -> 12 - 1.66666666667 = 10.3333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 - 1.66666666667 = 10.3333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333 -> 12 - 1.66666666667 = 10.3333333333 -> 12 / 1.66666666667 = 7.19999999999",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 =  -> 12 - 1.66666666667 = 10.3333333333 -> 12 - 1.66666666667 = 10.3333333333 -> 12 / 1.66666666667 = 7.19999999999 -> 12 * 1.66666666667 = 19.99999999999 (left: 19.99999999999 7.19999999999)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 4 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 * 13.66666666667 = 164 (left: 164)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 * 13.66666666667 = 164 (left: 164) -> 1 + 6 + 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 4.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step for 240:"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There is only one possible next step for 240: -> 240 / 2 = 120",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There is only one possible next step for 240: -> 240 / 2 = 120 -> 240 / 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 4.8."
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 4"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> -4 * 4 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 5 9"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 1 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 1 = 9 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-4 4"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> -4 - 4 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-4 4"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> -4 * 4 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-4 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 4"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> -4 + 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "450 * 2 = 900"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 / 2 = 225 (left: 225 * 2 = 450)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 / 2 = 225 (left: 225 * 2 = 450) -> 2 - 225 = -223 (left: -",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "-4 4"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-4 4"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> -4 * 4 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "7 7"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4 -> 4 + 3 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "450 * 2 = 900"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4 -> 4 + 3 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 4"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> -4 + 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "7 7"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4 -> 4 + 3 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 7 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 7 - 3 = 4 ( -> 7 - 3 = 4 -> 4 + 3 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 7 49) -> 49 - 7 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "-4 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-4 4"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 4) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input: -> Please provide numbers for the input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Input: -> Please provide numbers for the input. -> It seems like you haven't provided any numbers for the input. Please provide the numbers so I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps: -> - 8 / 8 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide more than one number for possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps: -> - 8 / 8 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide more than one number for possible next steps. -> 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 / 2 = 33",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps: -> - 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> Possible next steps: -> - 8 / 8 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 3 + 5 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 3 + 5 = -> 5",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 13"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11) -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 + 8 = 23 (left: 8 23 1.875)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 23 1.875"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 + 8 = 23 (left: 8 23 1.875) -> 23 / 1.875 = 12.266666666666667 (left: 8 12.266666666666667",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 + 8 = 23 (left: 8 23 1.875) -> 23 / 1.875 = 12.266666666666667 (left: 8 12.266666666666667 -> 12.266666666",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 23 1.875"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 9 15"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 * 15 = 1080 (left: 1080)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 * 15 = 1080 (left: 1080) -> 10 + 8 + 0 = 18 (left: 1080)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 23 1.875"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 + 8 = 23 (left: 8 23 1.875) -> 1.875 * 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> No further steps can be taken with just one number as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 = 1.875 (left: 8 1.875)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 = 1.875 (left: 8 1.875) -> 8 + 1.875 = 9.875",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 = 1.875 (left: 8 1.875) -> 8 + 1.875 = 9.875 -> 8 * 1.875 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No further steps can be taken with just one number as input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 23 1.875"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 + 8 = 23 (left: 8 23 1.875) -> 8 + 23 = 31 (left: 1.875 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 / 8 =  -> 15 / 8 = 1.875 -> 15 + 8 = 23 (left: 8 23 1.875) -> 8 + 23 = 31 (left: 1.875 31) -> 31 / 1.875 = 16.5333 (left: 16.5333)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 23 1.875"
                }
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 - 3 = 9 (left: 9) -> There are no possible next steps for the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 9."
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 - 3 = 9 (left: 9) -> There are no possible next steps for the input 9. -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3. 108 * 2 = 216"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 108) -> 3. 108 * 2 = 216 -> 108 - 3 = 105 (left: 105 * 2 = 210)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 9."
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 - 3 = 9 (left: 9) -> There are no possible next steps for the input 9. -> There are no possible next steps for the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 - 3 = 9 (left: 9) -> There are no possible next steps for the input 9. -> There are no possible next steps for the input 9. -> 9 + 9 = 18 (left: 9 18)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 108) -> 3. 108 * 2 = 216",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3. 108 * 2 = 216"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 108) -> 3. 108 * 2 = 216 -> 3 * 108 = 324 (left: 324 2 216)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 108) -> 3. 108 * 2 = 216 -> 3 * 108 = 324 (left: 324 2 216) -> 324 / 2 = 162 (left: 162 216)",
                "Pruning": null
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> 10 * 15 = 150 (left: 5 150)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> 10 * 15 = 150 (left: 5 150) -> 150 - 5 = 145 (left: 145)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "57 58"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1 + 57 = 58 (left: 57 58) -> 57 + 58 = 115 (left: 115)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1 + 57 = 58 (left: 57 58)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "57 58"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1 + 57 = 58 (left: 57 58) -> 57 / 58 = 0.98275862069 (left: 0.98275862069)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 11 15"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 8 * 11 = 88 (left: 88 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "20 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 9 = 20 (left: 20 48) -> 20 - 48 = -28 (left: -28)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 9 = 20 (left: 20 48) -> 20 - 48 = -28 (left: -28) -> There are no possible next steps for the input -28 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> N/A",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 11 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 9 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.4666666666666667 as it is already a single value."
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "57 58"
                }
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There are no possible next steps for the input 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 9 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10) -> 10 / 9 = 1.111 (left: 1.111)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10) -> 10 / 9 = 1.111 (left: 1.111) -> 1.111 / 1 = 1.111 (left: 1.111 1.111)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 1.111"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10) -> 10 / 9 = 1.111 (left: 1.111) -> 1.111 / 1 = 1.111 (left: 1.111 1.111) -> 1.111 * 1.111 = 1.234321 (left: 1.234321)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 23."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There are no possible next steps for the input 23. -> There are no possible next steps for the input 23.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 9 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 - 1 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 - 1 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 - 1 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 1.111"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10) -> 10 / 9 = 1.111 (left: 1.111) -> 1.111 / 1 = 1.111 (left: 1.111 1.111) -> 1.111 - 1.111 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 23."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There are no possible next steps for the input 23. -> There are no possible next steps for the input 23.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 9 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 23."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 1.111"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10) -> 10 / 9 = 1.111 (left: 1.111) -> 1.111 / 1 = 1.111 (left: 1.111 1.111) -> 1.111 / 1.111 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 23."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There are no possible next steps for the input 23. -> There are no possible next steps for the input 23.",
                "Pruning": null
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps for the input 19.5 as it is a single number and not an equation."
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 19.5 as it is a single number and not an equation."
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation. -> There are no possible next steps for a single number input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation. -> There are no possible next steps for a single number input. -> Please input at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 13"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 / 3 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 / 3 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> 4.33 + 2 = 6.33",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 + 17 = 28"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 / 11 = 1.54545454545",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 17 / 11 = 1.54545454545 -> 17 + 11 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 13 15"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 130 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 13"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 / 3 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 / 3 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8) -> There are no valid next steps for the input -8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 + 17 = 28"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 11 * 17 = 187 (left: 187 28)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 + 17 = 28 -> 11 * 17 = 187 (left: 187 28) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 11 13"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 11 / 3 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Please input at least two numbers to find possible next steps."
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation. -> There are no possible next steps for a single number input. -> Please input at least two numbers to find possible next steps. -> Please input at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number and not an equation. -> There are no possible next steps for a single number input. -> Please input at least two numbers to find possible next steps. -> Please input at least two numbers to find possible next steps. -> Please input at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 / 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 * 6 = 66 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "72 / 2 = 36"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 72 / -> 72 / 2 = 36 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3.42857"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 / 7 = 3.42857 (left: 3.42857) -> 3.42857 + 2 = 5.42857",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 / 2 = 3.5 (left: 3.5 8) -> 8 / 3.5 = 2.2857 (left: 2.2857)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "70 + 2 = 72"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 72 /",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 72 / -> 72 / 2 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "72 / 2 = 36"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 72 / -> 72 / 2 = 36 -> 2 + 36 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "11 * 6 = 66 ("
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 * 6 = 66 ( -> 11 ^ 6 = 1771561 (left: 1771561 = 66)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "70 + 2 = 72"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 70 - 2 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 / 7 = 3.42857 (left: 3.42857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "72 / 2 = 36"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 72 / -> 72 / 2 = 36 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "72 / 2 = 36"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72 -> 72 / -> 72 / 2 = 36 -> 72 - 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "72 / 2 = 36"
                }
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12) -> 12 - 14.2857142857 =",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12) -> 12 - 14.2857142857 = -> 12 - 14.2857142857 = -2.2857142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8.57142857143"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 + 0.57142857143 = 8.57142857143 (left: 8.57142857143)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8.57142857143"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571 -> 8 / -0.571428571 = -14.000000003",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 8.57142857143"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-68.57142857144 / (-0.571428571"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571 -> 8 * -8.57142857143 = -68.57142857144 (left: -68.57142857144 -0.571428571) -> -68.57142857144 / (-0.571428571) = 120 -> -68.57142857144 - (-0.571428571) = -68 (left: -68)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 8.57142857143"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8.57142857143"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 * 8.57142857143 = 68.57142857144 (left: 8.57142857143 68.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 * 8.57142857143 = 68.57142857144 (left: 8.57142857143 68. -> 68. - 8.57142857143 = 59.42857142857 (left: 8.57142857143 59.428571428",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 * 8.57142857143 = 68.57142857144 (left: 8.57142857143 68. -> 68. - 8.57142857143 = 59.42857142857 (left: 8.57142857143 59.428571428 -> 8.57142857143 * 59.428571428 = 508 (left: 508)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8.57142857143"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 8.57142857143"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.57142857143 (left: -0.57142857143 8.57142857143)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.57142857143 (left: -0.57142857143 8.57142857143) -> -0.57142857143 * 8.57142857143 = -4.9 (left: -4.9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 - 14.2857142857 = -2.2857142857"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8.57142857143"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571 -> 8 * -8.57142857143 = -68.57142857144 (left: -68.57142857144 -0.571428571)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571 -> 8 * -8.57142857143 = -68.57142857144 (left: -68.57142857144 -0.571428571) -> -68.57142857144 / (-0.571428571) = 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 8.57142857143"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 + 8.57142857143 = 16.57142857143 (left: 16.57142857143)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 / -0.571428571 = -14.000000003"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 + 1.42857142857 = 11.428571428 -> 10 - 1.42857142857 = 8 -> 10 - 1.42857142857 = 8.57142857143 (left: 8 8.57142857143) -> 8 - 8.57142857143 = -0.571428571 -> 8 / -0.571428571 = -14.000000003 -> 8 - (-0.571428571) = 8.571428571 (left: 8.571428571 -14.000000003)",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 6 + 11 = 17 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 6 + 11 = 17 (left: -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 6 + 11 = 17 (left: -> 6 + 11 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 2.125)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps because there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "110 - 2 = 108"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 110 * 2 = 220 (left: 220)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "110 - 2 = 108"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 110 / 2 = 55 (left: 55 108)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 1 + 5 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "110 - 2 = 108"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 -> 108 * 2 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "25 + 25 = 50"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25) -> 25 + 25 = 50 -> 10 / 5 = 2 (left:",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90) -> There are no possible next steps with the input 90.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.5 + 8 = 9.5"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 8 / 1",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 8 / 1 -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 90."
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90) -> There are no possible next steps with the input 90. -> There are no possible next steps with the input 90.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.19 9.5"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.19 (left: 0.19 9.5) -> 0.19 * 9.5 = 1.805 (left: 1.805)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "42 13"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13) -> 42 + 13 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 90."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.5 + 8 = 9.5"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.5 + 8 = 9.5"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 9.5 + 1.5 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 9.5 + 1.5 = 11 (left: 8 11) -> 8 / 11 \u2248 0.727 (left: 0.727)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "42 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.19 9.5"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.19 (left: 0.19 9.5) -> 9.5 / 0.19 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 13"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.19 9.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 13"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13) -> 42 * 13 = 546 (left: 546)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "42 13"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13 -> 7 * 6 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.5 + 8 = 9.5"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.19 (left: 0.19 9.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.19 9.5"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.19 (left: 0.19 9.5) -> 9.5 - 0.19 = 9.31 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 -> 1.5 / 8 = 0.19 (left: 0.19 9.5) -> 9.5 - 0.19 = 9.31 (left: -> 9.5",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 90."
                }
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.6818181818 37"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 37 * 0.6818181818 = 25.0909090924 (left: 25.0909090924)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 9 22"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 - 6 = 3 (left: 3 9 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 - 6 = 3 (left: 3 9 22) -> 22 / 3 = 7.33 (left: 7.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.45454545455 4.9090909091"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 * 2 = 4.9090909091 -> 2.45454545455 - 2 = 0.45454545455 (left: 0.45454545455 4.9090909091) -> 4.9090909091 / 0.45454545455 = 10.8 (left: 10.8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "7.33"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 - 6 = 3 (left: 3 9 22) -> 22 / 3 = 7.33 (left: 7.33) -> There are no possible next steps for the input 7.33 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 * 2 = 4.9090909091",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.6818181818 37"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 0.6818181818 / 37 = 0.0184290247 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 0.6818181818 / 37 = 0.0184290247 ( -> 0.6818181818 + 37 = 37.6818181818 (left: 37.6818181818)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "42 76"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> 7 * 6 = 42 (left: 42 76)  -> 42 - 76 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.6818181818 37"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.45454545455 4.9090909091"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 * 2 = 4.9090909091 -> 2.45454545455 - 2 = 0.45454545455 (left: 0.45454545455 4.9090909091) -> 0.45454545455 + 4.9090909091 = 5.36363636365 (left: 5.36363636365)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.6818181818 37"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 0.6818181818 + 37 = 37.6818181818 (left: 37.6818181818)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.45454545455 4.9090909091"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76) -> 7 * 6 = 42 (left: 42 76) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.6818181818 37"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 37 - 0.6818181818 = 36.3181818182 (left: 36.318181818",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.6818181818 37"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 0.6818181818 * 37 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2.45454545455 * 2 = 4.9090909091"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 * 2 = 4.9090909091 -> 2.45454545455 - 2 = 0.45454545455 (left: 0.45454545455 4.9090909091)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.45454545455 4.9090909091"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 * 2 = 4.9090909091 -> 2.45454545455 - 2 = 0.45454545455 (left: 0.45454545455 4.9090909091) -> 4.9090909091 / 0.45454545455 = 10.8 (left: 10.8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.6818181818 37"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818 (left: 0.6818181818 37) -> 0.6818181818 / 37 = 0.018429461",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21) -> 21 / 18 = 1.1667 (left: 1.1667)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 135 * 2 = 270 (left: 108 270)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no more possible next steps for the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no more possible next steps for the given input. -> There are no more possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 + 18 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 + 18 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 + 18 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "No possible next steps with the input 12."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12. -> There are no possible next steps with the input 12.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12. -> There are no possible next steps with the input 12. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined."
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined. -> I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined. -> I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further. -> I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined. -> I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further. -> I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further. -> I'm sorry but without a valid set of numbers, I am unable to provide possible next steps. Please provide a set of numbers so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 6 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 - 2 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 - 2 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "73"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 * 6 = 72 (left: 1 72) -> 1 + 72 = 73 (left: 73) -> 73 + 2 = 75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 * 6 = 72 (left: 1 72) -> 1 + 72 = 73 (left: 73) -> 73 + 2 = 75 -> 73 / 2 = 36.5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "No possible next steps with the input 12."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 * 6 = 72 (left: 1 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 * 6 = 72 (left: 1 72) -> 1 + 72 = 73 (left: 73)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "73"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 * 6 = 72 (left: 1 72) -> 1 + 72 = 73 (left: 73) -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No possible next steps with the input 12."
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12. -> 12 - 8 = 4 (left: 4 8 14)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11) -> No possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 ( -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps with the input 11."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7 -> 1 + 7 = 8 (left: 6 8) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7 -> 1 + 7 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps with the input 11."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7 -> 1 + 7 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11) -> No possible next steps with the input 11. -> No possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11) -> No possible next steps with the input 11. -> No possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 5 * 6 = 30 (left: 2 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 5 * 6 = 30 (left: 2 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps with the input 11."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7 -> 1 + 7 = 8 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11) -> No possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There is only one possible next step: 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the number 32."
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32. -> 32 / 2 = 16",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32. -> 32 / 2 = 16 -> 16 - 16 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible operations that can be performed with only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the number 32."
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32. -> 32 - 4 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the number 32."
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6) -> 2 + 6 = 8 (left: 8) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6) -> 2 + 6 = 8 (left: 8)  -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There is only one possible next step: 16 / 2 = 8"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There is only one possible next step: 16 / 2 = 8 -> 8 - 2 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There is only one possible next step: 16 / 2 = 8 -> 8 - 2 = 6 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> Input: 4 7 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> Input: 4 7 9 -> 7 - 4 = 3 (left: 3 9)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333) -> 1.33333333333 - 1.33333333333 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers for which you want to find the possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers for which you want to find the possible next steps. -> It seems like the input is missing. Please provide the numbers for which you want to find the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 4 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 4 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 4 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 8 / 7 = 1.14 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as there are no more numbers given in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps: -> - 14 - ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps: -> - 14 -  -> -14 + 14 = 0 (left: -)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there are no more numbers given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> Input: 5 10 15 -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> Input: 5 10 15 -> 5 + 10 = 15 (left: 15 15) -> 15 + 15 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there are no more numbers given in the input."
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there are no more numbers given in the input. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input more numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Provide another number to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Provide another number to perform operations. -> 7 / 2 = 3.5 (left: 3.5 8 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 2 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next step.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next step. -> - Subtract one number from the other",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 + 2 = 9 (left: 9) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 + 2 = 9 (left: 9) -> Input: 3 5 7 -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 + 36 = 146 (left: 146)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 + 36 = 146 (left: 146) -> 4 + 6 = 10 (left: 1 0)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 + 36 = 146 (left: 146) -> 4 + 6 = 10 (left: 1 0) -> 1 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 20 3"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 20 / 5 = 4 (left: 4 3)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 36"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 20 3"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 20 / 5 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 20 / 5 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2.25 10 11"
                }
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 2.25 + 10 = 12.25 (left: 11 12.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 + 36 = 146 (left: 146) -> 4 + 6 = 10 (left: 1 0) -> 1 + 0 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 20 3"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 20 - 5 = 15 (left: 15 3)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 * 36 = 3960 (left: 3960)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 * 36 = 3960 (left: 3960) -> 39 + 60 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 20 3"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 + 36 = 146 (left: 146) -> 4 + 6 = 10 (left: 1 0) -> 1 + 0 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "130 + 2 = 132"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132 -> 130 / 2 = 65 (left: 65 + 2 = 67)",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 83)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 83) -> 83 - 7 = 76 (left: 76)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 7 83) -> 83 - 7 = 76 (left: 76) -> 76 / 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 9 * 90 = 810 (left: 810)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 * 90 = 6930 (left: 6930)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 9 * 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "56"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8. -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 90 - 9 = 81 (left: 9 81)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 90 - 9 = 81 (left: 9 81) -> 81 - 9 = 72 (left: 9 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 90 - 9 = 81 (left: 9 81) -> 81 - 9 = 72 (left: 9 72) -> 72 / 9 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 90"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6930"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 * 90 = 6930 (left: 6930) -> 30 + 6 = 36 (left: 36 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 * 90 = 6930 (left: 6930) -> 30 + 6 = 36 (left: 36 0) -> 36 + 0 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9 90"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 - 11 = 1.857 (left: 1.857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 - 11 = 1.857 (left: 1.857) -> 1.857 + 2 = 3.857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 + 8 = 9 (left: 9 90) -> 90 / 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8. -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "56"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8. -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input 56.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8.18 (left: 7 8. -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input 56. -> There are no possible next steps with the input 56.",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 - 9 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 4.08163265306)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input \"6.4\" as it is a single number and not an equation."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4. (left: 2.85714285714 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4. (left: 2.85714285714 4 -> 4 / 2.85714285714 = 1.399999999996 (left: 1.399999999996)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 5 7"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 7"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4) -> There are no possible next steps with the input \"6.4\" as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 7"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7) -> 7 + 0 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7) -> 7 + 0 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 / 4.67 = 0.64 (left: 0.64)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 9 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left: -> 3 * 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left: -> 3 * 3 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left: -> 3 * 3 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left: -> 3 * 3 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps. -> - Dividing the fourth number by the first number: 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 / 5 = 1.8 (left: 1.8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 / 5 = 1.8 (left: 1.8 9) -> 1.8 + 9 = 10.8 (left: 10.8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.8888888888888888 * 2 = 1.7777777777777776"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left: -> 3 * 3 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 6 - 3 = 3 (left: -> 3 * 3 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 9 / 4 = 2.25 (left: 2.25 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 9 / 4 = 2.25 (left: 2.25 9 9) -> 9 - 2.25 = 6.75 (left: 6.75 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 9 / 4 = 2.25 (left: 2.25 9 9) -> 9 - 2.25 = 6.75 (left: 6.75 9) -> 6.75 + 9 = 15.75 (left: 15.75)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.8888888888888888 * 2 = 1.7777777777777776"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.8888888888888888 * 2 = 1.7777777777777776"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776 -> 0.8888888888888888 / 2 = 0.4444444444444444 (left: 0.4444444444444444 2 1.7777777777777776)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776 -> 0.8888888888888888 / 2 = 0.4444444444444444 (left: 0.4444444444444444 2 1.7777777777777776) -> 2 * 1.7777777777777776 = 3.5555555555555552 (left: 0.4444444444444444 3.5555555555555552)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.1875."
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875. -> There are no possible next steps for the input 0.1875.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875. -> There are no possible next steps for the input 0.1875. -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 20"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 2"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 - 6 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4) -> 4 / 2 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14) -> No possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for 0.875."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875 as it is already a decimal number and not an integer.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875 as it is already a decimal number and not an integer. -> There are no possible next steps for 0.875 as it is already a decimal number and not an integer.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 2 - 14 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 2 - 14 = -12 (left: -12) -> -12 + 8 = -4 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for 0.875."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for 0.875."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps for the number 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for 0.875."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875. -> There are no possible next steps for 0.875.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "None, as there is only one number."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "None, as there is only one number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input 21."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "None, as there is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "None, as there is only one number."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2 -> There are no possible next steps since the equation is already simplified to its final form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2 -> There are no possible next steps since the equation is already simplified to its final form. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> 1.5 / 8 = 0.1875",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 / 10 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 / 10 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 - 2.5 = 7.5 (left: 7.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 - 2.5 = 7.5 (left: 7.5 10) -> 1 + 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> 1.5 / 8 = 0.1875",
                "Pruning": null
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 24"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24) -> 117 - 24 = 93 (left: 93)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24) -> 117 - 24 = 93 (left: 93) -> 9 + 3 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 + 3 = 12"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24) -> 117 - 24 = 93 (left: 93) -> 9 + 3 = 12 -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 9 * 13 = 117 (left: 117 24) -> 117 - 24 = 93 (left: 93) -> 9 + 3 = 12 -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 24"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 / 13 = 1.85 (left: 1.85 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 / 13 = 1.85 (left: 1.85  -> 1.85 * 8 = 14.8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 / 13 = 1.85 (left: 1.85  -> 1.85 * 8 = 14.8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 = 11 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 = 11 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> 99 + 99 = 198",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11) -> Input: 5 9 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> Input: 5 9 3 -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> Input: 5 9 3 -> 5 + 9 = 14 (left: 3 14) -> 3 + 14 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 * 2 = 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 * 2 = 22"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 + 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20) -> 20 - 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 * 2 = 66",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 * 2 = 66 -> 33 + 2 = 35 (left: 35 * 2 = 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 * 2 = 22"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 + 2 = 13 (left: 13 2 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 + 2 = 13 (left: 13 2 22) -> 22 - 2 = ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "35 * 2 = 70"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 * 2 = 66 -> 33 + 2 = 35 (left: 35 * 2 = 70) -> 70 / 2 = 35 (left: 35 70)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 * 2 = 66 -> 33 + 2 = 35 (left: 35 * 2 = 70) -> 70 / 2 = 35 (left: 35 70) -> 70 - 35 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression."
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression. -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression. -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression. -> Invalid input. Please enter a valid mathematical expression.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression. -> There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression. -> Invalid input. Please enter a valid mathematical expression. -> Please enter a valid mathematical expression using numbers and operators (+, -, *, /).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20.076923076923077 194.76923076923077"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077) -> 194.76923076923077 - 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077) -> 194.76923076923077 - 20 -> 194.76923076923077 - 20 = 174.76923076923077",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 13 - 1.33 = 11.67 (left: 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 13 - 1.33 = 11.67 (left: 11.67) -> 11.67 + 2 = 13.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.6923076923076925 * 3 = 11.076923076923077"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20.076923076923077 194.76923076923077"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077) -> 20.076923076923077 + 194.76923076923077 = 214.84615384615384 (left: 194.76923076923077 214.84615384615384)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077) -> 20.076923076923077 + 194.76923076923077 = 214.84615384615384 (left: 194.76923076923077 214.84615384615384) -> 194.76923076923077 - 214.84615384615384 = -20.07692307692307 (left: -20.07692307692307 214.84615384615384)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.6923076923076925 * 3 = 11.076923076923077"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 3 11.076923076923077)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 3 11.076923076923077) -> 6.6923076923076925 + 3 = 9.6923076923076925 (left: 9.6923076923076925 11.076923076923077)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 3 11.076923076923077) -> 6.6923076923076925 + 3 = 9.6923076923076925 (left: 9.6923076923076925 11.076923076923077) -> 9.6923076923076925 + 11.076923076923077 = 20.76923076923077 (left: 20.76923076923077)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input \"14.33\" as it is not a valid mathematical expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "20.076923076923077 194.76923076923077"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077) -> 20.076923076923077 + 194.76923076923077 = 214.84615384615384 (left: 194.76923076923077 214.84615384615384)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.6923076923076925 (left: 6.6923076923076925 * 3 = 20.076923076923077) -> 6.6923076923076925 + 3 = 9.692307692307692 (left: 9.692307692307692 20.076923076923077) -> 9.692307692307692 * 20.076923076923077 = 194.76923076923077 (left: 20.076923076923077 194.76923076923077) -> 20.076923076923077 + 194.76923076923077 = 214.84615384615384 (left: 194.76923076923077 214.84615384615384) -> 194.76923076923077 *",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: ) -> There are no possible next steps as the input is incomplete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> 3 / 7 = 0.428571 (left: 0.428571 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> 3 / 7 = 0.428571 (left: 0.428571 7) -> 7 * 0.428571 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 3 12) -> Input: 5 10 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 3 12) -> Input: 5 10 20 -> 20 - 5 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 15"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 3 12) -> Input: 5 10 20 -> 20 - 5 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No further steps can be taken as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one possible next step with the input of 5:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step with the input of 5:"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one possible next step with the input of 5: -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "No possible next steps for the input 1."
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 1."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "No possible next steps for the input 1."
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the equation is already solved."
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> There are no possible next steps as the equation is already solved. -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> There are no possible next steps as the equation is already solved. -> There are no possible next steps as the equation is already solved. -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 1."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 308031,
        "output_tokens": 117793.94999999992,
        "total_cost": 0.3307064249999999
    }
}