{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                }
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> None.",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63) -> 63 * 8 = 504 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "87 + 2 = 89"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> None",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25) -> 50 + 8 = 58 (left: 8 58)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> 87 + 2 = 89",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25) -> There doesn't seem to be any obvious next step with the input 6.25. Could you provide more context or clarify the desired operation?",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 - 2 = 0 (left: 22 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25) -> 6.25 + 2 = 8.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> 900 * 8 = 7200 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "87 + 2 = 89"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63) -> -63 + 2 = -61",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25) -> 6.25 * 8 = 50 (left: 8 50)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> 900 + 2 = 902 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> 87 * 8 = 696 (left: 696)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25) -> 6 * 2.25 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input of -63."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63) -> There are no possible next steps with the input of -63.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> There are no possible next steps with the input \"87\" as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 - 2 = 20 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 75"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 20 + 5 = 25 (left: 25 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> 8 + 7 = 15",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 -> 12 / 9 = 1.3333 (left: 1.3333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 5 6) -> 3 + 5 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22. -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "87 + 2 = 89"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> There are no possible next steps with the input 87.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 / 75 = 0.16 (left: 0.16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 / 75 = 0.16 (left: 0.16) -> There are no possible next steps with the input 0.16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 75"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63) -> There are no possible next steps with the given input of -63.",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19) -> 66 * 19 = 1254 (left: 1254)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 11 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 - 6 = 5 (left: 5 11 90) -> 11 - 5 = 6 (left: 6 90)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 - 6 = 5 (left: 5 11 90) -> 11 - 5 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.8333",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.8333 -> 11 / 6 = 1.8333 (left: 1.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 - 6 = 5 (left: 5 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 + 6 = 19 (left: 19 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 + 6 = 19 (left: 19 19) -> 19 / 19 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 11 19) -> 11 / 1.83 = 6.01 (left: 6.01 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 19 - 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 19 - 6 -> 19 - 6 = 13",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 15 / 5 = 3 (left: ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 15 / 5 = 3 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 6 + 11 = 17 (left: 17 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "6 13 19"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 * 6 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 * 6 = 78 (left: 78) -> 7 - 8 = -1 (left: -1)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 110 - 54 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 6 + 13 = 19 (left: 19) -> 19 * 8 = 152 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 / 6 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: (9 + 21) - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 + 6 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 + 6 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 + 6 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 6 9 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 6 9  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 * 6 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 * 6 = 78 (left: 78) -> There are no possible next steps for the input 78 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 / 11 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 11 = -> 10 / 11 = 0.9090909090909091",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 11 = 79 (left: 6 79)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 11 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 - 6 = 5 (left: 5 11 90) -> 11 + 5 = 16 (left: 16 90)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 - 6 = 5 (left: 5 11 90) -> 11 + 5 = 16 (left: 16 90) -> 90 / 16 = 5.625 (left: 5.625)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 10 - 4 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 3 + 9 = 12 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 3 + 9 = 12 ( -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 * 2 = 2.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 2 5 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 4) + 5) + 11 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 * 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) ->  -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 4) + 5) + 11 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "5 * 11 = 55 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> Input: 3.5 18 56 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 11 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 11 40) -> 40 / 11 = 3.64 (left: 3.64)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 4) + 5) + 11 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 4) + 5) + 11 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> No next steps possible as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 4) + 5) + 11 = 24"
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 - 15 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 - 15 = -13 (left: -13) -> -13 - 8 = -21 (left: -21)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 / 2 = 7.5 (left:"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There is only one possible next step: 8 + 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 * 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 3 + 6 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 - 15 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 - 15 = -13 (left: -13) -> There are no possible next steps with the input of -13.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left:",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 * 17 = 144.5 (left: 144.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 + 15 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 + 15 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 10 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 * 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 * 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8.5 17"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 / 15 = 1 (left: 1 2 7.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 / 15 = 1 (left: 1 2 7.5) -> 1 + 2 = 3 (left: 3 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 + 17 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8.5 17"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 / 1 = 2 (left: 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 / 1 = 2 (left: 2 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 10 * 110 = 1100 (left: 1100)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8.5 17"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 + 17 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8.5 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> Input: 3 6 9 -> Input: 4 5 6 7",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> There are no possible next steps since the equation has been solved by dividing 15 by 2 to get 7.5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> There are no possible next steps since the equation has been solved by dividing 15 by 2 to get 7.5. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)  -> 10 + 8 = 18 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 * 2 = 0.2 (left: 0.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 8.5 * 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 10 / 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 17 - 8.5 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 17 - 8.5 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8.5 17"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8.5 17"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 17 - 8.5 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8.5 17"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 + 2 = 17 (left: 2 7.5 17) -> 17 / 2 = 8.5 (left: 8.5 17) -> 17 - 8.5 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 3 3"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6) -> There are no possible next steps with the input of 1.6. Can you provide more numbers for me to work with?",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 / 2 = 1.5 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 / 2 = 1.5 ( -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 2 3"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4 2.5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 - 2 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 - 2 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 - 2 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 - 2 = 1 (left: 1 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 6 + 3 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Please provide at least two numbers to generate possible next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 2 5"
                }
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There is only one number given, so there are no possible next steps. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6) -> There are no possible next steps with the input 1.6.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 * 13 = 78 (left: 13 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 * 13 = 78 (left: 13  -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 / 13 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 / 13 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 7"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14 -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 + 6 = 19 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 13 - 18 = -5 (left: -5 13) -> -5 - 13 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 + 13 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 + 13 = 31 (left: 31) -> There is only one number in the input, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "18 / 13 = 1 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 13 - 18 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 13 - 18 = -5 (left: -5) -> There are no possible next steps with the input of -5 as it does not match any of the previous operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 + 6 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 6 = 18 (left: 13 13 18) -> 18 + 13 = 31 (left: 13 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left:",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 13 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 13 25) -> 13 * 6 = 78 (left: 78 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18 / 13 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 + 13 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 + 13 = 31 (left: 31) -> There are no possible next steps for the number 31.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 12 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 * 13 = 234 (left: 234) -> 4 * 3 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 10 * 36 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 60 - 6 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)  -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "6 1"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no valid operations that can be performed with the numbers provided in the input \"22\"."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 60 / 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input \"22\".",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input \"22\". -> There are no valid operations that can be performed with the numbers provided in the input \"22\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no valid operations that can be performed with the numbers provided in the input \"22\"."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 ( -> 10 * 6 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 2 * 3 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 2 * 3 = 6 (left: 6 10) -> 4 + 7 = 11 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 - 2 = 8 (left: 8 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 - 2 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 10) -> 9 - 3 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 (left: 2)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "22"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no valid operations that can be performed with the numbers provided in the input \"22\"."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 10) -> 9 / 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 3 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 9 - 6 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 8 / 6 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no valid operations that can be performed with the numbers provided in the input \"22\"."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) ->  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "22"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "6 1"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 + 8 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) -> There are no possible next steps with the input of 15 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "32 11"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 / 11 = 2.909 (left: 2.909)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 / 11 = 2.909 (left: 2.909) -> There are no possible next steps with the input 2.909 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 32 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.1428571428571428 / 1 = 1.1428571428571428"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 32"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 8 -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 12 - 8 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 8 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 8 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps as there are no other numbers provided to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 12) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 56 - 11 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 3 * 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 32"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 32"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 8 40)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 32 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 32"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 5 + 10 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 32"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> Input: 5 3",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428) -> 1.1428571428571428 / 1 = 1.1428571428571428",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 32"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 2.909 as it is already a single number."
                }
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n3 * 5 = 15 (left: 15 8)\n15 - 8 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 5 = 10 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 + 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 5) - 7) * 3 +",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * ((8 - 9) * 9) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + 5) - 3 + 1 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> .",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) - 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n6 - 6 = 0 (left: 0 48)\n0 + 48 = 48 (left: 48)\nAnswer: ((3 + 3) * 8) + 6 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 * 3 = 27 (left: 8 27)\n27 - 8 = 19 (left: 19)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n3 * 4 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 8) / (3 * 4)) * 2 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((6 * 3) + (9 - 7)) + 4 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 - ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n20 / 6 = 3.33 (left: 3 3.33)\n3 + 3.33 = 6.33 (left: 6.33)\n6.33 * 24 \u2248 24 (left: 24)\nAnswer: ((4 * 5) / 6) * 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> All the inputs have been successfully calculated to obtain 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> .",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + (3 + 8) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 13"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps for the input 14.33 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) + (8 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Overall, there are multiple ways to obtain 24 using the given numbers and basic arithmetic operations.",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n18 / 2 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 8\nSteps:\n3 + 8 = 11 (left: 3 11 8)\n3 * 8 = 24 (left: 11 24)\nAnswer: (3 + 8) * 3 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n3 * 3 = 9 (left: 6 9)\n9 * 8 = 72 (left: 72)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> There are multiple ways to obtain 24 using the given numbers.",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 + 4 = 17 (left: 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 13"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33) -> There are no possible next steps for the input 14.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps with the input of 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n3 + 8 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 / 11 = 12 (left: 12)\n12 * 3 = 36 (left: 36)\n36 / 9 = 4 (left: 4)\n4 * ",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 18 8)\n18 + 8 = 26 (left: 26)\nAnswer: (3 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 4 + 9 = 13 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> All these expressions are valid ways to obtain 24 using the numbers provided.",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (8 + 6) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4 6 "
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 3 = 6 (left: 4 5 6)\n6 * 4 = 24 (left: 5 24)\n24 - 5 = 19 (left: 19)\nAnswer: (3 + 3) * 4 - 5 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 10 + 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 10 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 14.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 7 10) -> 4 * 7 = 28 (left: 10 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.1667 (left: 1.1667 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 7) -> 5 * 7 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4  -> 4 / 8 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 - 11 = 0 (left: 6 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18) ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> There are no more possible next steps as we have reached the final result of 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps as the equation is already solved."
                }
            },
            "Step 7": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved. -> Equation is already solved. No further steps needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved. -> Equation is already solved. No further steps needed. -> Equation is already solved. No further steps needed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 20.1663 - 12 = 8.1663 (left: 8.1663 20.1663)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 - 12.83333 = -0.83333 (left: -0.83333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps as the equation is already solved."
                }
            },
            "Step 7": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> None, as there are no other numbers to combine or operate on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> None, as there are no other numbers to combine or operate on. -> There are no more numbers to combine or operate on. The final result is 8 8 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 12.83333"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "18"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.17 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12) -> 9.17 + 12 = 21.17 (left: 21.17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12) -> 9.17 + 12 = 21.17 (left: 21.17) -> There are no possible next steps with the input 21.17.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12) -> 12 + 1.83 = 13.83 (left: 11",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps as the equation is already solved."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 20.16663 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 20.16663 12) -> 20.16663 / 12 = 1.6805525 (left: 1.6805525)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8.1663 20.1663"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 20.1663 - 12 = 8.1663 (left: 8.1663 20.1663) -> 8.1663 + 20.1663 = 28.3326 (left: 20.1663 28.3326)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 20.1663 - 12 = 8.1663 (left: 8.1663 20.1663) -> 8.1663 + 20.1663 = 28.3326 (left: 20.1663 28.3326) -> 28.3326 - 20.1663 = 8.1663 (left: 8.1663)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps as the equation is already solved."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12 = 1 (left: 1 12.83333)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 = 10.16667 (left: 10.16667 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 = 10.16667 (left: 10.16667 12) -> 10.16667 - 12 = -1.83333 (left: -1.83333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0) -> There are no possible next steps with an input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 = 10.16667 (left: 10.16667 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 = 10.16667 (left: 10.16667  -> There are no possible next steps for the number 10.16667 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1) -> 1.83333 + 1 = 2.83333 (left: 2.83333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 - 2 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 - 2 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> Possible -> - s - s = 0 (left: P o sible)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 + 8 = 26 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 + 8 = 26 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps as the equation is already solved."
                }
            },
            "Step 7": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 11 = 0 (left: 6 12  -> 6 + 12 = 18 (left: 18)  -> 18 / 2 = 9 -> There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 + 2 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 + 2 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 11 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 18 11) -> 18 / 11 \u2248 1.63636363636 (left: 1.63636363636)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 - 7 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 2 3 5 -> 5 - 2 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176) -> 176 * 2 = 352",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 16 / 11 = 1.4545454545454546 (left: 1.4545454545454546)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 16 / 11 = 1.4545454545454546 (left: 1.4545454545454546) -> 1.4545454545454546 / 2 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 * 7 = 63 (left: 8 63)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 * 7 = 63 (left: 8 63) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> 0.6875 - 2 = -1.3125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 16 13)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 5 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 / 17 \u2248 0.41 (left: 0.41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = 1.125 (left: 7 1.125)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 9 - 1.4 = 7.6 (left: 7.6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 10 12) -> 4 + 10 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10 12) -> 4 + 10 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 2 12 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 2 12 16) -> 12 + 2 = 14 (left: 14 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 2 18)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> Input: 10 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> Input: 10 24 -> 10 + 24 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72 36) -> 72 - 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 2 + 64 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> There are no possible next steps. The result is 36.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 * 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step: -> 8 * 2 = 16 (left: 16 14) -> 16 / 14 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps as the input is only a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps as the input is only a single number. -> The input is not valid as it is only a single number. A valid input should contain at least two numbers and an operator.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 + 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 + 3 -> 12 + 3 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 - 13 = -2 (left: -2 12) -> -24 + 14 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 -> 15 + 8 = 23 (left: 8 13 23)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 * 12 = 132 (left: 132 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "300"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 12 * 25 = 300 (left: 300) -> 300 * 2 = 600 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1716"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716) -> 17 - 16 = 1 (left: 1) ",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11.91"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 13 - 1.09 = 11.91 (left: 11.91) -> There is only one number provided, so there are no possible next steps for calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 13 - 1.09 = 11.91 (left: 11.91) -> There is only one number provided, so there are no possible next steps for calculation. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25 36) -> 25 - 12 = 13 (left: 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 12"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 * 11 = 99 (left: 4 12 99)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 11 = 99 (left: 4 12 99) -> 99 - 4 = 95 (left: 12 95)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "11.91"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 13 - 1.09 = 11.91 (left: 11.91) -> 11 - 9.1 = 1.9 (left: 1.9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12 + 3 = 15"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 + 3 -> 12 + 3 = 15 -> 3 + 12 = 15 (left: 15 15)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 12 * 25 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 13 - 1.09 = 11.91 (left: 11.91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1716"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716) -> 17 - 1 - 6 = 10 (left: ",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "72"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps with just the number 72 provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 13.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 13 - 1.09 = 11.91 (left: 11.91)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "Input: 3 5 7"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7 -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7 -> 5 * 7 = 35 (left: 3 35) -> 3 + 35 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 + 36 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36.75"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 36.75) -> 36.75 + 2 = 38.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 36.75) -> 36.75 + 2 = 38.75 -> 36.75 / 2 = 18.375",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 / 11 = 1.09 (left: 1.09 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 36.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 =  -> 12 - 2.25 = 9.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 12"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 1 * 9 * 2 = 18 (left: 192)",
                "Pruning": "NA"
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 - 1 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 ^ 4 = 234256 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 10 / 5 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 8 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22) -> 22 / 1 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22) -> 22 / 1 = 22 (left: 8 22) -> 22 - 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 56"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 3 * 9 = 27 (left: 27 27) -> 27 - 27 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "No possible next steps, the input value is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 52 * 2 = 104 (left: 104",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 2 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 + 2 = 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 7 * 8 = 56 (left: 56 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> 60 / 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> No possible next steps, the input value is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> There are many possible next steps for the number 60, depending on the operations allowed. Some examples include:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 / 4",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null
            },
            "Step 4": {
                "Step": " -> - 8 - 8 = 0 (left: 2 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 56"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 27 -> 27 - 2 = 25 (left: 2 25)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1 8 22"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 52 + 2 = 54 (left: 54) ",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 56"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 2 = 4 (left: 4 24)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> 60 * 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 56"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> Input: 10 5 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> Input: 10 5 2 -> 2 + 5 = 7 (left: 7 2)",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 12)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 (left: 4)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12 12)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 + 12 = 18 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (12 / 2) * (6 * 6) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> Input:"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2 12)"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 / 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 / 2 = 4 -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There is only one possible next step with 0.75:"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 + 2 = 2.75",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 5 6 7) -> 6 - 5 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 2 * 0.75 = 1.5 (left: 1.5 2 1.5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 + 2 = 2.75",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 - 2 = -1.25",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 + 2 = 2.75",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 - 2 = -1.25",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 * 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 * 1 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75. -> There is no possible next step with 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 2 - 0.75 = 1.25",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 - 2 = -1.25",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 2 - 0.75 = 1.25 (left: 0.75 1.25 ",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 + 12 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 + 12 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0 16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 / 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 16 = 1 (left: 1) -> There is only one number, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 1 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 + 12 = 204 (left: 204)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 12 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 12 22) -> 12 - 6 = 6 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.66666666667 (left: 1.66666666667 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.66666666667 12"
                }
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.66666666667 (left: 1.66666666667 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 13.66666666667)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12 12 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 1 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 2 24) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Input: 2 7 8 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Input: 2 7 8 9 -> 7 + 2 = 9 (left: 9 8 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 + 12 = 24 (left: 16 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 1 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 1 24) -> 1 / 24 = 0.041666666666666664 (left: 0.041666",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Input: 24 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Input: 24 24 -> 24 + 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left:  -> It seems like you did not provide any input to continue the calculations. Please provide the numbers you would like to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 12 24) -> 24 / 12 = 2 (left: 1 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible next steps: -> - No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 - 12 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 - 12 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible -> It looks like you forgot to provide the initial numbers for the next steps. Please provide the numbers for the next calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 1 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 * 2 = 1.4285714285714286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 14 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 14 140) -> 140 / 10 = 14 (left: 14)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 10 24) -> 24 / 10 = 2.4 (left: 2.4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 40 / 1 = 40 (left: 40 40)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 - 10 = 130 (left: 130)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 + 2 = 2.7142857142857144",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 5) + (5 + 9)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 8 - 1.4 = 6.6 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4) -> There is only one possible next step: 4."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 - 2 = 138 (left: 138)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> There are no possible next steps with the input of 1.4 as it is a single number."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 - 12 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 6 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64) -> 2.64 + 8 = 10.64 (left: 8 10.64)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91) -> There are no possible next steps with the input 91.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Input: 1 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Input: 1 2 -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 + 5 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 + 5 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps with the input 1.6666666666666667.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 / 1.2 = 9.17 (left: 9.17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 10) -> 1.66666666667 + 10 = 11.6666666667 (left: 11",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "41 + 2 = 43"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 5 = 30 (left: 11 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 5 = 30 (left: 11 30) -> 30 / 11 = 2.727272727272727 (left: 2.727272727272727)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41) -> 41 + 1 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60) -> 11 * 60 = 660 (left: 660)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 - 1.2 = 9.8 (left: 9.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 1 = 10 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 1 1) -> 5 * 3 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 * 25 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 * 25 = 1650 (left: 1650) -> 1 + 6 + 5 + 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "41 + 1 = 42"
                }
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined -> Division by zero is undefined in mathematics.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 48 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 48 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 9 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 9 17) -> 17 - 9 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "0 48"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 9 = 1 (left: 6 8 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 9 = 1 (left: 6 8 1) -> 6 + 8 = 14 (left: 14 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 is undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 is undefined -> Error: Division by zero is undefined. There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 48 - 1 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48) -> There are no possible next steps with just the number 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined (left: 0 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined (left: 0 48) -> 48 - 0 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "0 48"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48) -> 48 * 2 = 96",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 is undefined",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 is undefined -> Division by 0 is undefined in mathematics.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 2 = 24 (left: 24 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 2 = 24 (left: 24 48) -> 24 * 48 = 1152 (left: 1152)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "0 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 48 / 1 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1 -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 2 + 9 = 11 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 1 + 48 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left: 0) -> No possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 1 * 48 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 1 * 48 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 14 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48) -> 48 - 2 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> Input: 5 7 13",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> Input: 5 7 13 -> 7 / 5 = 1.4 (left: 1.4 13)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 48 = 432 (left: 9 432)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 48 = 432 (left: 9 432) -> 9 + 432 = 441 (left: 441)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 48 / 1 = 48 (left: 48 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 / 48 = 1 (left: 1 48) -> 48 / 1 = 48 (left: 48 48) -> 48 + 48 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 48"
                }
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 12\nSteps:\n3 * 4 = 12 (left: 2 12 12)\n12 / 2 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (2 * 3) * (4 + 12) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 7"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (3 + 4) * (2 * 6) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (3 + 5) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 / 3 = 3.33 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 7 9\nSteps:\n2 * 9 = 18 (left: 3 7 18)\n18 - 7 = 11 (left: 3 11)\n11 + 3 = 14 (left: 14)\n14 * 1 = 24 (left: 24)\nAnswer: ((2 * 9) - 7) + 3 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24\nAnswer: ((3 + 6) * 2) - 4 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 7"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n18 - 4 = 14 (left: 14)\n14 + 4 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) + 4 +",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 7 7 3 2\nSteps:\n7 - 3 = 4 (left: 4 7 2)\n7 - 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 2) + 4 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 5 7\nSteps:\n5 * 3 = 15 (left: 2 7 15)\n2 + 7 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6)\nAnswer: (2 + 7) * (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 + 2 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((5 + 7) * (3 + 2)) / 2.5 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 7 7 3 3\nSteps:\n7 + 3 = 10 (left: 7 10 3)\n7 - 3 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 + 3) - 7) * 4 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 2 3 12\nSteps:\n3 * 2 = 6 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((2 * 3) * 2) + 12 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 7 2 3 6\nSteps:\n7 * 3 = 21 (left: 2 6 21)\n21 - 6 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((7 * 3) - 6) + 2 + 7 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 / 7 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 5\nSteps:\n3 + 5 = 8 (left: 2 4 8)\n8 * 4 = 32 (left: 2 32)\n32 - 2 = 30 (left: 30)\nAnswer: (2 + 3 + 5) * 4 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 12\nSteps:\n2 * 12 = 24 (left: 3 4 24)\n3 * 4 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (2 * 12) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n3 + 5 = 8 (left: 8 14)\n8 + 14 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 7) + 3) + 5 + 2 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 6 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 6 18) -> 3 + 6 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n21 - 2 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (2 - 3 + 5) * (7 + 5) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 2 2 3 4\nSteps:\n2 * 3 = 6 (left: 2 4 6)\n6 + 2 = 8 (left: 4 8)\n8 * 4 = 32 (left: 32)\nAnswer: (2 * 3) + (2 + 4) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 7 3 5 1\nSteps:\n7 - 5 = 2 (left: 2 3 1)\n2 + 3 = 5 (left: 5 1)\n5 * 5 = 25 (left: 25)\nAnswer: (7 - 5 + 3) * 5 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: 6 + (3 * 6) = 24 -> Input: 1 3 5 7\nSteps:\n5 * 3 = 15 (left: 1 7 15)\n15 - 7 = 8 (left: 1 8)\n8 * 1 = 8 (left: 24)\nAnswer: (5 * 3) - (7 - 1) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 +  -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 + 13 = 14.5 (left: 14.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 + 7 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 + 7 = 10 -> 3 + 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 13 15) -> 13 * 15 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 - 2 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 + 13 = 14.5 (left: 14.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> Input: 3 4 6 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 5 10\nSteps:\n10 - 5 = 5 (left: 2 3 5)\n2 * 3 = 6 (left: 5 6)\n6 * 5 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((10 - 5) * (2 * 3)) - 6 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 7 2 3 9\nSteps:\n7 * 3 = 21 (left: 2 9 21)\n21 - 9 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 * 3) - 9) * 4 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "9 + 2 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no more possible next steps with the numbers provided."
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> N/A",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> N/A -> Please provide a set of numbers as input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.8333 5"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 / 9 = 1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 / 9 = 1 (left: -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 * 9 = 99 (left: 99 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no more possible next steps with the numbers provided."
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> There are no more possible next steps with the numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> There are no more possible next steps with the numbers provided. -> There are no more possible next steps with the numbers provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1. -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no more possible next steps with the numbers provided."
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> No more possible next steps. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 / 11 = 0.818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 1 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 1 1 11) -> 1 - 1 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 6 11 17) -> 11 * 6 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no more possible next steps with the numbers provided."
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> There are no more possible next steps with the numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided. -> There are no more possible next steps with the numbers provided. -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 + 11 = 17 (left: 17 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.22 (left: 1.22 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = -> 9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 4752)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left:  -> There are no more possible next steps with the numbers provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 11 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "9 * 11 = 99 (left: 6 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 11 = 99 (left: 6 8  -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 * 6 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 * 6 = 66 (left: 66) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 3) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 * 1 = 8 (left: 8 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (3 * (11 - 3)) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 3) * (3 * 1) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> Input: 4 5"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 11) -> 11 - 3 = 8 (left: 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2.67 (left: 1 2.67)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2.67 (left: 1 2.67) -> 1 / 2.67 = 0.375 (left: 0.375)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 11) -> 11 + 3 = 14 (left: 14)"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 4 10 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 10 / 4 = 2.5 (left: 2.5 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.5 2"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 10 / 4 = 2.5 (left: 2.5 2) -> 2.5 - 2 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 10 / 4 = 2.5 (left: 2.5 2) -> 2.5 - 2 = 0.5 (left: 0.5) -> 0.5 * 2 = 1 (left: )",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "Please provide more than one number to evaluate possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, since there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, since there is only one number left. -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 14) -> 1.1818181818181819 + 14 = 15.181818181818181 (left: 15.181818181818181)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There is only one possible next step: 16 / 2 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There is only one possible next step: 16 / 2 = 8 -> There is only one possible next step: 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps as there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 4.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just the number 16. -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.181818 + 2 = 3.181818"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 14) -> 1.1818181818181819 + 14 = 15.181818181818182 (left: 15.181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24) -> 24 / 14 = 1.71 (left: 1.71)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 10.153846153846153)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 0.8461538461538461"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 / 0.8461538461538461 = 14.181818181818182 (left: 14.181818181818182)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.181818 + 2 = 3.181818"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left. -> Only one number left. No further calculations possible.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 + 143 = 157 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "11 1.272727272 1.272727272"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 11 * 1.272727272 = 13.818999992 (left: 1.272727272 13.818999992)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 11 * 1.272727272 = 13.818999992 (left: 1.272727272 13.818999992) -> 13.818999992 - 1.272727",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> - 16 + 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> - 16 + 2 = 18 -> -16 * 2 = -32 (left: 18 -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461 14) -> 0.8461538461538461 + 14 = 14.846153846153846 (left: 14.846153846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.5 2"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 10 / 4 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 10 / 4 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> Input: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> Input:  -> It seems there was a duplication in the input provided. Could you please provide a new set of numbers for me to suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 - 143 = -129 (left: -129)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 - 0.8461538461538461 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 - 0.8461538461538461 = -> 12 - 0.8461538461538461 = 11.153846153846154",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with only one number provided. -> Please provide more than one number to evaluate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 - 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846154 (left: 10.153846153846154)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.1818181818181819 11 40"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 40 / 11 = 3.6363636363636362 (left: 1.181818",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 40 / 11 = 3.6363636363636362 (left: 1.181818 -> 1.181818 + 2 = 3.181818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 + 11 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 - 0.8461538461538461 = 11.153846153846154 (left: 0.8461538461538461 11.153846153846154)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 - 0.8461538461538461 = 11.153846153846154 (left: 0.8461538461538461 11.153846153846154) -> 0.8461538461538461 + 11.153846153846154 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 18 7)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> Input:"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> Input: 4 5 6"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)"
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 4 + 5 = 9 (left: 6 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 5 9 2 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1.42857142857 10 12"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 9 * 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None.",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps for 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps for 36. -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 72 + 2 =",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 8 = 28 (left: 8 28)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 8 = 28 (left: 8 28) -> 28 - 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 7 = 17 -> 17 * 7 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the input 36 as it is a single number. -> There are no possible next steps for the input 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72 36) -> 72 - 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 10.5714285714 / 12 = 0.88095238095 (left: 0.88095238095 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one possible next step which is 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one possible next step which is 36 / 2 = 18 -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any other numbers to create new equations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any other numbers to create new equations. -> None",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 6 + 8 = 14 (left: 14 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 6 + 8 = 14 (left: 14 36) -> 14 * 36 = 504 (left: 504)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 3 12) -> 12 + 7 = 19 (left: 3 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 since it is a single number and cannot be combined with any other numbers from the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 since it is a single number and cannot be combined with any other numbers from the input. -> There are no possible next steps for the number 36 since it is a single number and cannot be combined with any other numbers from the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 7 9"
                }
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.1428571428571428 (left: 1.142857142857142",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 * 8 = 72 (left: 7 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 * 8 = 72 (left: 7 72) -> 72 - 7 = 65 (left: 7 65)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 2 5 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 2 5 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 + 17 = 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7  -> 5 / 7 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 + 25 = 50 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 / 9 = 6.2222 (left: 6.2222)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.14 (left: 1.14 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.14 (left: 1.14 9) -> 1.14 / 9 = 0.12666666666666668 (left: 0.12666666666666668)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 + 17 = 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 - 7 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 14 11) -> 14 * 11 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 / 25 = 1 (left: )",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "25"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 + 17 = 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1.57 (left: 1.57 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 35 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 + 17 = 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 / 2 = 17.5 (left: 17.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 / 2 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 10 + 7 = 17 (left: 17 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.14 (left: 9 1.14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.14 (left: 9 1.14) -> 9 - 1 = 8 (left: 1.14 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 - 2 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 - 2 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 5": {
                "Step": "7 * 11 = 77 (left: 2 5 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 + 17 = 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 9 * 56 = 504 (left: 504)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> 25 + 2 = 27 -> 25 - 2 = 23 (left: 23 + 2 = 25)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 / 8 = 4.625 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 8 = 1.125 (left: 1.125 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 8 = 1.125 (left: 1.125 8) -> 8 - 1.125 = 6.875 (left: 6.875)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> There are no possible next steps with just the input of 25. More numbers or operations are needed to generate possible calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25) -> There are no possible next steps with just the input of 25. More numbers or operations are needed to generate possible calculations. -> 25 * 5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 + 17 = 24"
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 4 + 2 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 9 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 3 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 - 14 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There is only one possible next step: 3 + 3 = 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857142857 (left: 0.642857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> -3 + 14 = 11 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 9 = 33 (left: 6 33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 9 = 33 (left: 6 33) -> 6 * 33 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> 3 + 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> 3 + 4 = 7 (left: 7 5) -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 9 - 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps for the number 96.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps with the number 96 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 / 90 = 0.06666666666666667 (left: 0.06666666666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 / 90 = 0.06666666666666667 (left: 0.06666666666666667) -> 0.06666666666666667 + 2 = 2.0666666666666664",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 - 12 = 78 (left: 6 78)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 * 9 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 * 9 = 54 (left: 54 22) -> 54 + 22 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> There are no possible next steps as there are no other numbers to perform operations with. The only remaining number is 15.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 9 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 9 10) -> 6 / 9 = 0.6666666666666666 (left: 0.666666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 9 10) -> 6 / 9 = 0.6666666666666666 (left: 0.666666666666666 -> 0.666666666666666 + 0.666666666666666 = 1.33333333333333 (left: 1.33333333333333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 4 = 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "72 19"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 / 5 = 108",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6 90"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps with the number 96.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 22 27 180",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 / 5 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8 + 4 = 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6 90"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 15 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 / 90 = 0.06666666666666667 (left: 0.06666666666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 / 90 = 0.06666666666666667 (left: 0.06666666666666667) -> 0.06666666666666667 * 2 = 0.13333333333333334",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 - 5 = 535 (left: ",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 22"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 12 - 10 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 * 2 = 1080 (left: 1080)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 9 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> There are no possible next steps for the input 84 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 6 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "108 54"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 9 * 12 = 108 (left: 108 54) -> 108 + 54 = 162 (left: 162)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 9 * 12 = 108 (left: 108 54) -> 108 + 54 = 162 (left: 162) -> 1 + 6 + 2 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 6 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 6 3  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 * 12 = 648 (left: 648)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps for the number 18. -> None, since 18 is not a prime number and cannot be formed by combining the given numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 + 9 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 + 9 = 21 (left: 21 27) -> 21 / 27 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 6 18 216 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 + 12 = 21 (left: 6 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 + 12 = 21 (left: 6 21) -> 21 / 6 = 3.5 (left: 3.5 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps as there are no other numbers to operate with. -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 + 12 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 9 * 12 = 108 (left: 108 54)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> 18 - 18 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 =  -> 27 - 12 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 + 6 = 18 (left: 9 9 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 6 = 18 (left: 9 9 18) -> Input: 7 7 7 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15) -> 12 * 15 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 6 * 18 = 108 (left: 18) -> There are no possible next steps with just the number 18. -> 18 / 2 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 / 12 = 1.5 (left: 1.5 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 6 3 12) -> 3 * 12 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 27 + 3 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "108 54"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 9 * 12 = 108 (left: 108 54) -> 108 - 54 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 9 * 12 = 108 (left: 108 54) -> 108 - 54 = 54 (left: 54) -> 54 - 2 = 52",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 6 / 3 ="
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((3 * 2) + 6) + 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 0 12 6 6",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 0 12 6 6 -> 12 / 6 = 2 (left: 0 2 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It seems like there was an error in the input provided. Can you please provide the numbers you would like to use for the next steps?"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 12 = 1 (left: 3 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 12 = 1 (left: 3 1 12) -> 3 * 12 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input provided."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360)"
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 6 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 6 2 -> 5 * 6 = 30 (left: 30 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 4 - 12 = -8 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 - 11 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 - 11 = -7 (left: -7) -> -7 - 8 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 5 + 12 = 17 (left: 17 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 + 2 = 7 (left: 4 7) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 3 2) -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 * 4 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 * 4 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 20"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 * 4 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 * 4 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 10 -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 3 * 9 = 27 -> 3 + 9 = 12 (left: 12 = 27)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 4 * 5 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> 2.5 + 2 = 4.5 (left: 2.5 4.5)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 6 / 3 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 7 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 7 9 -> 5 + 7 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 3 + 9 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left:",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10) -> 1.5 + 10 = 11.5 (left: 11.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> Input: 2 + 6 = 8 (left: )",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> Input: 2 + 6 = 8 (left: ) -> To provide possible next steps, I would need an input. Please provide a set of numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 8 * 2 = 16 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 8 * 2 = 16 (left -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 - 2 = 2 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 - 2 = 2 (left -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No further calculations can be done with only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6666666666666666 (left: 0.666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input of 0.666 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 / 2 = 2 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 / 2 = 2 (left -> 16 +",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 * 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No further calculations can be done with only one number provided."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 6"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 2 + 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 2 + 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14) -> No further calculations can be done with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No further calculations can be done with only one number provided."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 4 10"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 10 / 4 = 2.5 (left: 2.5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 10 / 4 = 2.5 (left: 2.5 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 8 + 4 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 8 + 4 = 12 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 / 4 = 2 (left:"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 + 4 = 8 (left:)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: -> 4 + 4 = 8 (left:) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No further calculations can be done with only one number provided."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 2 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No further calculations can be done with only one number provided."
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 8 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 3 4"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 / 3 = 1.3333333333333333 (left: 0 1.3333333333333333)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 5 * 6 = 30",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 5 * 6 = 30 -> 5 + 6 = 11 (left: 11 = 30)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "9 - 3 = 6 (left"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left -> 9 / 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left -> 9 / 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 3 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 3 3 7) -> Input: 4 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7) -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 - 24 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 3 1"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 3 3 1) -> 3 + 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 3 3 1) -> 3 + 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)"
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 / 14 = 0.07142857143 (left: 0.07142857143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 / 14 = 0.07142857143 (left: 0.07142857143) -> 0.07142857143 / 2 = 0.035714285715",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 2 * 7 = 14 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 2 * 7 = 14 ( -> 14 / 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 =  -> 5 / 2 = 2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3 (left: 2 3 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3 (left: 2 3  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14 14) -> 14 / 14 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 4 3.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 7 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 2"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 2 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 - 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "2 15"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> No possible next steps, the input is already at the target number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 - 2 = 0 (left: 0 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 - 2 = 0 (left: 0 5) -> 5 / 0 = undefined (division by zero is undefined)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> There are no possible next steps with the number 15.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 5) -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 + 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 4) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2  -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 * 2 = 20 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No further steps can be taken with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 + 1 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 + 1 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> Input: 3 7 10",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756) -> 756 / 6 = 126 (left: 126)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8.75 11"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 - 11 = -2.25 (left: -2.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 - 11 = -2.25 (left: -2.25) -> There are no possible next steps for the input -2.25.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 9 10"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 7 9 10) -> 10 - 9 = 1 (left: 7 1 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 9 10) -> 10 - 9 = 1 (left: 7 1 10) -> 10 / 1 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756) -> 7 * 5 * 6 = 210 (left: 210)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 4.5 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 3 + 7 = 10 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 + 36 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 + 36 = 57 (left: 57) -> 57 * 5 = 285 (",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 + 9 = 13 (left: 9 13) -> 9 / 13 = 0.6923076923 (left: 0.6923076923)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 11) -> 10 + 11 = 21 (left: 5 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8.75 11"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 + 11 = 19.75 (left: 19.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 + 11 = 19.75 (left: 19.75) -> There are no possible next steps with just the number 19.75.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 * 4 = 44 (left: 44 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8.75 11"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 - 11 = -2.25 (left: -2.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 - 11 = -2.25 (left: -2.25) -> There are no possible next steps for the input -2.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 + 36 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 + 36 = 57 (left: 57) -> 5 + 7 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 7 + 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 7 + 3 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "45"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There is only one number, so no further calculations can be done.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There is only one number, so no further calculations can be done. -> Input: 5",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 12 + 3 = 15 (left: 3 15) -> 15 - 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 6 = 9 (left: 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 + 36 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 + 36 = 57 (left: 57) -> 57 + 5 = 62 (left: 62)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 / 10 = 3.6 (left: 11 3.6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 / 10 = 3.6 (left: 11 3.6) -> 11 - 3.6 = 7.4 (left: 7.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 9 13) -> Input: 3 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8.75 11"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 - 11 = -2.25 (left: -2.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 11 - 2.25 = 8.75 (left: 8.75 11) -> 8.75 - 11 = -2.25 (left: -2.25) -> -2.25 + 2 = -0.25",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 * 4 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 - 8 = -50 (left: -8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 / 2 = -21 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 1"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 3 = 18 (left: 18) -> There are no possible next steps as there are no other numbers given to perform operations on in this input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 3 * 2 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 5 + 5 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 + 2 = -40 (left: 2)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input 42."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps as there are not enough numbers provided for an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 / 7 = 1.57 (left: 1.57 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with just the input 42.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 13 * 23 = 299 (left: 299)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 -> 21 - 63 = -42 (left: -42 84)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 + 11 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 * 3 * 2 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input 42."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> Input: 4 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> Input: 4 10 -> 10 - 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps as there are not enough numbers provided for an operation."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 21 + 31 = 52 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 - 7 = 4 (left: 4 11 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 3 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 3 - 2 = 1 (left: 1 3)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.72727272727 (left: 5.72727272727)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.72727272727 (left: 5.72727272727) -> 5.72727272727 + 2 = 7.72727272727",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 10 11) -> 10 * 2 = 20 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> 42 / 2 = 21",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 1"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 1 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 1 4 12) -> 12 - 1 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 1"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 1"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Input: 3 9 -> 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 1 9 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 1 9 7) -> 7 + 1 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 1"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 + 1 = 5 (left: 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7) -> 7 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 1 4) -> 4 * 1 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4 1"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5 6) -> 6 - 5 = 1 (left: 4 1) -> 4 * 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> Input: 6 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 27"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23) -> 23 + 2 = 25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 - 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 3 + 9 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 27"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 4 + 27 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 4 + 27 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 27"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 9 "
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 4 + 16 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 9 "
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 * 9 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 / 9 = 1.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 - 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 + 12 = 21 (left: 4 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 + 12 = 21 (left: 4 21) -> 21 / 4 = 5.25 (left: 5.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 9 "
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 * 7 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 9 "
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 9 = 12 (left: -> 15 - 3 = 12 (left: 3 9  -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 4 / 3 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 4 * 27 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 4 * 27 = 108 (left: 108) -> 1 + 8 = 9 (left: 9 10)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 27"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> Input: 10 5 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> Input: 10 5 2 -> Input: 6 3",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 9 = 15",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 9 = 15 -> 6 - 9 = -3 (left: -3 9 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "2 6"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 6 + 9 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "54 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 * 8 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 * 8 = 432 (left: 432) -> 4 / 3 = 1.33 (left: 1.33 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 6 / 3) * 8 = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate on."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps as there are no more numbers to operate on. -> Input: N/A",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps as there are no more numbers to operate on. -> Input: N/A -> Please provide a set of numbers for the next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (6 + (3 / 3)) * 8 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "54 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 / 8 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 / 8 = 6.75 (left: 6.75) -> 6.75 * 2 = 13.5 (left: 13.5 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps as there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 8 / 36 = 0.22222 (left: 0.22222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) ",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 / 6 = 1.33 (left: 0 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 / 6 = 1.33 (left: 0 1.33) -> 0 * 1.33 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "54 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 + 8 = 62 (left: 62)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 + 8 = 62 (left: 62) -> 6 + 2 = 8",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06667 (left: 1.06667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06667 (left: 1.06667) -> 1.06667 * 2 = 2.13334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31)  -> 31 + 2 = 33",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "4 + 7 = 11 (left: 4 11 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 8 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667) -> There is only one possible next step for the input 1.0666666666666667:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.06666666667 31"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31) -> 31 - 1.06666666667 = 29.93333333333 (left: 29.93333333333)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 3"
                }
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.06666666667 31"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 3"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 * 8 = 56 (left: 8 8 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 * 8 = 56 (left: 8 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 7  -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 16 / 8 = 2 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 4 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 4 7  -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 / 2 = 0.6666666666666666 (left: 0.666666666666666",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.06666666667 31"
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> Input: 3 5 7 9"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 - 12 = -1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 - 12 = -1 (left:  -> It seems like you might have missed providing an input. Please enter a set of numbers for me to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 33 "
                }
            },
            "Step 3": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 5 + 33 = 38 (left: 38)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 12) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 12 18)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 55 12"
                }
            },
            "Step 3": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 3 - 12 = -"
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) - (9 - 3) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 =  -> 10 / 4 = 2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * (4 + 6)) / 3 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> In each of the given inputs, the numbers can be manipulated using basic arithmetic operations to obtain the desired result of 24.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n6 - 3 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (3 * 3) * (6 + 8) = 72 / 3 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 + 2 = 2.7142857142857144 (left: 2.7142857142857144)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.714 (left: 0.714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.714 (left: 0.714) -> 0.714 * 0.714 = 0.510996 (left: 0.714 0.510996)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 + 6 = 16 (left: 6 16 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 240) -> There are no possible next steps for the number 240 as it is not possible to combine or operate with it further using the given operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 8 6)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8)\nAnswer: ((3 + 3) * 8) / 6 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 9 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 8\nSteps:\n3 * 8 = 24 (left: 4 5 24)\n5 - 4 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (5 - 4) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 / 6 = 22 (left: 22)\n22 - 11 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + ",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 6 / 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 240) -> There is only one number in the input, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: ((8 - 3) + 5) * 9 = 72",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> Possible next steps: -> There are no possible next steps with the current numbers provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left: -> 10 - 4 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> Input: 3 9 15 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> Input: 3 9 15  -> 15 - 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 6 7 5\nSteps:\n6 * 5 = 30 (left: 3 7 30)\n30 - 7 = 23 (left: 3 23)\n23 - 3 = 20 (left: 20)\nAnswer: ((6 * 5) - 7) - 3 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10) -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4)\n3 + 4 = 7 (left: 7)\n7 * 24 = 168 (left: 168)\nAnswer: (3 * 8) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> There are no possible next steps for the input 1.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 + 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (6 + 3) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12"
                }
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 8 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 + ",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 9) * 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 6 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((3 + 6) - 4) * 5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 * 4 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 * 4 = 24 (left: 24 9) -> 24 * 9 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left: -> 13 * 3 = 39 (left: 3 39)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333 (left: 0.8333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 * 3 = 24 (left: 24 8)\nAnswer: (3 + 5) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10) -> 15 - 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 - ",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (9 + 13) + (4 * 6) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (9 + 13) + (4 * 6) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (3 + 5) * (4 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 - 72 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * (9 *",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 5 6 9\nSteps:\n3 * 9 = 27 (left: 5 6 27)\n27 - 6 = 21 (left: 5 21)\n21 - 5 = 16 (left: 16)\nAnswer: ((3 * 9) - 6) - 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 -> No possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 13) -> 13 - 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: (3 + 5) * (8 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 - 6 = -",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 - 6 = - -> 4 - 6 = -2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * 6 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (2 * 3) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 - 6 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 - 6 = 7 (left: 3 7) -> 7 / 3 = 2.33333333333 (left: 2.33333333333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 3 3\nSteps:\n3 + 3 = 6 (left: 3 3 6)\n3 * 6 = 18 (left: 3 18)\n3 * 18 = 24 (left: 24)\nAnswer: 3 * (3 * (3 + 3)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 / 9 = 1.11 (left: 1.11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4) -> 0.6666666666666666 + 4 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) / 3 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 - 3 = 2 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 3 = 2 (left: 2 6 11) -> 2 * 6 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> Input: 5 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> Input: 5 9 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 4 * 9 = 36",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 4 * 9 = 36 -> 4 + 9 = 13 (left: 13 = 36)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11  -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 24)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 + 3 = 14 (left: 14 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> Input: 4 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 2.66667."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 3 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 3 = 8 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 5 - 4 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) ",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just one number input."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 15 / 11 = 1.36 (left: 6 1.36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 15 / 11 = 1.36 (left: 6 1.36) -> 6 + 1.36 = 7.36 (left: 7.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667) -> There are no possible next steps for the input 2.66667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - (11 - 5)) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 13 / 1.33 = 9.77 (left: 9.77)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 * 2 = 50 (left: 2) ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 + 2 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 ^ 12 = 531441 (left: 531441)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 ^ 12 = 531441 (left: 531441) -> 5 * 3 * 1 * 4 * 4 * 1 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 13 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 13 40) -> 40 - 1 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> 15 + 8 = 23 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> Input: 3 9 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> Input: 3 9 9 -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 9 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 / 1 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 / 1 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 + 2 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 - 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 / 4 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There is only one possible step: 25 divided by 5 equals 5 (left: 5).",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 * 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps with the input 25.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5 5) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 - 13 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 * 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 + 2 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 + 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 + 3 = 15 (left: 15) -> There are no possible next steps with the number 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 - 3 = 6 (left",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> Input: 5 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8  -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 10 / 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4.33333"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33333 (left: 4.33333) -> 4.33333 - 2 = 2.33333",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33333 (left: 4.33333) -> 4.33333 - 2 = 2.33333 -> 4.33333 * 2 = 8.66666",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 10 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 10 5 -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 - 3 = 0 (left: 0 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 - 3 = 0 (left: 0 4) -> 0 + 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 / 22 = 0.27 (left: 0.27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 10 5 -> 10 + 5 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 10 5 -> 10 + 5 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> 15 - 2 = 13 (left: 2 13)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 * 22 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 16"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 + 7 = 16 (left: 7 16) -> 16 - 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "13 / 6 = 2.1666666666666665"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 / 6 =  -> 13 / 6 = 2.1666666666666665 -> 13 + 6 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 + 7 = 16 (left: 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 + 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 + 3 = 7 (left: 3 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22) -> 22 - 9 = 13 (left: 13) -> There are no possible next steps for the input 13.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22) -> 22 - 9 = 13 (left: 13) -> There are no possible next steps for the input 13. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33333 (left: 4.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> 3 * 9 = 27 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.23"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There are no possible next steps for the input 6.23 as it is already a single number and cannot be combined with any other numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There are no possible next steps for the input 6.23 as it is already a single number and cannot be combined with any other numbers. -> There are no possible next steps for the input 6.23 as it is already a single number and cannot be combined with any other numbers.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 + 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 + 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 / 6 = 2.1666666666666665"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 / 6 =  -> 13 / 6 = 2.1666666666666665 -> 13 + 6 = 19 (left: 19 2.1666666666666665)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 / 6 =  -> 13 / 6 = 2.1666666666666665 -> 13 + 6 = 19 (left: 19 2.1666666666666665) -> 19 * 2.1666666666666665 = 41.33333333333333 (left: 41.33333333333333)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Possible",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Possible -> It seems like there may have been a typo or error in the input. Can you please provide the correct input or clarify the question?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 3 = 7 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 3 = 7 (left: -> 4 - 3 = 1 (left: 1 + 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 9"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 / 0.7777777777777778 = 1.0",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 / 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 / 6 =  -> 13 / 6 = 2.1666666666666665",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as the input is empty.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22) -> 22 - 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 15 13) -> 15 / 13 = 1.15384615385 (left: 1.15384615385)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> 3 * 9 = 27 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10) -> 10 / 9 = 1.11111111111 (left: 1.11111111111)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 -",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - -> 10 - 8 = 2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 * 3 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.43 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 + 10 = 11.43 (left: 11.43)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 + 10 = 11.43 (left: 11.43) -> There are no possible next steps with the input 11.43 as it is a single number and not a combination of numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10) -> -3 * 10 = -30 (left: -30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 27 - 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 1 + 9 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.42857 16"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 7 10 16) -> 10 / 7 = 1.42857 (left: 1.42857 16) -> 16 / 1.42857 = 11.18658 (left: 11.18658)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 7 10 16) -> 10 / 7 = 1.42857 (left: 1.42857 16) -> 16 / 1.42857 = 11.18658 (left: 11.18658) -> 11.18658 + 2 = 13.18658",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.43 10"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 / 1.43 = 6.993 (left: 6.993)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 / 1.43 = 6.993 (left: 6.993) -> 6.993 + 2 = 8.993",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.42857 16"
                }
            },
            "Step 7": {
                "Step": "9 + 7 = 16 (left: 7 10 16) -> 10 / 7 = 1.42857 (left: 1.42857 16) -> 16 / 1.42857 = 11.2 (left: 11.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 7 = 16 (left: 7 10 16) -> 10 / 7 = 1.42857 (left: 1.42857 16) -> 16 / 1.42857 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2 as it is a single number and not an expression.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 / 9 = 1.11 (left: 1.11 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 / 9 = 1.11 (left: 1.11 49) -> 49 / 1.11 = 44.14 (left: 44.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> Input:",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 18 14"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 14 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.43 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.43 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 - 1.43 = 8.57 (left: 8.57)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 - 1.43 = 8.57 (left: 8.57) -> There are no possible next steps with the input \"8.57\" as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.43 10"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 + 10 = 11.43 (left: 11.43)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 + 10 = 11.43 (left: 11.43) -> There are no possible next steps for the input 11.43 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10 16"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 16 - 1 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 16 - 1 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the number 70 as it is a single number with no other numbers to operate on."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> Input: 2 20 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> Input: 2 20 16 -> 2 * 20 = 40 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 14"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 5 * 14 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 5 * 14 = 70 (left: 70) -> There are no possible next steps for the number 70 as it is a single number with no other numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> Input: 5 12 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> Input: 5 12 20 -> 5 * 12 = 60 (left: 60 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> Possible",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> Possible -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "27 - 9 ="
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 27 - 9 = -> 27 - 9 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 27 - 9 = -> 27 - 9 = 18 -> 9 - 27 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 11.43 as it is a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 10 10 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "9 + 7 = 16 (left: 7 10 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 7 = 16 (left: 7 10 16) -> 10 / 7 = 1.42857 (left: 1.42857 16)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "16 40"
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 955797,
        "output_tokens": 409930.3115079366,
        "total_cost": 1.092793967261905
    }
}